/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgeHandler, BridgeHandlerInterface } from "../BridgeHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "initialResourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "initialContractAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_updateRecords",
    outputs: [
      {
        internalType: "address",
        name: "_signatureBridgeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_executionChainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bytes32",
        name: "_resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_updateValue",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "updateNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionChainId",
        type: "uint256",
      },
    ],
    name: "getUpdateRecord",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_signatureBridgeAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_executionChainID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_nonce",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "functionSig",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "_resourceID",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "_updateValue",
            type: "bytes32",
          },
        ],
        internalType: "struct BridgeHandler.UpdateRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBridge",
        type: "address",
      },
    ],
    name: "migrateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ca738038062000ca783398101604081905262000034916200022e565b8051825114620000b05760405162461bcd60e51b815260206004820152603c60248201527f696e697469616c5265736f7572636549447320616e6420696e697469616c436f60448201527f6e7472616374416464726573736573206c656e206d69736d6174636800000000606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b0385161781555b8251811015620001355762000120838281518110620000ef57620000ef62000393565b60200260200101518383815181106200010c576200010c62000393565b60200260200101516200013f60201b60201c565b806200012c8162000369565b915050620000cc565b50505050620003bf565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b80516001600160a01b0381168114620001a657600080fd5b919050565b600082601f830112620001bd57600080fd5b81516020620001d6620001d08362000343565b62000310565b80838252828201915082860187848660051b8901011115620001f757600080fd5b60005b8581101562000221576200020e826200018e565b84529284019290840190600101620001fa565b5090979650505050505050565b6000806000606084860312156200024457600080fd5b6200024f846200018e565b602085810151919450906001600160401b03808211156200026f57600080fd5b818701915087601f8301126200028457600080fd5b815162000295620001d08262000343565b8082825285820191508585018b878560051b8801011115620002b657600080fd5b600095505b83861015620002db578051835260019590950194918601918601620002bb565b5060408a01519097509450505080831115620002f657600080fd5b50506200030686828701620001ab565b9150509250925092565b604051601f8201601f191681016001600160401b03811182821017156200033b576200033b620003a9565b604052919050565b60006001600160401b038211156200035f576200035f620003a9565b5060051b60200190565b60006000198214156200038c57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6108d880620003cf6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063c54c2a1111610066578063c54c2a1114610225578063d75a06831461024e578063d7f5b3591461027c578063e248cff21461028f578063ec97d3b4146102a257600080fd5b80630c9e9e14146100a3578063318c136e146101455780636b84724a146101705780637f79bea8146101dd578063b8fa373614610210575b600080fd5b6100ff6100b13660046107d5565b600460208181526000938452604080852090915291835291208054600182015460028301546003840154948401546005909401546001600160a01b03909316949193909260e09290921b9186565b604080516001600160a01b0390971687526020870195909552938501929092526001600160e01b0319166060840152608083015260a082015260c0015b60405180910390f35b600054610158906001600160a01b031681565b6040516001600160a01b03909116815260200161013c565b61018361017e3660046107d5565b6102c2565b60405161013c919081516001600160a01b0316815260208083015190820152604080830151908201526060808301516001600160e01b031916908201526080808301519082015260a0918201519181019190915260c00190565b6102006101eb3660046106f2565b60036020526000908152604090205460ff1681565b604051901515815260200161013c565b61022361021e36600461072d565b61036e565b005b610158610233366004610714565b6001602052600090815260409020546001600160a01b031681565b61026e61025c366004610714565b60056020526000908152604090205481565b60405190815260200161013c565b61022361028a3660046106f2565b6103c6565b61022361029d366004610759565b6103f0565b61026e6102b03660046106f2565b60026020526000908152604090205481565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506000818152600460208181526040808420868552825292839020835160c08101855281546001600160a01b03168152600182015492810192909252600281015493820193909352600383015460e01b6001600160e01b031916606082015290820154608082015260059091015460a08201525b92915050565b61037661067a565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b6103ce61067a565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6103f861067a565b600080368161040a60208287896107f7565b61041391610856565b93506104236024602087896107f7565b61042c91610874565b925061043b85602481896107f7565b60008981526001602052604090205491935091506001600160a01b0316806001600160e01b031985166317a8a97560e01b141561056757600061048160048286886107f7565b61048a91610874565b60e01c9050600061049f6018600487896107f7565b6104a891610821565b60601c905060006104bd602c6018888a6107f7565b6104c691610821565b60601c905060006104db604c602c898b6107f7565b6104e491610856565b6040516317a8a97560e01b81526001600160a01b03858116600483015284811660248301526044820183905263ffffffff87166064830152919250908616906317a8a97590608401600060405180830381600087803b15801561054657600080fd5b505af115801561055a573d6000803e3d6000fd5b505050505050505061066f565b6001600160e01b03198516631c47a49d60e21b141561062b57600061058f60048286886107f7565b61059891610874565b60e01c905060006105ad6018600487896107f7565b6105b691610821565b604051631c47a49d60e21b815260609190911c6004820181905263ffffffff8416602483015291506001600160a01b0384169063711e927490604401600060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b50505050505061066f565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642066756e6374696f6e2073696760601b60448201526064015b60405180910390fd5b505050505050505050565b6000546001600160a01b031633146106d45760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e747261637400006044820152606401610666565b565b80356001600160a01b03811681146106ed57600080fd5b919050565b60006020828403121561070457600080fd5b61070d826106d6565b9392505050565b60006020828403121561072657600080fd5b5035919050565b6000806040838503121561074057600080fd5b82359150610750602084016106d6565b90509250929050565b60008060006040848603121561076e57600080fd5b83359250602084013567ffffffffffffffff8082111561078d57600080fd5b818601915086601f8301126107a157600080fd5b8135818111156107b057600080fd5b8760208285010111156107c257600080fd5b6020830194508093505050509250925092565b600080604083850312156107e857600080fd5b50508035926020909101359150565b6000808585111561080757600080fd5b8386111561081457600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff19813581811691601485101561084e5780818660140360031b1b83161692505b505092915050565b8035602083101561036857600019602084900360031b1b1692915050565b6001600160e01b0319813581811691600485101561084e5760049490940360031b84901b169092169291505056fea264697066735822122073735ddf71e0afad9bb8bcb37da6405a32899e0a81b9f15ce2e1f2e2ce88cd3764736f6c63430008050033";

export class BridgeHandler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeHandler> {
    return super.deploy(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    ) as Promise<BridgeHandler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    );
  }
  attach(address: string): BridgeHandler {
    return super.attach(address) as BridgeHandler;
  }
  connect(signer: Signer): BridgeHandler__factory {
    return super.connect(signer) as BridgeHandler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeHandlerInterface {
    return new utils.Interface(_abi) as BridgeHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeHandler {
    return new Contract(address, _abi, signerOrProvider) as BridgeHandler;
  }
}
