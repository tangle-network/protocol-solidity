/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, BigNumberish, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { IdentityVAnchor, IdentityVAnchorInterface } from '../IdentityVAnchor';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract ISemaphoreGroups',
        name: '_semaphore',
        type: 'address',
      },
      {
        internalType: 'contract IAnchorVerifier',
        name: '_verifier',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: '_levels',
        type: 'uint8',
      },
      {
        internalType: 'contract IHasher',
        name: '_hasher',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_handler',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: '_maxEdges',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: '_groupId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'chainID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'latestLeafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32',
      },
    ],
    name: 'EdgeAddition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'chainID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'latestLeafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32',
      },
    ],
    name: 'EdgeUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'commitment',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'leafIndex',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'Insertion',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'commitment',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedOutput',
        type: 'bytes',
      },
    ],
    name: 'NewCommitment',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'nullifier',
        type: 'bytes32',
      },
    ],
    name: 'NewNullifier',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'key',
        type: 'bytes',
      },
    ],
    name: 'PublicKey',
    type: 'event',
  },
  {
    inputs: [],
    name: 'EVM_CHAIN_ID_TYPE',
    outputs: [
      {
        internalType: 'bytes2',
        name: '',
        type: 'bytes2',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_EXT_AMOUNT',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROOT_HISTORY_SIZE',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ZERO_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_extAmount',
        type: 'uint256',
      },
    ],
    name: '_executeWrapping',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: '_extAmount',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: '_fee',
        type: 'uint256',
      },
    ],
    name: 'calculatePublicAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'commitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maximumDepositAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'configureMaximumDepositLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minimalWithdrawalAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'configureMinimalWithdrawalLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'currentNeighborRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'edgeExistsForChain',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'edgeIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'edgeList',
    outputs: [
      {
        internalType: 'uint256',
        name: 'chainID',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'latestLeafIndex',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'srcResourceID',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'filledSubtrees',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getChainId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getChainIdType',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastRoot',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLatestNeighborEdges',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'chainID',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'root',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'latestLeafIndex',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'srcResourceID',
            type: 'bytes32',
          },
        ],
        internalType: 'struct LinkableAnchor.Edge[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLatestNeighborRoots',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getProposalNonce',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'groupId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'handler',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_chainID',
        type: 'uint256',
      },
    ],
    name: 'hasEdge',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IHasher',
        name: '_hasher',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_left',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_right',
        type: 'bytes32',
      },
    ],
    name: 'hashLeftRight',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher',
    outputs: [
      {
        internalType: 'contract IHasher',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minimalWithdrawalAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_maximumDepositAmount',
        type: 'uint256',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_neighborChainID',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
    ],
    name: 'isKnownNeighborRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_nullifierHash',
        type: 'bytes32',
      },
    ],
    name: 'isSpent',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: '_nullifierHashes',
        type: 'bytes32[]',
      },
    ],
    name: 'isSpentArray',
    outputs: [
      {
        internalType: 'bool[]',
        name: '',
        type: 'bool[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: '_roots',
        type: 'bytes32[]',
      },
    ],
    name: 'isValidRoots',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'levels',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxEdges',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maximumDepositAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minimalWithdrawalAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'neighborRoots',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nextIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'nullifierHashes',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_resourceId',
        type: 'bytes32',
      },
    ],
    name: 'parseChainIdFromResourceId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'roots',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'latestLeafindex',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_handler',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'setHandler',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_verifier',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'setVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'proof',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'identityRoots',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'vanchorRoots',
            type: 'bytes',
          },
          {
            internalType: 'bytes32[]',
            name: 'inputNullifiers',
            type: 'bytes32[]',
          },
          {
            internalType: 'bytes32[2]',
            name: 'outputCommitments',
            type: 'bytes32[2]',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'extDataHash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IdentityVAnchorEncodeInputs.Proof',
        name: '_args',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'extAmount',
            type: 'int256',
          },
          {
            internalType: 'address',
            name: 'relayer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'fee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'refund',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput1',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput2',
            type: 'bytes',
          },
        ],
        internalType: 'struct IdentityVAnchorBase.ExtData',
        name: '_extData',
        type: 'tuple',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'proof',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'identityRoots',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'vanchorRoots',
            type: 'bytes',
          },
          {
            internalType: 'bytes32[]',
            name: 'inputNullifiers',
            type: 'bytes32[]',
          },
          {
            internalType: 'bytes32[2]',
            name: 'outputCommitments',
            type: 'bytes32[2]',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'extDataHash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IdentityVAnchorEncodeInputs.Proof',
        name: '_args',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'extAmount',
            type: 'int256',
          },
          {
            internalType: 'address',
            name: 'relayer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'fee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'refund',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput1',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput2',
            type: 'bytes',
          },
        ],
        internalType: 'struct IdentityVAnchorBase.ExtData',
        name: '_extData',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'transactWrap',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[8]',
        name: '_proof',
        type: 'uint256[8]',
      },
    ],
    name: 'unpackProof',
    outputs: [
      {
        internalType: 'uint256[2]',
        name: '',
        type: 'uint256[2]',
      },
      {
        internalType: 'uint256[2][2]',
        name: '',
        type: 'uint256[2][2]',
      },
      {
        internalType: 'uint256[2]',
        name: '',
        type: 'uint256[2]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'unwrapIntoNative',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'unwrapIntoToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
      {
        internalType: 'uint32',
        name: '_leafIndex',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_srcResourceID',
        type: 'bytes32',
      },
    ],
    name: 'updateEdge',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'verifier',
    outputs: [
      {
        internalType: 'contract IAnchorVerifier',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_minusExtAmount',
        type: 'uint256',
      },
    ],
    name: 'withdrawAndUnwrap',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapNative',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'wrapToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60e06040526000805462010000600160501b03191690556005805463ffffffff191690553480156200003057600080fd5b50604051620051b0380380620051b08339810160408190526200005391620003fd565b868686868581858460ff87168484838383818381620000c55760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff16106200011d5760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000bc565b6000805463ffffffff60501b19166a010000000000000000000063ffffffff851602178155600280546001600160a01b0319166001600160a01b0384161790555b8263ffffffff168163ffffffff1610156200022357600254604051631d052ab160e31b815263ffffffff831660048201526001600160a01b039091169063e82955889060240160206040518083038186803b158015620001bd57600080fd5b505afa158015620001d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f89190620003e3565b63ffffffff8216600090815260036020526040902055806200021a81620004d1565b9150506200015e565b506040805180820190915260025481906001600160a01b031663e82955886200024e600187620004a9565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156200028c57600080fd5b505afa158015620002a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c79190620003e3565b815260200160008152506001600080815260200190815260200160002060008201518160000155602082015181600101559050505050600160048190555083600560046101000a8154816001600160a01b0302191690836001600160a01b031602179055508060ff1660808160ff1660f81b815250505050505083600b60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050505050505050505050826001600160a01b031660a0816001600160a01b031660601b8152505087601160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060c08181525050505050505050505062000527565b805160ff81168114620003de57600080fd5b919050565b600060208284031215620003f657600080fd5b5051919050565b600080600080600080600080610100898b0312156200041b57600080fd5b885162000428816200050e565b60208a01519098506200043b816200050e565b96506200044b60408a01620003cc565b955060608901516200045d816200050e565b60808a015190955062000470816200050e565b60a08a015190945062000483816200050e565b92506200049360c08a01620003cc565b915060e089015190509295985092959890939650565b600063ffffffff83811690831681811015620004c957620004c9620004f8565b039392505050565b600063ffffffff80831681811415620004ee57620004ee620004f8565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146200052457600080fd5b50565b60805160f81c60a05160601c60c051614ba46200060c600039600081816108c10152612f80015260008181610ba301528181610fb90152818161108d0152818161156e01528181611adb01528181611bab01528181611c4101528181611cd20152818161259301528181612b1701528181612bb501528181612c0201528181612dd20152612e6a01526000818161066501528181610c8401528181610cee01528181611261015281816113e7015281816117a70152818161183a015281816121fa01528181612ebf015281816130ce015281816133a001526134830152614ba46000f3fe6080604052600436106103765760003560e01c80638ea3099e116101d1578063c2b40ae411610102578063e70ea87c116100a0578063f5ab0dd61161006f578063f5ab0dd614610b32578063fa73168714610b61578063fc0c546a14610b91578063fc7e9c6f14610bc557600080fd5b8063e70ea87c14610a84578063ec73295914610ab1578063ed33639f14610ae5578063f178e47c14610b0557600080fd5b8063d396d6c0116100dc578063d396d6c0146109d4578063dbc916b8146109f4578063e4a3011614610a34578063e5285dcc14610a5457600080fd5b8063c2b40ae41461094f578063c80916d414610998578063cd87a3b4146109bf57600080fd5b80639ff800631161016f578063a0f44c9211610149578063a0f44c92146108af578063ba70f757146108e3578063bc063e1a146106cf578063c2230d6e1461091157600080fd5b80639ff80063146105a5578063a07b7e1d1461087c578063a0d192f51461088f57600080fd5b806392156311116101ab57806392156311146107f957806394eee0601461082957806395c87d1a1461083c5780639fa12d0b1461084f57600080fd5b80638ea3099e146107a05780638f1c56bd146107c057806390eeb02b146107d657600080fd5b80635d2d766c116102ab57806378abb49b11610249578063840b279111610223578063840b2791146107175780638b7e87821461072d5780638c0d34d81461075e5780638c832b131461078057600080fd5b806378abb49b146106b95780637fe24ffe146106cf578063839df945146106e757600080fd5b80636ad481f3116102855780636ad481f31461062b5780636d9833e31461063357806371523c321461065357806372c1ad031461069957600080fd5b80635d2d766c146105c55780635ea27b9c146105f8578063616e09571461060b57600080fd5b80633408e47011610318578063460b53e3116102f2578063460b53e3146105355780634c830cbd146105555780634ecf518b146105815780634f401241146105a557600080fd5b80633408e470146104b6578063414a37ba146104c957806343e7119f146104fd57600080fd5b80631e627617116103545780631e6276171461040c5780631f7f99f71461042e5780632570b7b4146104505780632b7ac3f31461047e57600080fd5b80630b27fb9a1461037b57806311e4dcb9146103ac57806317cc915c146103dc575b600080fd5b34801561038757600080fd5b5060055463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103b857600080fd5b506103cc6103c7366004614048565b610be9565b60405190151581526020016103a3565b3480156103e857600080fd5b506103cc6103f7366004613eae565b600c6020526000908152604090205460ff1681565b34801561041857600080fd5b50610421610c7e565b6040516103a39190614270565b34801561043a57600080fd5b5061044e610449366004614144565b610e4f565b005b34801561045c57600080fd5b5061047061046b366004614048565b610ea7565b6040519081526020016103a3565b34801561048a57600080fd5b50600b5461049e906001600160a01b031681565b6040516001600160a01b0390911681526020016103a3565b3480156104c257600080fd5b5046610470565b3480156104d557600080fd5b506104707f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561050957600080fd5b50610470610518366004614144565b600960209081526000928352604080842090915290825290205481565b34801561054157600080fd5b5061044e610550366004613cb7565b610fa2565b34801561056157600080fd5b5061056a611028565b60405165ffffffffffff90911681526020016103a3565b34801561058d57600080fd5b5060005461039290600160501b900463ffffffff1681565b3480156105b157600080fd5b5061044e6105c0366004613cb7565b611076565b3480156105d157600080fd5b506103926105e0366004613eae565b600a6020526000908152604090205463ffffffff1681565b61044e6106063660046140cd565b6110c6565b34801561061757600080fd5b506103cc610626366004613d8c565b6111eb565b61044e611557565b34801561063f57600080fd5b506103cc61064e366004613eae565b6115de565b34801561065f57600080fd5b506106877f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103a3565b3480156106a557600080fd5b5061044e6106b4366004613ce3565b61165f565b3480156106c557600080fd5b5061047060105481565b3480156106db57600080fd5b50610470600160f81b81565b3480156106f357600080fd5b506103cc610702366004613eae565b600d6020526000908152604090205460ff1681565b34801561072357600080fd5b50610470600f5481565b34801561073957600080fd5b50610745600160f81b81565b6040516001600160f01b031990911681526020016103a3565b34801561076a57600080fd5b506107736117a1565b6040516103a391906142a8565b34801561078c57600080fd5b5061044e61079b366004614144565b6119e7565b3480156107ac57600080fd5b506104706107bb366004614013565b611a36565b3480156107cc57600080fd5b50610470600e5481565b3480156107e257600080fd5b506000546103929062010000900463ffffffff1681565b34801561080557600080fd5b506103cc610814366004613eae565b60009081526007602052604090205460ff1690565b61044e610837366004613cb7565b611ac2565b61044e61084a366004613c76565b611c72565b34801561085b57600080fd5b5061086f61086a366004613d18565b611d38565b6040516103a3919061422a565b61044e61088a366004613ee0565b611e00565b34801561089b57600080fd5b5061044e6108aa366004613ce3565b6123d0565b3480156108bb57600080fd5b506104707f000000000000000000000000000000000000000000000000000000000000000081565b3480156108ef57600080fd5b506000805462010000900463ffffffff16815260016020526040902054610470565b34801561091d57600080fd5b5061093761092c366004613eae565b65ffffffffffff1690565b6040516001600160401b0390911681526020016103a3565b34801561095b57600080fd5b5061098361096a366004613eae565b6001602081905260009182526040909120805491015482565b604080519283526020830191909152016103a3565b3480156109a457600080fd5b5060055461049e90600160201b90046001600160a01b031681565b3480156109cb57600080fd5b50610392601e81565b3480156109e057600080fd5b5061044e6109ef36600461406a565b612512565b348015610a0057600080fd5b50610a14610a0f366004613eae565b6126fc565b6040805194855260208501939093529183015260608201526080016103a3565b348015610a4057600080fd5b5061044e610a4f366004614048565b612736565b348015610a6057600080fd5b506103cc610a6f366004613eae565b6000908152600c602052604090205460ff1690565b348015610a9057600080fd5b50610470610a9f366004613eae565b60066020526000908152604090205481565b348015610abd57600080fd5b506104707f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610af157600080fd5b5060025461049e906001600160a01b031681565b348015610b1157600080fd5b50610470610b20366004613eae565b60036020526000908152604090205481565b348015610b3e57600080fd5b50610b52610b4d366004613dc0565b61285f565b6040516103a39392919061430c565b348015610b6d57600080fd5b506103cc610b7c366004613eae565b60076020526000908152604090205460ff1681565b348015610b9d57600080fd5b5061049e7f000000000000000000000000000000000000000000000000000000000000000081565b348015610bd157600080fd5b5060005461039290600160301b900463ffffffff1681565b600081610bf857506000610c78565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c4157600192505050610c78565b63ffffffff8116610c505750601e5b80610c5a81614a4e565b9150508163ffffffff168163ffffffff161415610c0f576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610cbd57610cbd614b43565b604051908082528060200260200182016040528015610ce6578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610e4957610d228160016147c7565b60085410610d725760088181548110610d3d57610d3d614b2d565b906000526020600020906004020160010154828281518110610d6157610d61614b2d565b602002602001018181525050610e37565b6002546000546001600160a01b039091169063e829558890610da390600190600160501b900463ffffffff166149c6565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b158015610de057600080fd5b505afa158015610df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e189190613ec7565b828281518110610e2a57610e2a614b2d565b6020026020010181815250505b80610e4181614a6e565b915050610cec565b50919050565b600554600160201b90046001600160a01b03163314610e895760405162461bcd60e51b8152600401610e8090614526565b60405180910390fd5b6005805463ffffffff191663ffffffff8316179055600f8290555050565b6000600160f81b8210610eea5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b6044820152606401610e80565b610ef7600160f81b614ae4565b83138015610f085750600160f81b83125b610f495760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610e80565b6000610f558385614970565b90506000811215610f9857610f6981614ae4565b610f93907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016149af565b610f9a565b805b949350505050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610ff290339086908690600401614206565b600060405180830381600087803b15801561100c57600080fd5b505af1158015611020573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161106b816149eb565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610ff290339086908690600401614206565b6110d083836128e8565b60008260200151131561111657601054826020015111156111035760405162461bcd60e51b8152600401610e80906144dc565b611111818360200151611ac2565b6111c0565b6000826020015112156111c05781516001600160a01b031661117a5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e80565b600f54826020015161118b90614ae4565b10156111a95760405162461bcd60e51b8152600401610e80906143d2565b6111c0818360000151846020015161084a90614ae4565b6060820151156111dc576111dc82604001518360600151612aff565b6111e68383612c63565b505050565b60006112108260008151811061120357611203614b2d565b60200260200101516115de565b61125c5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610e80565b6112877f00000000000000000000000000000000000000000000000000000000000000006001614807565b60ff168251146112d95760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610e80565b600160005b6008548110156113e0576000600882815481106112fd576112fd614b2d565b9060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905061137381600001518684600161135691906147c7565b8151811061136657611366614b2d565b6020026020010151610be9565b6113bf5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610e80565b826113c981614a6e565b9350505080806113d890614a6e565b9150506112de565b505b61140d7f00000000000000000000000000000000000000000000000000000000000000006001614807565b60ff16811461154e576002546000546001600160a01b039091169063e82955889061144790600190600160501b900463ffffffff166149c6565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b15801561148457600080fd5b505afa158015611498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bc9190613ec7565b8382815181106114ce576114ce614b2d565b60200260200101511461153c5760405162461bcd60e51b815260206004820152603060248201527f6e6f6e2d6578697374656e742065646765206973206e6f742073657420746f2060448201526f1d1a1948191959985d5b1d081c9bdbdd60821b6064820152608401610e80565b8061154681614a6e565b9150506113e2565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906115aa9033906000908190600401614206565b6000604051808303818588803b1580156115c357600080fd5b505af11580156115d7573d6000803e3d6000fd5b5050505050565b6000816115ed57506000919050565b60005462010000900463ffffffff16805b63ffffffff8116600090815260016020526040902054841415611625575060019392505050565b63ffffffff81166116345750601e5b8061163e81614a4e565b9150508163ffffffff168163ffffffff1614156115fe575060009392505050565b600554600160201b90046001600160a01b031633146116905760405162461bcd60e51b8152600401610e8090614526565b6001600160a01b0382166116dc5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e80565b60055463ffffffff8083169116106117265760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e80565b60055461173b9063ffffffff166104186147df565b63ffffffff168163ffffffff16106117655760405162461bcd60e51b8152600401610e809061441d565b600580546001600160c01b031916600160201b6001600160a01b03949094169390930263ffffffff19169290921763ffffffff91909116179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156117e0576117e0614b43565b60405190808252806020026020018201604052801561183257816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816117fe5790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610e495761186e8160016147c7565b600854106118ec576008818154811061188957611889614b2d565b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508282815181106118dc576118dc614b2d565b60200260200101819052506119d5565b60408051608081019091526000808252600254905460208301916001600160a01b03169063e82955889061192f90600190600160501b900463ffffffff166149c6565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b15801561196c57600080fd5b505afa158015611980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a49190613ec7565b8152602001600081526020016000801b8152508282815181106119c9576119c9614b2d565b60200260200101819052505b806119df81614a6e565b915050611838565b600554600160201b90046001600160a01b03163314611a185760405162461bcd60e51b8152600401610e8090614526565b6005805463ffffffff191663ffffffff831617905560108290555050565b604051635bb9399560e01b815260048101839052602481018290526000906001600160a01b03851690635bb939959060440160206040518083038186803b158015611a8057600080fd5b505afa158015611a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab89190613ec7565b90505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b158015611b2557600080fd5b505afa158015611b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5d9190613ec7565b90506001600160a01b038316611c0f57803414611b7957600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b158015611bf157600080fd5b505af1158015611c05573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611bd8565b60026004541415611c955760405162461bcd60e51b8152600401610e80906144a5565b6002600455611ca43082612dba565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611d1657600080fd5b505af1158015611d2a573d6000803e3d6000fd5b505060016004555050505050565b60606000826001600160401b03811115611d5457611d54614b43565b604051908082528060200260200182016040528015611d7d578160200160208202803683370190505b50905060005b83811015611df857611dbc858583818110611da057611da0614b2d565b905060200201356000908152600c602052604090205460ff1690565b15611de6576001828281518110611dd557611dd5614b2d565b911515602092830291909101909101525b80611df081614a6e565b915050611d83565b509392505050565b600554600160201b90046001600160a01b03163314611e315760405162461bcd60e51b8152600401610e8090614526565b60026004541415611e545760405162461bcd60e51b8152600401610e80906144a5565b6002600455600065ffffffffffff8216604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b158015611ea657600080fd5b505afa158015611eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ede9190613e8c565b156121f3576001600160401b0381166000908152600660205260409020546008805463ffffffff861692908110611f1757611f17614b2d565b90600052602060002090600402016002015410611f765760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610e80565b600860066000836001600160401b031681526020019081526020016000205481548110611fa557611fa5614b2d565b90600052602060002090600402016002015462010000611fc591906147c7565b8363ffffffff16106120295760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610e80565b600860066000836001600160401b03168152602001908152602001600020548154811061205857612058614b2d565b90600052602060002090600402016003015482146120b85760405162461bcd60e51b815260206004820152601e60248201527f7372635265736f757263654944206d757374206265207468652073616d6500006044820152606401610e80565b6001600160401b0381166000908152600660205260409020546008805463ffffffff86169190839081106120ee576120ee614b2d565b906000526020600020906004020160020181905550846008828154811061211757612117614b2d565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e9161215c9163ffffffff909116906147df565b6121669190614ac1565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff878116918217909255600984528285209085528352928190208b905580519384529189169083015281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a150506123c5565b60085460ff7f000000000000000000000000000000000000000000000000000000000000000016116122675760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610e80565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c815263ffffffff8c1682870181815260608085018e81529786018755958a528351600486027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee583015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690910155878752600686528487208290556009865284872087805286528487208c9055845197885294870192909252918501899052939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b600554600160201b90046001600160a01b031633146124015760405162461bcd60e51b8152600401610e8090614526565b6001600160a01b03821661244d5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e80565b60055463ffffffff8083169116106124975760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e80565b6005546124ac9063ffffffff166104186147df565b63ffffffff168163ffffffff16106124d65760405162461bcd60e51b8152600401610e809061441d565b600b80546001600160a01b0319166001600160a01b0393909316929092179091556005805463ffffffff191663ffffffff909216919091179055565b600260045414156125355760405162461bcd60e51b8152600401610e80906144a5565b600260045561254482826128e8565b60008160200151131561261f57601054816020015111156125775760405162461bcd60e51b8152600401610e80906144dc565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916125cb913391309190600401614206565b602060405180830381600087803b1580156125e557600080fd5b505af11580156125f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261d9190613e8c565b505b6000816020015112156126cd5780516001600160a01b03166126835760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e80565b600f54816020015161269490614ae4565b10156126b25760405162461bcd60e51b8152600401610e80906143d2565b6126cd816000015182602001516126c890614ae4565b612dba565b6060810151156126e9576126e981604001518260600151612aff565b6126f38282612c63565b50506001600455565b6008818154811061270c57600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff16158080156127565750600054600160ff909116105b806127705750303b158015612770575060005460ff166001145b6127d35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e80565b6000805460ff1916600117905580156127f6576000805461ff0019166101001790555b6005805463ffffffff1916905561280c83600f55565b61281582601055565b80156111e6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b61286761392e565b61286f61394c565b61287761392e565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b8260600151518110156129865761292e8360600151828151811061291157612911614b2d565b60200260200101516000908152600c602052604090205460ff1690565b156129745760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610e80565b8061297e81614a6e565b9150506128eb565b507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816040516020016129b9919061455d565b6040516020818303038152906040528051906020012060001c6129dc9190614aad565b60c083015114612a2e5760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610e80565b612a4081602001518260600151610ea7565b8260a0015114612a8a5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610e80565b612a9382612e91565b60005b8260600151518110156111e6576001600c600085606001518481518110612abf57612abf614b2d565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612af790614a6e565b915050612a96565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612b6157600080fd5b505afa158015612b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b999190613ec7565b905081156111e657818110612bdc576111e66001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846131c3565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015612c4657600080fd5b505af1158015612c5a573d6000803e3d6000fd5b50505050505050565b60808201518051602090910151612c7a9190613215565b506080820151516000547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9190612cc090600290600160301b900463ffffffff166149c6565b8360c00151604051612cd493929190614391565b60405180910390a160808201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9060016020020151600054612d2690600190600160301b900463ffffffff166149c6565b8360e00151604051612d3a93929190614391565b60405180910390a160005b8260600151518110156111e6577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce83606001518281518110612d8957612d89614b2d565b6020026020010151604051612da091815260200190565b60405180910390a180612db281614a6e565b915050612d45565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612e1c57600080fd5b505afa158015612e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e549190613ec7565b9050818110612bdc576111e66001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846131c3565b806060015151600214156130a05760008073__$0e28126f39383a7370d616a96392e426db$__63993aefec847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401612efb929190614608565b60006040518083038186803b158015612f1357600080fd5b505af4158015612f27573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612f4f9190810190613f15565b601154602086015160405163fced271f60e01b81529395509193506001600160a01b03169163fced271f91612fa9917f000000000000000000000000000000000000000000000000000000000000000091906004016146e9565b60206040518083038186803b158015612fc157600080fd5b505afa158015612fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ff99190613e8c565b61303e5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206964656e7469747920726f6f747360501b6044820152606401610e80565b613047816111eb565b5082516130549083613343565b6111e65760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610e80565b806060015151601014156131785760008073__$0e28126f39383a7370d616a96392e426db$__63b216078a847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161310a929190614608565b60006040518083038186803b15801561312257600080fd5b505af4158015613136573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261315e9190810190613f15565b9150915061316b816111eb565b5082516130549083613426565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610e80565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526111e69084906134ae565b6000828152600d602052604081205460ff16156132445760405162461bcd60e51b8152600401610e8090614464565b6000828152600d602052604090205460ff16156132735760405162461bcd60e51b8152600401610e8090614464565b600061327f8484613580565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b561331f8360016147df565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b6000808380602001905181019061335a9190613e2b565b9050600080600061336a8461285f565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906133cb908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600190600401614335565b60206040518083038186803b1580156133e357600080fd5b505afa1580156133f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061341b9190613e8c565b979650505050505050565b6000808380602001905181019061343d9190613e2b565b9050600080600061344d8461285f565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906133cb908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600090600401614335565b6000613503826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661382a9092919063ffffffff16565b8051909150156111e657808060200190518101906135219190613e8c565b6111e65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e80565b6000805463ffffffff600160301b82048116916135a791600160501b909104166002614894565b63ffffffff168163ffffffff16141561361b5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610e80565b600061362860028361482c565b600254909150600090613645906001600160a01b03168787611a36565b905060008060015b60005463ffffffff600160501b9091048116908216101561377457613673600286614ac1565b63ffffffff1661372057600254604051631d052ab160e31b815263ffffffff831660048201528594506001600160a01b039091169063e82955889060240160206040518083038186803b1580156136c957600080fd5b505afa1580156136dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137019190613ec7565b63ffffffff82166000908152600360205260409020859055915061373c565b63ffffffff811660009081526003602052604090205492508391505b600254613753906001600160a01b03168484611a36565b935061376060028661482c565b94508061376c81614a89565b91505061364d565b5060008054601e906137939062010000900463ffffffff1660016147df565b61379d9190614ac1565b6000805465ffffffff000019166201000063ffffffff84160217905590506137c68660026147df565b6000805469ffffffff0000000000001916600160301b63ffffffff9384168102919091178083556040805180820182529889529190048316602080890191825294909316825260019384905290209451855551930192909255509195945050505050565b6060611ab88484600085856001600160a01b0385163b61388c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e80565b600080866001600160a01b031685876040516138a891906141ea565b60006040518083038185875af1925050503d80600081146138e5576040519150601f19603f3d011682016040523d82523d6000602084013e6138ea565b606091505b509150915061341b82828660608315613904575081611abb565b8251156139145782518084602001fd5b8160405162461bcd60e51b8152600401610e8091906143bf565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b61396361392e565b81526020019060019003908161395b5790505090565b803561398481614b59565b919050565b600082601f83011261399a57600080fd5b604051604081018181106001600160401b03821117156139bc576139bc614b43565b80604052508083856040860111156139d357600080fd5b60005b60028110156139f55781358352602092830192909101906001016139d6565b509195945050505050565b600082601f830112613a1157600080fd5b81356020613a26613a218361477d565b61474d565b80838252828201915082860187848660051b8901011115613a4657600080fd5b60005b85811015613a6557813584529284019290840190600101613a49565b5090979650505050505050565b600082601f830112613a8357600080fd5b8135613a91613a21826147a0565b818152846020838601011115613aa657600080fd5b816020850160208301376000918101602001919091529392505050565b60006101008284031215613ad657600080fd5b613ade614702565b9050613ae982613979565b815260208201356020820152613b0160408301613979565b60408201526060820135606082015260808201356080820152613b2660a08301613979565b60a082015260c08201356001600160401b0380821115613b4557600080fd5b613b5185838601613a72565b60c084015260e0840135915080821115613b6a57600080fd5b50613b7784828501613a72565b60e08301525092915050565b60006101008284031215613b9657600080fd5b613b9e61472b565b905081356001600160401b0380821115613bb757600080fd5b613bc385838601613a72565b83526020840135915080821115613bd957600080fd5b613be585838601613a72565b60208401526040840135915080821115613bfe57600080fd5b613c0a85838601613a72565b60408401526060840135915080821115613c2357600080fd5b50613c3084828501613a00565b606083015250613c438360808401613989565b608082015260c082013560a082015260e082013560c082015292915050565b803563ffffffff8116811461398457600080fd5b600080600060608486031215613c8b57600080fd5b8335613c9681614b59565b92506020840135613ca681614b59565b929592945050506040919091013590565b60008060408385031215613cca57600080fd5b8235613cd581614b59565b946020939093013593505050565b60008060408385031215613cf657600080fd5b8235613d0181614b59565b9150613d0f60208401613c62565b90509250929050565b60008060208385031215613d2b57600080fd5b82356001600160401b0380821115613d4257600080fd5b818501915085601f830112613d5657600080fd5b813581811115613d6557600080fd5b8660208260051b8501011115613d7a57600080fd5b60209290920196919550909350505050565b600060208284031215613d9e57600080fd5b81356001600160401b03811115613db457600080fd5b610f9a84828501613a00565b6000610100808385031215613dd457600080fd5b83601f840112613de357600080fd5b613deb614702565b8084868487011115613dfc57600080fd5b600093505b6008841015613e2157803583526001939093019260209283019201613e01565b5095945050505050565b6000610100808385031215613e3f57600080fd5b83601f840112613e4e57600080fd5b613e56614702565b8084868487011115613e6757600080fd5b600093505b6008841015613e2157805183526001939093019260209283019201613e6c565b600060208284031215613e9e57600080fd5b81518015158114610f9857600080fd5b600060208284031215613ec057600080fd5b5035919050565b600060208284031215613ed957600080fd5b5051919050565b600080600060608486031215613ef557600080fd5b83359250613f0560208501613c62565b9150604084013590509250925092565b60008060408385031215613f2857600080fd5b82516001600160401b0380821115613f3f57600080fd5b818501915085601f830112613f5357600080fd5b81516020613f63613a21836147a0565b8281528882848701011115613f7757600080fd5b613f8683838301848801614a22565b87820151909650935082841115613f9c57600080fd5b838701935087601f850112613fb057600080fd5b83519250613fc0613a218461477d565b8381528181019250848201600585901b860183018a1015613fe057600080fd5b600095505b84861015614003578051845260019590950194928201928201613fe5565b5080955050505050509250929050565b60008060006060848603121561402857600080fd5b833561403381614b59565b95602085013595506040909401359392505050565b6000806040838503121561405b57600080fd5b50508035926020909101359150565b6000806040838503121561407d57600080fd5b82356001600160401b038082111561409457600080fd5b6140a086838701613b83565b935060208501359150808211156140b657600080fd5b506140c385828601613ac3565b9150509250929050565b6000806000606084860312156140e257600080fd5b83356001600160401b03808211156140f957600080fd5b61410587838801613b83565b9450602086013591508082111561411b57600080fd5b5061412886828701613ac3565b925050604084013561413981614b59565b809150509250925092565b6000806040838503121561415757600080fd5b82359150613d0f60208401613c62565b8060005b60028110156141955761417f84835161419b565b604093909301926020919091019060010161416b565b50505050565b8060005b600281101561419557815184526020938401939091019060010161419f565b600081518084526141d6816020860160208601614a22565b601f01601f19169290920160200192915050565b600082516141fc818460208701614a22565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b81811015614264578351151583529284019291840191600101614246565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156142645783518352928401929184019160010161428c565b602080825282518282018190526000919060409081850190868401855b828110156142ff578151805185528681015187860152858101518686015260609081015190850152608090930192908501906001016142c5565b5091979650505050505050565b610100810161431b828661419b565b6143286040830185614167565b610f9a60c083018461419b565b6000610160614344838a61419b565b6143516040840189614167565b61435e60c084018861419b565b80610100840152614371818401876141be565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff831660208201526060604082015260006143b660608301846141be565b95945050505050565b602081526000611abb60208301846141be565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b6020815260018060a01b038251166020820152602082015160408201526000604083015161459660608401826001600160a01b03169052565b5060608301516080830152608083015160a083015260a08301516145c560c08401826001600160a01b03169052565b5060c08301516101008060e08501526145e26101208501836141be565b915060e0850151601f1985840301828601526145fe83826141be565b9695505050505050565b60408152600083516101008060408501526146276101408501836141be565b9150602080870151603f198087860301606088015261464685836141be565b9450604089015191508087860301608088015261466385836141be565b60608a015188820390920160a089015281518082529184019550600092508301905b808310156146a55785518252948301946001929092019190830190614685565b50608089015194506146ba60c088018661419b565b60a08901518488015260c089015161012088015260ff88168388015294506146df9050565b5050509392505050565b828152604060208201526000611ab860408301846141be565b60405161010081016001600160401b038111828210171561472557614725614b43565b60405290565b60405160e081016001600160401b038111828210171561472557614725614b43565b604051601f8201601f191681016001600160401b038111828210171561477557614775614b43565b604052919050565b60006001600160401b0382111561479657614796614b43565b5060051b60200190565b60006001600160401b038211156147b9576147b9614b43565b50601f01601f191660200190565b600082198211156147da576147da614b01565b500190565b600063ffffffff8083168185168083038211156147fe576147fe614b01565b01949350505050565b600060ff821660ff84168060ff0382111561482457614824614b01565b019392505050565b600063ffffffff8084168061484357614843614b17565b92169190910492915050565b600181815b8085111561488c578163ffffffff0482111561487257614872614b01565b8085161561487f57918102915b93841c9390800290614854565b509250929050565b600063ffffffff610f9a8185168285166000826148b357506001610c78565b816148c057506000610c78565b81600181146148d657600281146148e057614911565b6001915050610c78565b60ff8411156148f1576148f1614b01565b6001841b915063ffffffff82111561490b5761490b614b01565b50610c78565b5060208310610133831016604e8410600b8410161715614948575081810a63ffffffff81111561494357614943614b01565b610c78565b614952838361484f565b8063ffffffff0482111561496857614968614b01565b029392505050565b60008083128015600160ff1b85018412161561498e5761498e614b01565b6001600160ff1b03840183138116156149a9576149a9614b01565b50500390565b6000828210156149c1576149c1614b01565b500390565b600063ffffffff838116908316818110156149e3576149e3614b01565b039392505050565b805160208201516001600160d01b03198082169291906006831015614a1a5780818460060360031b1b83161693505b505050919050565b60005b83811015614a3d578181015183820152602001614a25565b838111156141955750506000910152565b600063ffffffff821680614a6457614a64614b01565b6000190192915050565b6000600019821415614a8257614a82614b01565b5060010190565b600063ffffffff80831681811415614aa357614aa3614b01565b6001019392505050565b600082614abc57614abc614b17565b500690565b600063ffffffff80841680614ad857614ad8614b17565b92169190910692915050565b6000600160ff1b821415614afa57614afa614b01565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146131c057600080fdfea264697066735822122051ae197cb7c6c60b7adb81dfdad5e7ac39c0396dce27a32ce364b8bfbbd8c59b64736f6c63430008050033';

type IdentityVAnchorConstructorParams =
  | [linkLibraryAddresses: IdentityVAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: IdentityVAnchorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class IdentityVAnchor__factory extends ContractFactory {
  constructor(...args: IdentityVAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, IdentityVAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: IdentityVAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$0e28126f39383a7370d616a96392e426db\\$__', 'g'),
      linkLibraryAddresses['contracts/libs/IdentityVAnchorEncodeInputs.sol:IdentityVAnchorEncodeInputs']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _semaphore: string,
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    _groupId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IdentityVAnchor> {
    return super.deploy(
      _semaphore,
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      _groupId,
      overrides || {}
    ) as Promise<IdentityVAnchor>;
  }
  getDeployTransaction(
    _semaphore: string,
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    _groupId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _semaphore,
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      _groupId,
      overrides || {}
    );
  }
  attach(address: string): IdentityVAnchor {
    return super.attach(address) as IdentityVAnchor;
  }
  connect(signer: Signer): IdentityVAnchor__factory {
    return super.connect(signer) as IdentityVAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IdentityVAnchorInterface {
    return new utils.Interface(_abi) as IdentityVAnchorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IdentityVAnchor {
    return new Contract(address, _abi, signerOrProvider) as IdentityVAnchor;
  }
}

export interface IdentityVAnchorLibraryAddresses {
  ['contracts/libs/IdentityVAnchorEncodeInputs.sol:IdentityVAnchorEncodeInputs']: string;
}
