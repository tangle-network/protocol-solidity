/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "target",
            type: "bytes32",
          },
        ],
        internalType: "struct LinkableAnchor.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_resourceId",
        type: "bytes32",
      },
    ],
    name: "parseChainIdFromResourceId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_leafIndex",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_target",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b03191690556005805463ffffffff191690553480156200002f57600080fd5b5060405162005d5238038062005d528339810160408190526200005291620008e2565b85858585848185848684848383838183818160008263ffffffff1611620000cc5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001245760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c3565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019b576200017063ffffffff82166200027c565b63ffffffff8216600090815260016020526040902055806200019281620009ab565b9150506200014a565b50620001b9620001ad60018462000983565b63ffffffff166200027c565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b555050600160045560058054600160201b600160c01b0319166401000000006001600160a01b039687160217905560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c0525050600b80546001600160a01b0319169590911694909417909355505050505060609590951b6001600160601b03191660e0525062000a01975050505050505050565b600081620002ab57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002dc57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030d57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033e57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036f57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b8160051415620003a057507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003d157507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600714156200040257507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200043357507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200046457507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200049557507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004c657507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004f757507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052857507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055957507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058a57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005bb57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005eb57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061c57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064d57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067e57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006af57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006e057507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200071157507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200074257507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200077357507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415620007a457507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007d557507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c14156200080657507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200083757507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086857507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089957507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c3565b60008060008060008060c08789031215620008fc57600080fd5b86516200090981620009e8565b602088015190965063ffffffff811681146200092457600080fd5b60408801519095506200093781620009e8565b60608801519094506200094a81620009e8565b60808801519093506200095d81620009e8565b60a088015190925060ff811681146200097557600080fd5b809150509295509295509295565b600063ffffffff83811690831681811015620009a357620009a3620009d2565b039392505050565b600063ffffffff80831681811415620009c857620009c8620009d2565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009fe57600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c61524062000b1260003960008181610bfc015281816110b80152818161118c015281816113ca0152818161199201528181611a6201528181611af801528181611b8901528181611c700152818161308e0152818161312c015281816131790152818161334901526133e101526000818161068401528181610cdd01528181610d470152818161123b015281816115fd015281816116900152818161229b01528181613482015281816135e1015281816138eb0152613a150152600081816105b501528181610dd50152818161175b01528181613b2a0152613c0a015260008181610b3c01528181613bda0152613ca301526152406000f3fe6080604052600436106103975760003560e01c806390eeb02b116101dc578063c80916d411610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b8b578063fa73168714610bba578063fc0c546a14610bea578063fc7e9c6f14610c1e57600080fd5b8063e829558814610ad6578063ec73295914610af6578063ed33639f14610b2a578063f178e47c14610b5e57600080fd5b8063dbc916b8116100dc578063dbc916b814610a19578063e4a3011614610a59578063e5285dcc14610a79578063e70ea87c14610aa957600080fd5b8063c80916d4146109bd578063c9be7250146109e4578063cd87a3b414610a0457600080fd5b8063a07b7e1d1161017a578063ba70f75711610149578063ba70f75714610928578063bc063e1a146106ee578063c2230d6e14610952578063c2b40ae41461099057600080fd5b8063a07b7e1d146108b5578063a0d192f5146108c8578063b2bc6e0f146108e8578063b7566a671461090857600080fd5b806395c87d1a116101b657806395c87d1a146108555780639bbca3a9146108685780639fa12d0b146108885780639ff80063146105d757600080fd5b806390eeb02b146107f5578063921563111461081257806394eee0601461084257600080fd5b80635d2d766c116102c15780637fe24ffe1161025f5780638c0d34d81161022e5780638c0d34d81461077d5780638c832b131461079f5780638ea3099e146107bf5780638f1c56bd146107df57600080fd5b80637fe24ffe146106ee578063839df94514610706578063840b2791146107365780638b7e87821461074c57600080fd5b80636d9833e31161029b5780636d9833e31461065257806371523c321461067257806372c1ad03146106b857806378abb49b146106d857600080fd5b80635d2d766c146105f7578063616e09571461062a5780636ad481f31461064a57600080fd5b80633408e47011610339578063460b53e311610308578063460b53e3146105575780634c830cbd146105775780634ecf518b146105a35780634f401241146105d757600080fd5b80633408e470146104d7578063414a37ba146104ea5780634167bb1e1461050c57806343e7119f1461051f57600080fd5b80631e627617116103755780631e6276171461042d5780631f7f99f71461044f5780632570b7b4146104715780632b7ac3f31461049f57600080fd5b80630b27fb9a1461039c57806311e4dcb9146103cd57806317cc915c146103fd575b600080fd5b3480156103a857600080fd5b5060055463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103d957600080fd5b506103ed6103e83660046145c4565b610c42565b60405190151581526020016103c4565b34801561040957600080fd5b506103ed610418366004614443565b600c6020526000908152604090205460ff1681565b34801561043957600080fd5b50610442610cd7565b6040516103c49190614954565b34801561045b57600080fd5b5061046f61046a36600461482e565b610e3b565b005b34801561047d57600080fd5b5061049161048c3660046145c4565b610e93565b6040519081526020016103c4565b3480156104ab57600080fd5b50600b546104bf906001600160a01b031681565b6040516001600160a01b0390911681526020016103c4565b3480156104e357600080fd5b5046610491565b3480156104f657600080fd5b506104916000805160206151eb83398151915281565b61046f61051a36600461479e565b610f7c565b34801561052b57600080fd5b5061049161053a36600461482e565b600960209081526000928352604080842090915290825290205481565b34801561056357600080fd5b5061046f61057236600461424c565b6110a1565b34801561058357600080fd5b5061058c611127565b60405165ffffffffffff90911681526020016103c4565b3480156105af57600080fd5b506103b37f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e357600080fd5b5061046f6105f236600461424c565b611175565b34801561060357600080fd5b506103b3610612366004614443565b600a6020526000908152604090205463ffffffff1681565b34801561063657600080fd5b506103ed610645366004614321565b6111c5565b61046f6113b3565b34801561065e57600080fd5b506103ed61066d366004614443565b61143a565b34801561067e57600080fd5b506106a67f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103c4565b3480156106c457600080fd5b5061046f6106d3366004614278565b6114b5565b3480156106e457600080fd5b5061049160105481565b3480156106fa57600080fd5b50610491600160f81b81565b34801561071257600080fd5b506103ed610721366004614443565b600d6020526000908152604090205460ff1681565b34801561074257600080fd5b50610491600f5481565b34801561075857600080fd5b50610764600160f81b81565b6040516001600160f01b031990911681526020016103c4565b34801561078957600080fd5b506107926115f7565b6040516103c4919061498c565b3480156107ab57600080fd5b5061046f6107ba36600461482e565b6117c7565b3480156107cb57600080fd5b506104916107da36600461458f565b611816565b3480156107eb57600080fd5b50610491600e5481565b34801561080157600080fd5b506003546103b39063ffffffff1681565b34801561081e57600080fd5b506103ed61082d366004614443565b60009081526007602052604090205460ff1690565b61046f61085036600461424c565b611979565b61046f61086336600461420b565b611b29565b34801561087457600080fd5b5061046f61088336600461473b565b611bef565b34801561089457600080fd5b506108a86108a33660046142ad565b611dd9565b6040516103c4919061490e565b61046f6108c336600461445c565b611ea1565b3480156108d457600080fd5b5061046f6108e3366004614278565b612471565b3480156108f457600080fd5b5061046f6109033660046145e6565b6125b3565b34801561091457600080fd5b5061046f6109233660046146a1565b612618565b34801561093457600080fd5b5060035463ffffffff16600090815260026020526040902054610491565b34801561095e57600080fd5b5061097861096d366004614443565b65ffffffffffff1690565b6040516001600160401b0390911681526020016103c4565b34801561099c57600080fd5b506104916109ab366004614443565b60026020526000908152604090205481565b3480156109c957600080fd5b506005546104bf90600160201b90046001600160a01b031681565b3480156109f057600080fd5b5061046f6109ff36600461461a565b612632565b348015610a1057600080fd5b506103b3601e81565b348015610a2557600080fd5b50610a39610a34366004614443565b612645565b6040805194855260208501939093529183015260608201526080016103c4565b348015610a6557600080fd5b5061046f610a743660046145c4565b61267f565b348015610a8557600080fd5b506103ed610a94366004614443565b6000908152600c602052604090205460ff1690565b348015610ab557600080fd5b50610491610ac4366004614443565b60066020526000908152604090205481565b348015610ae257600080fd5b50610491610af1366004614443565b6127a8565b348015610b0257600080fd5b506104917f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610b3657600080fd5b506104bf7f000000000000000000000000000000000000000000000000000000000000000081565b348015610b6a57600080fd5b50610491610b79366004614443565b60016020526000908152604090205481565b348015610b9757600080fd5b50610bab610ba6366004614355565b612de8565b6040516103c4939291906149fe565b348015610bc657600080fd5b506103ed610bd5366004614443565b60076020526000908152604090205460ff1681565b348015610bf657600080fd5b506104bf7f000000000000000000000000000000000000000000000000000000000000000081565b348015610c2a57600080fd5b506003546103b390600160201b900463ffffffff1681565b600081610c5157506000610cd1565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c9a57600192505050610cd1565b63ffffffff8116610ca95750601e5b80610cb3816150ca565b9150508163ffffffff168163ffffffff161415610c68576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610d1657610d166151bf565b604051908082528060200260200182016040528015610d3f578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610e3557610d7b816001614e43565b60085410610dcb5760088181548110610d9657610d966151a9565b906000526020600020906004020160010154828281518110610dba57610dba6151a9565b602002602001018181525050610e23565b610e04610df960017f0000000000000000000000000000000000000000000000000000000000000000615042565b63ffffffff166127a8565b828281518110610e1657610e166151a9565b6020026020010181815250505b80610e2d816150ea565b915050610d45565b50919050565b600554600160201b90046001600160a01b03163314610e755760405162461bcd60e51b8152600401610e6c90614c18565b60405180910390fd5b6005805463ffffffff191663ffffffff8316179055600f8290555050565b6000600160f81b8210610ed65760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b6044820152606401610e6c565b610ee3600160f81b615160565b83138015610ef45750600160f81b83125b610f355760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610e6c565b6000610f418385614fec565b90506000811215610f7257610f5581615160565b610f6d906000805160206151eb83398151915261502b565b610f74565b805b949350505050565b610f868383612e71565b600082602001511315610fcc5760105482602001511115610fb95760405162461bcd60e51b8152600401610e6c90614bce565b610fc7818360200151611979565b611076565b6000826020015112156110765781516001600160a01b03166110305760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e6c565b600f54826020015161104190615160565b101561105f5760405162461bcd60e51b8152600401610e6c90614ac4565b611076818360000151846020015161086390615160565b6060820151156110925761109282604001518360600151613076565b61109c83836131da565b505050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca69388906110f1903390869086906004016148ea565b600060405180830381600087803b15801561110b57600080fd5b505af115801561111f573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161116a81615067565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b6906110f1903390869086906004016148ea565b60006111ea826000815181106111dd576111dd6151a9565b602002602001015161143a565b6112365760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610e6c565b6112617f00000000000000000000000000000000000000000000000000000000000000006001614e83565b60ff168251146112b35760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610e6c565b60005b6008548110156113aa576000600882815481106112d5576112d56151a9565b9060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905061134b81600001518584600161132e9190614e43565b8151811061133e5761133e6151a9565b6020026020010151610c42565b6113975760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610e6c565b50806113a2816150ea565b9150506112b6565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890349061140690339060009081906004016148ea565b6000604051808303818588803b15801561141f57600080fd5b505af1158015611433573d6000803e3d6000fd5b5050505050565b60008161144957506000919050565b60035463ffffffff16805b63ffffffff811660009081526002602052604090205484141561147b575060019392505050565b63ffffffff811661148a5750601e5b80611494816150ca565b9150508163ffffffff168163ffffffff161415611454575060009392505050565b600554600160201b90046001600160a01b031633146114e65760405162461bcd60e51b8152600401610e6c90614c18565b6001600160a01b0382166115325760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e6c565b60055463ffffffff80831691161061157c5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e6c565b6005546115919063ffffffff16610418614e5b565b63ffffffff168163ffffffff16106115bb5760405162461bcd60e51b8152600401610e6c90614b0f565b600580546001600160c01b031916600160201b6001600160a01b03949094169390930263ffffffff19169290921763ffffffff91909116179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611636576116366151bf565b60405190808252806020026020018201604052801561168857816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816116545790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610e35576116c4816001614e43565b6008541061174257600881815481106116df576116df6151a9565b9060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050828281518110611732576117326151a9565b60200260200101819052506117b5565b60405180608001604052806000815260200161178460017f0000000000000000000000000000000000000000000000000000000000000000610df99190615042565b8152602001600081526020016000801b8152508282815181106117a9576117a96151a9565b60200260200101819052505b806117bf816150ea565b91505061168e565b600554600160201b90046001600160a01b031633146117f85760405162461bcd60e51b8152600401610e6c90614c18565b6005805463ffffffff191663ffffffff831617905560108290555050565b60006000805160206151eb83398151915283106118755760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610e6c565b6000805160206151eb83398151915282106118dc5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610e6c565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f69161191d91906004016149f0565b60206040518083038186803b15801561193557600080fd5b505afa158015611949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196d9190614815565b925050505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b1580156119dc57600080fd5b505afa1580156119f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a149190614815565b90506001600160a01b038316611ac657803414611a3057600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b158015611aa857600080fd5b505af1158015611abc573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611a8f565b60026004541415611b4c5760405162461bcd60e51b8152600401610e6c90614b97565b6002600455611b5b3082613331565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611bcd57600080fd5b505af1158015611be1573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611c125760405162461bcd60e51b8152600401610e6c90614b97565b6002600455611c218282612e71565b600081602001511315611cfc5760105481602001511115611c545760405162461bcd60e51b8152600401610e6c90614bce565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91611ca89133913091906004016148ea565b602060405180830381600087803b158015611cc257600080fd5b505af1158015611cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cfa9190614421565b505b600081602001511215611daa5780516001600160a01b0316611d605760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e6c565b600f548160200151611d7190615160565b1015611d8f5760405162461bcd60e51b8152600401610e6c90614ac4565b611daa81600001518260200151611da590615160565b613331565b606081015115611dc657611dc681604001518260600151613076565b611dd082826131da565b50506001600455565b60606000826001600160401b03811115611df557611df56151bf565b604051908082528060200260200182016040528015611e1e578160200160208202803683370190505b50905060005b83811015611e9957611e5d858583818110611e4157611e416151a9565b905060200201356000908152600c602052604090205460ff1690565b15611e87576001828281518110611e7657611e766151a9565b911515602092830291909101909101525b80611e91816150ea565b915050611e24565b509392505050565b600554600160201b90046001600160a01b03163314611ed25760405162461bcd60e51b8152600401610e6c90614c18565b60026004541415611ef55760405162461bcd60e51b8152600401610e6c90614b97565b6002600455600065ffffffffffff8216604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b158015611f4757600080fd5b505afa158015611f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7f9190614421565b15612294576001600160401b0381166000908152600660205260409020546008805463ffffffff861692908110611fb857611fb86151a9565b906000526020600020906004020160020154106120175760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610e6c565b600860066000836001600160401b031681526020019081526020016000205481548110612046576120466151a9565b906000526020600020906004020160020154620100006120669190614e43565b8363ffffffff16106120ca5760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610e6c565b600860066000836001600160401b0316815260200190815260200160002054815481106120f9576120f96151a9565b90600052602060002090600402016003015482146121595760405162461bcd60e51b815260206004820152601b60248201527f4e657720746172676574206d757374206265207468652073616d6500000000006044820152606401610e6c565b6001600160401b0381166000908152600660205260409020546008805463ffffffff861691908390811061218f5761218f6151a9565b90600052602060002090600402016002018190555084600882815481106121b8576121b86151a9565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e916121fd9163ffffffff90911690614e5b565b612207919061513d565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff878116918217909255600984528285209085528352928190208b905580519384529189169083015281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050612466565b60085460ff7f000000000000000000000000000000000000000000000000000000000000000016116123085760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610e6c565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c815263ffffffff8c1682870181815260608085018e81529786018755958a528351600486027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee583015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690910155878752600686528487208290556009865284872087805286528487208c9055845197885294870192909252918501899052939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b600554600160201b90046001600160a01b031633146124a25760405162461bcd60e51b8152600401610e6c90614c18565b6001600160a01b0382166124ee5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e6c565b60055463ffffffff8083169116106125385760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e6c565b60055461254d9063ffffffff16610418614e5b565b63ffffffff168163ffffffff16106125775760405162461bcd60e51b8152600401610e6c90614b0f565b600b80546001600160a01b0319166001600160a01b0393909316929092179091556005805463ffffffff191663ffffffff909216919091179055565b80516001600160a01b0316331461260c5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610e6c565b61261581613408565b50565b612621846125b3565b61262c838383610f7c565b50505050565b61263b836125b3565b61109c8282611bef565b6008818154811061265557600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff161580801561269f5750600054600160ff909116105b806126b95750303b1580156126b9575060005460ff166001145b61271c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e6c565b6000805460ff19166001179055801561273f576000805461ff0019166101001790555b6005805463ffffffff1916905561275583600f55565b61275e82601055565b801561109c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6000816127d657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561280657507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561283657507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561286657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004141561289657507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156128c657507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600614156128f657507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561292657507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561295657507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561298657507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156129b657507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b14156129e657507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415612a1657507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d1415612a4657507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e1415612a7657507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f1415612aa657507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415612ad657507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415612b0557507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b8160121415612b3557507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160131415612b6557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b8160141415612b9557507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415612bc557507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612bf557507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612c2557507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612c5557507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612c8557507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612cb557507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612ce557507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612d1557507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612d4557507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612d7557507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612da557507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610e6c565b919050565b612df0613e91565b612df8613eaf565b612e00613e91565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612f0f57612eb783604001518281518110612e9a57612e9a6151a9565b60200260200101516000908152600c602052604090205460ff1690565b15612efd5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610e6c565b80612f07816150ea565b915050612e74565b506000805160206151eb83398151915281604051602001612f309190614c4f565b6040516020818303038152906040528051906020012060001c612f539190615129565b60a083015114612fa55760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610e6c565b612fb781602001518260600151610e93565b8260800151146130015760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610e6c565b61300a82613454565b60005b82604001515181101561109c576001600c600085604001518481518110613036576130366151a9565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061306e906150ea565b91505061300d565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156130d857600080fd5b505afa1580156130ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131109190614815565b9050811561109c578181106131535761109c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461370e565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b1580156131bd57600080fd5b505af11580156131d1573d6000803e3d6000fd5b50505050505050565b606082015180516020909101516131f19190613760565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd919061323790600290600160201b900463ffffffff16615042565b836080015160405161324b93929190614a83565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461329d90600190600160201b900463ffffffff16615042565b8360a001516040516132b193929190614a83565b60405180910390a160005b82604001515181101561109c577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce83604001518281518110613300576133006151a9565b602002602001015160405161331791815260200190565b60405180910390a180613329816150ea565b9150506132bc565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561339357600080fd5b505afa1580156133a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133cb9190614815565b90508181106131535761109c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461370e565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516134499190614ab1565b60405180910390a250565b806040015151600214156135b35760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016134be929190614cbc565b60006040518083038186803b1580156134d657600080fd5b505af41580156134ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526135129190810190614491565b9150915061351f816111c5565b61355b5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e6c565b8251613567908361388e565b61109c5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610e6c565b806040015151601014156136c65760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161361d929190614cbc565b60006040518083038186803b15801561363557600080fd5b505af4158015613649573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526136719190810190614491565b9150915061367e816111c5565b6136ba5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e6c565b825161356790836139b8565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610e6c565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261109c908490613a40565b6000828152600d602052604081205460ff161561378f5760405162461bcd60e51b8152600401610e6c90614b56565b6000828152600d602052604090205460ff16156137be5760405162461bcd60e51b8152600401610e6c90614b56565b60006137ca8484613b12565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b561386a836001614e5b565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906138a591906143c0565b905060008060006138b584612de8565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613916908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600190600401614a27565b60206040518083038186803b15801561392e57600080fd5b505afa158015613942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139669190614421565b9450846139ae5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610e6c565b5050505092915050565b600080838060200190518101906139cf91906143c0565b905060008060006139df84612de8565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613916908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600090600401614a27565b6000613a95826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613d7d9092919063ffffffff16565b80519091501561109c5780806020019051810190613ab39190614421565b61109c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e6c565b600354600090600160201b900463ffffffff16613b507f00000000000000000000000000000000000000000000000000000000000000006002614f10565b63ffffffff168163ffffffff161415613bc45760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610e6c565b6000613bd1600283614ea8565b90506000613c007f00000000000000000000000000000000000000000000000000000000000000008787611816565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613cea57613c4760028661513d565b63ffffffff16613c8257839250613c638163ffffffff166127a8565b63ffffffff821660009081526001602052604090208590559150613c9e565b63ffffffff811660009081526001602052604090205492508391505b613cc97f00000000000000000000000000000000000000000000000000000000000000008484611816565b9350613cd6600286614ea8565b945080613ce281615105565b915050613c08565b50600354600090601e90613d059063ffffffff166001614e5b565b613d0f919061513d565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613d49908790614e5b565b6003805463ffffffff92909216600160201b0267ffffffff0000000019909216919091179055509394505050505092915050565b6060610f748484600085856001600160a01b0385163b613ddf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e6c565b600080866001600160a01b03168587604051613dfb91906148ce565b60006040518083038185875af1925050503d8060008114613e38576040519150601f19603f3d011682016040523d82523d6000602084013e613e3d565b606091505b5091509150613e4d828286613e58565b979650505050505050565b60608315613e67575081611972565b825115613e775782518084602001fd5b8160405162461bcd60e51b8152600401610e6c9190614ab1565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613ec6613e91565b815260200190600190039081613ebe5790505090565b8035612de3816151d5565b600082601f830112613ef857600080fd5b604051604081018181106001600160401b0382111715613f1a57613f1a6151bf565b8060405250808385604086011115613f3157600080fd5b60005b6002811015613f53578135835260209283019290910190600101613f34565b509195945050505050565b600082601f830112613f6f57600080fd5b81356020613f84613f7f83614df9565b614dc9565b80838252828201915082860187848660051b8901011115613fa457600080fd5b60005b85811015613fc357813584529284019290840190600101613fa7565b5090979650505050505050565b600082601f830112613fe157600080fd5b8135613fef613f7f82614e1c565b81815284602083860101111561400457600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561403357600080fd5b604051604081016001600160401b038282108183111715614056576140566151bf565b816040528293508435915061406a826151d5565b9082526020840135908082111561408057600080fd5b5061408d85828601613fd0565b6020830152505092915050565b600060c082840312156140ac57600080fd5b6140b4614d7e565b90506140bf82613edc565b8152602082013560208201526140d760408301613edc565b60408201526060820135606082015260808201356001600160401b038082111561410057600080fd5b61410c85838601613fd0565b608084015260a084013591508082111561412557600080fd5b5061413284828501613fd0565b60a08301525092915050565b600060e0828403121561415057600080fd5b614158614d7e565b905081356001600160401b038082111561417157600080fd5b61417d85838601613fd0565b8352602084013591508082111561419357600080fd5b61419f85838601613fd0565b602084015260408401359150808211156141b857600080fd5b506141c584828501613f5e565b6040830152506141d88360608401613ee7565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612de357600080fd5b60008060006060848603121561422057600080fd5b833561422b816151d5565b9250602084013561423b816151d5565b929592945050506040919091013590565b6000806040838503121561425f57600080fd5b823561426a816151d5565b946020939093013593505050565b6000806040838503121561428b57600080fd5b8235614296816151d5565b91506142a4602084016141f7565b90509250929050565b600080602083850312156142c057600080fd5b82356001600160401b03808211156142d757600080fd5b818501915085601f8301126142eb57600080fd5b8135818111156142fa57600080fd5b8660208260051b850101111561430f57600080fd5b60209290920196919550909350505050565b60006020828403121561433357600080fd5b81356001600160401b0381111561434957600080fd5b610f7484828501613f5e565b600061010080838503121561436957600080fd5b83601f84011261437857600080fd5b614380614da6565b808486848701111561439157600080fd5b600093505b60088410156143b657803583526001939093019260209283019201614396565b5095945050505050565b60006101008083850312156143d457600080fd5b83601f8401126143e357600080fd5b6143eb614da6565b80848684870111156143fc57600080fd5b600093505b60088410156143b657805183526001939093019260209283019201614401565b60006020828403121561443357600080fd5b81518015158114610f7257600080fd5b60006020828403121561445557600080fd5b5035919050565b60008060006060848603121561447157600080fd5b83359250614481602085016141f7565b9150604084013590509250925092565b600080604083850312156144a457600080fd5b82516001600160401b03808211156144bb57600080fd5b818501915085601f8301126144cf57600080fd5b815160206144df613f7f83614e1c565b82815288828487010111156144f357600080fd5b6145028383830184880161509e565b8782015190965093508284111561451857600080fd5b838701935087601f85011261452c57600080fd5b8351925061453c613f7f84614df9565b8381528181019250848201600585901b860183018a101561455c57600080fd5b600095505b8486101561457f578051845260019590950194928201928201614561565b5080955050505050509250929050565b6000806000606084860312156145a457600080fd5b83356145af816151d5565b95602085013595506040909401359392505050565b600080604083850312156145d757600080fd5b50508035926020909101359150565b6000602082840312156145f857600080fd5b81356001600160401b0381111561460e57600080fd5b610f7484828501614021565b60008060006060848603121561462f57600080fd5b83356001600160401b038082111561464657600080fd5b61465287838801614021565b9450602086013591508082111561466857600080fd5b6146748783880161413e565b9350604086013591508082111561468a57600080fd5b506146978682870161409a565b9150509250925092565b600080600080608085870312156146b757600080fd5b84356001600160401b03808211156146ce57600080fd5b6146da88838901614021565b955060208701359150808211156146f057600080fd5b6146fc8883890161413e565b9450604087013591508082111561471257600080fd5b5061471f8782880161409a565b9250506060850135614730816151d5565b939692955090935050565b6000806040838503121561474e57600080fd5b82356001600160401b038082111561476557600080fd5b6147718683870161413e565b9350602085013591508082111561478757600080fd5b506147948582860161409a565b9150509250929050565b6000806000606084860312156147b357600080fd5b83356001600160401b03808211156147ca57600080fd5b6147d68783880161413e565b945060208601359150808211156147ec57600080fd5b506147f98682870161409a565b925050604084013561480a816151d5565b809150509250925092565b60006020828403121561482757600080fd5b5051919050565b6000806040838503121561484157600080fd5b823591506142a4602084016141f7565b8060005b600281101561262c5761486984835161487f565b6040939093019260209190910190600101614855565b8060005b600281101561262c578151845260209384019390910190600101614883565b600081518084526148ba81602086016020860161509e565b601f01601f19169290920160200192915050565b600082516148e081846020870161509e565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b8181101561494857835115158352928401929184019160010161492a565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561494857835183529284019291840191600101614970565b602080825282518282018190526000919060409081850190868401855b828110156149e3578151805185528681015187860152858101518686015260609081015190850152608090930192908501906001016149a9565b5091979650505050505050565b60408101610cd1828461487f565b6101008101614a0d828661487f565b614a1a6040830185614851565b610f7460c083018461487f565b6000610160614a36838a61487f565b614a436040840189614851565b614a5060c084018861487f565b80610100840152614a63818401876148a2565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614aa860608301846148a2565b95945050505050565b60208152600061197260208301846148a2565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614c9f60e08401826148a2565b905060a0840151601f198483030160c0850152614aa882826148a2565b604081526000835160e06040840152614cd96101208401826148a2565b9050602080860151603f1980868503016060870152614cf884836148a2565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614d3a5784518252938301936001929092019190830190614d1a565b5060608801519350614d4f60a087018561487f565b608088015160e087015260a088015161010087015260ff8716838701529350614d759050565b50509392505050565b60405160c081016001600160401b0381118282101715614da057614da06151bf565b60405290565b60405161010081016001600160401b0381118282101715614da057614da06151bf565b604051601f8201601f191681016001600160401b0381118282101715614df157614df16151bf565b604052919050565b60006001600160401b03821115614e1257614e126151bf565b5060051b60200190565b60006001600160401b03821115614e3557614e356151bf565b50601f01601f191660200190565b60008219821115614e5657614e5661517d565b500190565b600063ffffffff808316818516808303821115614e7a57614e7a61517d565b01949350505050565b600060ff821660ff84168060ff03821115614ea057614ea061517d565b019392505050565b600063ffffffff80841680614ebf57614ebf615193565b92169190910492915050565b600181815b80851115614f08578163ffffffff04821115614eee57614eee61517d565b80851615614efb57918102915b93841c9390800290614ed0565b509250929050565b600063ffffffff610f74818516828516600082614f2f57506001610cd1565b81614f3c57506000610cd1565b8160018114614f525760028114614f5c57614f8d565b6001915050610cd1565b60ff841115614f6d57614f6d61517d565b6001841b915063ffffffff821115614f8757614f8761517d565b50610cd1565b5060208310610133831016604e8410600b8410161715614fc4575081810a63ffffffff811115614fbf57614fbf61517d565b610cd1565b614fce8383614ecb565b8063ffffffff04821115614fe457614fe461517d565b029392505050565b60008083128015600160ff1b85018412161561500a5761500a61517d565b6001600160ff1b03840183138116156150255761502561517d565b50500390565b60008282101561503d5761503d61517d565b500390565b600063ffffffff8381169083168181101561505f5761505f61517d565b039392505050565b805160208201516001600160d01b031980821692919060068310156150965780818460060360031b1b83161693505b505050919050565b60005b838110156150b95781810151838201526020016150a1565b8381111561262c5750506000910152565b600063ffffffff8216806150e0576150e061517d565b6000190192915050565b60006000198214156150fe576150fe61517d565b5060010190565b600063ffffffff8083168181141561511f5761511f61517d565b6001019392505050565b60008261513857615138615193565b500690565b600063ffffffff8084168061515457615154615193565b92169190910692915050565b6000600160ff1b8214156151765761517661517d565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461261557600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220cbb4b81ba11ea89785798e75b6d3e21c2b807ec72c1af61e73d88b865e44c7be64736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
