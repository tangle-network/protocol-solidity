/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "srcResourceID",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "srcResourceID",
            type: "bytes32",
          },
        ],
        internalType: "struct LinkableAnchor.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_resourceId",
        type: "bytes32",
      },
    ],
    name: "parseChainIdFromResourceId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_leafIndex",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_srcResourceID",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b03191690556005805463ffffffff191690553480156200002f57600080fd5b5060405162005ec038038062005ec08339810160408190526200005291620008e2565b85858585848185848684848383838183818160008263ffffffff1611620000cc5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001245760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c3565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019b576200017063ffffffff82166200027c565b63ffffffff8216600090815260016020526040902055806200019281620009ab565b9150506200014a565b50620001b9620001ad60018462000983565b63ffffffff166200027c565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b555050600160045560058054600160201b600160c01b0319166401000000006001600160a01b039687160217905560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c0525050600b80546001600160a01b0319169590911694909417909355505050505060609590951b6001600160601b03191660e0525062000a01975050505050505050565b600081620002ab57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002dc57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030d57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033e57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036f57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b8160051415620003a057507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003d157507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600714156200040257507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200043357507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200046457507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200049557507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004c657507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004f757507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052857507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055957507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058a57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005bb57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005eb57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061c57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064d57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067e57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006af57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006e057507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200071157507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200074257507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200077357507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415620007a457507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007d557507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c14156200080657507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200083757507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086857507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089957507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c3565b60008060008060008060c08789031215620008fc57600080fd5b86516200090981620009e8565b602088015190965063ffffffff811681146200092457600080fd5b60408801519095506200093781620009e8565b60608801519094506200094a81620009e8565b60808801519093506200095d81620009e8565b60a088015190925060ff811681146200097557600080fd5b809150509295509295509295565b600063ffffffff83811690831681811015620009a357620009a3620009d2565b039392505050565b600063ffffffff80831681811415620009c857620009c8620009d2565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009fe57600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c6153a062000b2060003960008181610bfc015281816110cb0152818161119f015281816114fd01528181611ac501528181611b9501528181611c2b01528181611cbc01528181611da301528181613194015281816132320152818161327f0152818161344f01526134e70152600081816106c401528181610cf501528181610d5f01528181611268015281816113ee01528181611730015281816117c3015281816123ce01528181613588015281816136e7015281816139f10152613b1b0152600081816105d501528181610ded015281816114270152818161188e01528181613c300152613d10015260008181610b3c01528181613ce00152613da901526153a06000f3fe6080604052600436106103975760003560e01c80638ea3099e116101dc578063c2b40ae411610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b8b578063fa73168714610bba578063fc0c546a14610bea578063fc7e9c6f14610c1e57600080fd5b8063e829558814610ad6578063ec73295914610af6578063ed33639f14610b2a578063f178e47c14610b5e57600080fd5b8063dbc916b8116100dc578063dbc916b814610a19578063e4a3011614610a59578063e5285dcc14610a79578063e70ea87c14610aa957600080fd5b8063c2b40ae4146109b0578063c80916d4146109dd578063cd87a3b414610a0457600080fd5b80639fa12d0b1161017a578063b2bc6e0f11610149578063b2bc6e0f14610928578063ba70f75714610948578063bc063e1a1461072e578063c2230d6e1461097257600080fd5b80639fa12d0b146108c85780639ff80063146105f7578063a07b7e1d146108f5578063a0d192f51461090857600080fd5b806392156311116101b6578063921563111461085257806394eee0601461088257806395c87d1a1461089557806399c0148c146108a857600080fd5b80638ea3099e146107ff5780638f1c56bd1461081f57806390eeb02b1461083557600080fd5b80634f401241116102c157806372c1ad031161025f578063840b27911161022e578063840b2791146107765780638b7e87821461078c5780638c0d34d8146107bd5780638c832b13146107df57600080fd5b806372c1ad03146106f857806378abb49b146107185780637fe24ffe1461072e578063839df9451461074657600080fd5b8063616e09571161029b578063616e09571461066a5780636ad481f31461068a5780636d9833e31461069257806371523c32146106b257600080fd5b80634f401241146105f75780635cc5e80b146106175780635d2d766c1461063757600080fd5b806325db9a7d1161033957806343e7119f1161030857806343e7119f1461053f578063460b53e3146105775780634c830cbd146105975780634ecf518b146105c357600080fd5b806325db9a7d146104bf5780632b7ac3f3146104d25780633408e4701461050a578063414a37ba1461051d57600080fd5b806317cc915c1161037557806317cc915c1461041f5780631e6276171461044f5780631f7f99f7146104715780632570b7b41461049157600080fd5b806308724aff1461039c5780630b27fb9a146103be57806311e4dcb9146103ef575b600080fd5b3480156103a857600080fd5b506103bc6103b736600461473c565b610c42565b005b3480156103ca57600080fd5b5060055463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103fb57600080fd5b5061040f61040a3660046146e6565b610c5a565b60405190151581526020016103e6565b34801561042b57600080fd5b5061040f61043a366004614565565b600c6020526000908152604090205460ff1681565b34801561045b57600080fd5b50610464610cef565b6040516103e69190614a76565b34801561047d57600080fd5b506103bc61048c366004614950565b610e53565b34801561049d57600080fd5b506104b16104ac3660046146e6565b610eab565b6040519081526020016103e6565b6103bc6104cd3660046148c0565b610f94565b3480156104de57600080fd5b50600b546104f2906001600160a01b031681565b6040516001600160a01b0390911681526020016103e6565b34801561051657600080fd5b50466104b1565b34801561052957600080fd5b506104b160008051602061534b83398151915281565b34801561054b57600080fd5b506104b161055a366004614950565b600960209081526000928352604080842090915290825290205481565b34801561058357600080fd5b506103bc61059236600461436e565b6110b4565b3480156105a357600080fd5b506105ac61113a565b60405165ffffffffffff90911681526020016103e6565b3480156105cf57600080fd5b506103d57f000000000000000000000000000000000000000000000000000000000000000081565b34801561060357600080fd5b506103bc61061236600461436e565b611188565b34801561062357600080fd5b506103bc6106323660046147c3565b6111d8565b34801561064357600080fd5b506103d5610652366004614565565b600a6020526000908152604090205463ffffffff1681565b34801561067657600080fd5b5061040f610685366004614443565b6111f2565b6103bc6114e6565b34801561069e57600080fd5b5061040f6106ad366004614565565b61156d565b3480156106be57600080fd5b506106e67f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103e6565b34801561070457600080fd5b506103bc61071336600461439a565b6115e8565b34801561072457600080fd5b506104b160105481565b34801561073a57600080fd5b506104b1600160f81b81565b34801561075257600080fd5b5061040f610761366004614565565b600d6020526000908152604090205460ff1681565b34801561078257600080fd5b506104b1600f5481565b34801561079857600080fd5b506107a4600160f81b81565b6040516001600160f01b031990911681526020016103e6565b3480156107c957600080fd5b506107d261172a565b6040516103e69190614aae565b3480156107eb57600080fd5b506103bc6107fa366004614950565b6118fa565b34801561080b57600080fd5b506104b161081a3660046146b1565b611949565b34801561082b57600080fd5b506104b1600e5481565b34801561084157600080fd5b506003546103d59063ffffffff1681565b34801561085e57600080fd5b5061040f61086d366004614565565b60009081526007602052604090205460ff1690565b6103bc61089036600461436e565b611aac565b6103bc6108a336600461432d565b611c5c565b3480156108b457600080fd5b506103bc6108c336600461485d565b611d22565b3480156108d457600080fd5b506108e86108e33660046143cf565b611f0c565b6040516103e69190614a30565b6103bc61090336600461457e565b611fd4565b34801561091457600080fd5b506103bc61092336600461439a565b6125a4565b34801561093457600080fd5b506103bc610943366004614708565b6126e6565b34801561095457600080fd5b5060035463ffffffff166000908152600260205260409020546104b1565b34801561097e57600080fd5b5061099861098d366004614565565b65ffffffffffff1690565b6040516001600160401b0390911681526020016103e6565b3480156109bc57600080fd5b506104b16109cb366004614565565b60026020526000908152604090205481565b3480156109e957600080fd5b506005546104f290600160201b90046001600160a01b031681565b348015610a1057600080fd5b506103d5601e81565b348015610a2557600080fd5b50610a39610a34366004614565565b61274b565b6040805194855260208501939093529183015260608201526080016103e6565b348015610a6557600080fd5b506103bc610a743660046146e6565b612785565b348015610a8557600080fd5b5061040f610a94366004614565565b6000908152600c602052604090205460ff1690565b348015610ab557600080fd5b506104b1610ac4366004614565565b60066020526000908152604090205481565b348015610ae257600080fd5b506104b1610af1366004614565565b6128ae565b348015610b0257600080fd5b506104b17f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610b3657600080fd5b506104f27f000000000000000000000000000000000000000000000000000000000000000081565b348015610b6a57600080fd5b506104b1610b79366004614565565b60016020526000908152604090205481565b348015610b9757600080fd5b50610bab610ba6366004614477565b612eee565b6040516103e693929190614b20565b348015610bc657600080fd5b5061040f610bd5366004614565565b60076020526000908152604090205460ff1681565b348015610bf657600080fd5b506104f27f000000000000000000000000000000000000000000000000000000000000000081565b348015610c2a57600080fd5b506003546103d590600160201b900463ffffffff1681565b610c4b836126e6565b610c558282611d22565b505050565b600081610c6957506000610ce9565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610cb257600192505050610ce9565b63ffffffff8116610cc15750601e5b80610ccb8161522a565b9150508163ffffffff168163ffffffff161415610c80576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610d2e57610d2e61531f565b604051908082528060200260200182016040528015610d57578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610e4d57610d93816001614fa3565b60085410610de35760088181548110610dae57610dae615309565b906000526020600020906004020160010154828281518110610dd257610dd2615309565b602002602001018181525050610e3b565b610e1c610e1160017f00000000000000000000000000000000000000000000000000000000000000006151a2565b63ffffffff166128ae565b828281518110610e2e57610e2e615309565b6020026020010181815250505b80610e458161524a565b915050610d5d565b50919050565b600554600160201b90046001600160a01b03163314610e8d5760405162461bcd60e51b8152600401610e8490614d3a565b60405180910390fd5b6005805463ffffffff191663ffffffff8316179055600f8290555050565b6000600160f81b8210610eee5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b6044820152606401610e84565b610efb600160f81b6152c0565b83138015610f0c5750600160f81b83125b610f4d5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610e84565b6000610f59838561514c565b90506000811215610f8a57610f6d816152c0565b610f859060008051602061534b83398151915261518b565b610f8c565b805b949350505050565b610f9e8383612f77565b600082602001511315610fe45760105482602001511115610fd15760405162461bcd60e51b8152600401610e8490614cf0565b610fdf818360200151611aac565b61108e565b60008260200151121561108e5781516001600160a01b03166110485760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e84565b600f548260200151611059906152c0565b10156110775760405162461bcd60e51b8152600401610e8490614be6565b61108e81836000015184602001516108a3906152c0565b6060820151156110aa576110aa8260400151836060015161317c565b610c5583836132e0565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889061110490339086908690600401614a0c565b600060405180830381600087803b15801561111e57600080fd5b505af1158015611132573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161117d816151c7565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b69061110490339086908690600401614a0c565b6111e1846126e6565b6111ec838383610f94565b50505050565b60006112178260008151811061120a5761120a615309565b602002602001015161156d565b6112635760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610e84565b61128e7f00000000000000000000000000000000000000000000000000000000000000006001614fe3565b60ff168251146112e05760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610e84565b600160005b6008548110156113e75760006008828154811061130457611304615309565b9060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905061137a81600001518684600161135d9190614fa3565b8151811061136d5761136d615309565b6020026020010151610c5a565b6113c65760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610e84565b826113d08161524a565b9350505080806113df9061524a565b9150506112e5565b505b6114147f00000000000000000000000000000000000000000000000000000000000000006001614fe3565b60ff1681146114dd5761144b610e1160017f00000000000000000000000000000000000000000000000000000000000000006151a2565b83828151811061145d5761145d615309565b6020026020010151146114cb5760405162461bcd60e51b815260206004820152603060248201527f6e6f6e2d6578697374656e742065646765206973206e6f742073657420746f2060448201526f1d1a1948191959985d5b1d081c9bdbdd60821b6064820152608401610e84565b806114d58161524a565b9150506113e9565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906115399033906000908190600401614a0c565b6000604051808303818588803b15801561155257600080fd5b505af1158015611566573d6000803e3d6000fd5b5050505050565b60008161157c57506000919050565b60035463ffffffff16805b63ffffffff81166000908152600260205260409020548414156115ae575060019392505050565b63ffffffff81166115bd5750601e5b806115c78161522a565b9150508163ffffffff168163ffffffff161415611587575060009392505050565b600554600160201b90046001600160a01b031633146116195760405162461bcd60e51b8152600401610e8490614d3a565b6001600160a01b0382166116655760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e84565b60055463ffffffff8083169116106116af5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e84565b6005546116c49063ffffffff16610418614fbb565b63ffffffff168163ffffffff16106116ee5760405162461bcd60e51b8152600401610e8490614c31565b600580546001600160c01b031916600160201b6001600160a01b03949094169390930263ffffffff19169290921763ffffffff91909116179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156117695761176961531f565b6040519080825280602002602001820160405280156117bb57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816117875790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610e4d576117f7816001614fa3565b60085410611875576008818154811061181257611812615309565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505082828151811061186557611865615309565b60200260200101819052506118e8565b6040518060800160405280600081526020016118b760017f0000000000000000000000000000000000000000000000000000000000000000610e1191906151a2565b8152602001600081526020016000801b8152508282815181106118dc576118dc615309565b60200260200101819052505b806118f28161524a565b9150506117c1565b600554600160201b90046001600160a01b0316331461192b5760405162461bcd60e51b8152600401610e8490614d3a565b6005805463ffffffff191663ffffffff831617905560108290555050565b600060008051602061534b83398151915283106119a85760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610e84565b60008051602061534b8339815191528210611a0f5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610e84565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611a509190600401614b12565b60206040518083038186803b158015611a6857600080fd5b505afa158015611a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa09190614937565b925050505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b158015611b0f57600080fd5b505afa158015611b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b479190614937565b90506001600160a01b038316611bf957803414611b6357600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b158015611bdb57600080fd5b505af1158015611bef573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611bc2565b60026004541415611c7f5760405162461bcd60e51b8152600401610e8490614cb9565b6002600455611c8e3082613437565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611d0057600080fd5b505af1158015611d14573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611d455760405162461bcd60e51b8152600401610e8490614cb9565b6002600455611d548282612f77565b600081602001511315611e2f5760105481602001511115611d875760405162461bcd60e51b8152600401610e8490614cf0565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91611ddb913391309190600401614a0c565b602060405180830381600087803b158015611df557600080fd5b505af1158015611e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2d9190614543565b505b600081602001511215611edd5780516001600160a01b0316611e935760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e84565b600f548160200151611ea4906152c0565b1015611ec25760405162461bcd60e51b8152600401610e8490614be6565b611edd81600001518260200151611ed8906152c0565b613437565b606081015115611ef957611ef98160400151826060015161317c565b611f0382826132e0565b50506001600455565b60606000826001600160401b03811115611f2857611f2861531f565b604051908082528060200260200182016040528015611f51578160200160208202803683370190505b50905060005b83811015611fcc57611f90858583818110611f7457611f74615309565b905060200201356000908152600c602052604090205460ff1690565b15611fba576001828281518110611fa957611fa9615309565b911515602092830291909101909101525b80611fc48161524a565b915050611f57565b509392505050565b600554600160201b90046001600160a01b031633146120055760405162461bcd60e51b8152600401610e8490614d3a565b600260045414156120285760405162461bcd60e51b8152600401610e8490614cb9565b6002600455600065ffffffffffff8216604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b15801561207a57600080fd5b505afa15801561208e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b29190614543565b156123c7576001600160401b0381166000908152600660205260409020546008805463ffffffff8616929081106120eb576120eb615309565b9060005260206000209060040201600201541061214a5760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610e84565b600860066000836001600160401b03168152602001908152602001600020548154811061217957612179615309565b906000526020600020906004020160020154620100006121999190614fa3565b8363ffffffff16106121fd5760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610e84565b600860066000836001600160401b03168152602001908152602001600020548154811061222c5761222c615309565b906000526020600020906004020160030154821461228c5760405162461bcd60e51b815260206004820152601e60248201527f7372635265736f757263654944206d757374206265207468652073616d6500006044820152606401610e84565b6001600160401b0381166000908152600660205260409020546008805463ffffffff86169190839081106122c2576122c2615309565b90600052602060002090600402016002018190555084600882815481106122eb576122eb615309565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e916123309163ffffffff90911690614fbb565b61233a919061529d565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff878116918217909255600984528285209085528352928190208b905580519384529189169083015281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050612599565b60085460ff7f0000000000000000000000000000000000000000000000000000000000000000161161243b5760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610e84565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c815263ffffffff8c1682870181815260608085018e81529786018755958a528351600486027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee583015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690910155878752600686528487208290556009865284872087805286528487208c9055845197885294870192909252918501899052939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b600554600160201b90046001600160a01b031633146125d55760405162461bcd60e51b8152600401610e8490614d3a565b6001600160a01b0382166126215760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e84565b60055463ffffffff80831691161061266b5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e84565b6005546126809063ffffffff16610418614fbb565b63ffffffff168163ffffffff16106126aa5760405162461bcd60e51b8152600401610e8490614c31565b600b80546001600160a01b0319166001600160a01b0393909316929092179091556005805463ffffffff191663ffffffff909216919091179055565b80516001600160a01b0316331461273f5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610e84565b6127488161350e565b50565b6008818154811061275b57600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff16158080156127a55750600054600160ff909116105b806127bf5750303b1580156127bf575060005460ff166001145b6128225760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e84565b6000805460ff191660011790558015612845576000805461ff0019166101001790555b6005805463ffffffff1916905561285b83600f55565b61286482601055565b8015610c55576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6000816128dc57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561290c57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561293c57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561296c57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004141561299c57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156129cc57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600614156129fc57507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415612a2c57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b8160081415612a5c57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b8160091415612a8c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a1415612abc57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415612aec57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415612b1c57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d1415612b4c57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e1415612b7c57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f1415612bac57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415612bdc57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415612c0b57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b8160121415612c3b57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160131415612c6b57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b8160141415612c9b57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415612ccb57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612cfb57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612d2b57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612d5b57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612d8b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612dbb57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612deb57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612e1b57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612e4b57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612e7b57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612eab57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610e84565b919050565b612ef6613f97565b612efe613fb5565b612f06613f97565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b82604001515181101561301557612fbd83604001518281518110612fa057612fa0615309565b60200260200101516000908152600c602052604090205460ff1690565b156130035760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610e84565b8061300d8161524a565b915050612f7a565b5060008051602061534b833981519152816040516020016130369190614d71565b6040516020818303038152906040528051906020012060001c6130599190615289565b60a0830151146130ab5760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610e84565b6130bd81602001518260600151610eab565b8260800151146131075760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610e84565b6131108261355a565b60005b826040015151811015610c55576001600c60008560400151848151811061313c5761313c615309565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806131749061524a565b915050613113565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156131de57600080fd5b505afa1580156131f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132169190614937565b90508115610c555781811061325957610c556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613814565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b1580156132c357600080fd5b505af11580156132d7573d6000803e3d6000fd5b50505050505050565b606082015180516020909101516132f79190613866565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd919061333d90600290600160201b900463ffffffff166151a2565b8360c0015160405161335193929190614ba5565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd90600160200201516003546133a390600190600160201b900463ffffffff166151a2565b8360e001516040516133b793929190614ba5565b60405180910390a160005b826040015151811015610c55577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8360400151828151811061340657613406615309565b602002602001015160405161341d91815260200190565b60405180910390a18061342f8161524a565b9150506133c2565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561349957600080fd5b505afa1580156134ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d19190614937565b905081811061325957610c556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613814565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e50826020015160405161354f9190614bd3565b60405180910390a250565b806040015151600214156136b95760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016135c4929190614e1c565b60006040518083038186803b1580156135dc57600080fd5b505af41580156135f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261361891908101906145b3565b91509150613625816111f2565b6136615760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e84565b825161366d9083613994565b610c555760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610e84565b806040015151601014156137cc5760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401613723929190614e1c565b60006040518083038186803b15801561373b57600080fd5b505af415801561374f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261377791908101906145b3565b91509150613784816111f2565b6137c05760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e84565b825161366d9083613abe565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610e84565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c55908490613b46565b6000828152600d602052604081205460ff16156138955760405162461bcd60e51b8152600401610e8490614c78565b6000828152600d602052604090205460ff16156138c45760405162461bcd60e51b8152600401610e8490614c78565b60006138d08484613c18565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5613970836001614fbb565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906139ab91906144e2565b905060008060006139bb84612eee565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613a1c908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600190600401614b49565b60206040518083038186803b158015613a3457600080fd5b505afa158015613a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a6c9190614543565b945084613ab45760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610e84565b5050505092915050565b60008083806020019051810190613ad591906144e2565b90506000806000613ae584612eee565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613a1c908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600090600401614b49565b6000613b9b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613e839092919063ffffffff16565b805190915015610c555780806020019051810190613bb99190614543565b610c555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e84565b600354600090600160201b900463ffffffff16613c567f00000000000000000000000000000000000000000000000000000000000000006002615070565b63ffffffff168163ffffffff161415613cca5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610e84565b6000613cd7600283615008565b90506000613d067f00000000000000000000000000000000000000000000000000000000000000008787611949565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613df057613d4d60028661529d565b63ffffffff16613d8857839250613d698163ffffffff166128ae565b63ffffffff821660009081526001602052604090208590559150613da4565b63ffffffff811660009081526001602052604090205492508391505b613dcf7f00000000000000000000000000000000000000000000000000000000000000008484611949565b9350613ddc600286615008565b945080613de881615265565b915050613d0e565b50600354600090601e90613e0b9063ffffffff166001614fbb565b613e15919061529d565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613e4f908790614fbb565b6003805463ffffffff92909216600160201b0267ffffffff0000000019909216919091179055509394505050505092915050565b6060610f8c8484600085856001600160a01b0385163b613ee55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e84565b600080866001600160a01b03168587604051613f0191906149f0565b60006040518083038185875af1925050503d8060008114613f3e576040519150601f19603f3d011682016040523d82523d6000602084013e613f43565b606091505b5091509150613f53828286613f5e565b979650505050505050565b60608315613f6d575081611aa5565b825115613f7d5782518084602001fd5b8160405162461bcd60e51b8152600401610e849190614bd3565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613fcc613f97565b815260200190600190039081613fc45790505090565b8035612ee981615335565b600082601f830112613ffe57600080fd5b604051604081018181106001600160401b03821117156140205761402061531f565b806040525080838560408601111561403757600080fd5b60005b600281101561405957813583526020928301929091019060010161403a565b509195945050505050565b600082601f83011261407557600080fd5b8135602061408a61408583614f59565b614f29565b80838252828201915082860187848660051b89010111156140aa57600080fd5b60005b858110156140c9578135845292840192908401906001016140ad565b5090979650505050505050565b600082601f8301126140e757600080fd5b81356140f561408582614f7c565b81815284602083860101111561410a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561413957600080fd5b604051604081016001600160401b03828210818311171561415c5761415c61531f565b816040528293508435915061417082615335565b9082526020840135908082111561418657600080fd5b50614193858286016140d6565b6020830152505092915050565b600061010082840312156141b357600080fd5b6141bb614ede565b90506141c682613fe2565b8152602082013560208201526141de60408301613fe2565b6040820152606082013560608201526080820135608082015261420360a08301613fe2565b60a082015260c08201356001600160401b038082111561422257600080fd5b61422e858386016140d6565b60c084015260e084013591508082111561424757600080fd5b50614254848285016140d6565b60e08301525092915050565b600060e0828403121561427257600080fd5b61427a614f07565b905081356001600160401b038082111561429357600080fd5b61429f858386016140d6565b835260208401359150808211156142b557600080fd5b6142c1858386016140d6565b602084015260408401359150808211156142da57600080fd5b506142e784828501614064565b6040830152506142fa8360608401613fed565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612ee957600080fd5b60008060006060848603121561434257600080fd5b833561434d81615335565b9250602084013561435d81615335565b929592945050506040919091013590565b6000806040838503121561438157600080fd5b823561438c81615335565b946020939093013593505050565b600080604083850312156143ad57600080fd5b82356143b881615335565b91506143c660208401614319565b90509250929050565b600080602083850312156143e257600080fd5b82356001600160401b03808211156143f957600080fd5b818501915085601f83011261440d57600080fd5b81358181111561441c57600080fd5b8660208260051b850101111561443157600080fd5b60209290920196919550909350505050565b60006020828403121561445557600080fd5b81356001600160401b0381111561446b57600080fd5b610f8c84828501614064565b600061010080838503121561448b57600080fd5b83601f84011261449a57600080fd5b6144a2614ede565b80848684870111156144b357600080fd5b600093505b60088410156144d8578035835260019390930192602092830192016144b8565b5095945050505050565b60006101008083850312156144f657600080fd5b83601f84011261450557600080fd5b61450d614ede565b808486848701111561451e57600080fd5b600093505b60088410156144d857805183526001939093019260209283019201614523565b60006020828403121561455557600080fd5b81518015158114610f8a57600080fd5b60006020828403121561457757600080fd5b5035919050565b60008060006060848603121561459357600080fd5b833592506145a360208501614319565b9150604084013590509250925092565b600080604083850312156145c657600080fd5b82516001600160401b03808211156145dd57600080fd5b818501915085601f8301126145f157600080fd5b8151602061460161408583614f7c565b828152888284870101111561461557600080fd5b614624838383018488016151fe565b8782015190965093508284111561463a57600080fd5b838701935087601f85011261464e57600080fd5b8351925061465e61408584614f59565b8381528181019250848201600585901b860183018a101561467e57600080fd5b600095505b848610156146a1578051845260019590950194928201928201614683565b5080955050505050509250929050565b6000806000606084860312156146c657600080fd5b83356146d181615335565b95602085013595506040909401359392505050565b600080604083850312156146f957600080fd5b50508035926020909101359150565b60006020828403121561471a57600080fd5b81356001600160401b0381111561473057600080fd5b610f8c84828501614127565b60008060006060848603121561475157600080fd5b83356001600160401b038082111561476857600080fd5b61477487838801614127565b9450602086013591508082111561478a57600080fd5b61479687838801614260565b935060408601359150808211156147ac57600080fd5b506147b9868287016141a0565b9150509250925092565b600080600080608085870312156147d957600080fd5b84356001600160401b03808211156147f057600080fd5b6147fc88838901614127565b9550602087013591508082111561481257600080fd5b61481e88838901614260565b9450604087013591508082111561483457600080fd5b50614841878288016141a0565b925050606085013561485281615335565b939692955090935050565b6000806040838503121561487057600080fd5b82356001600160401b038082111561488757600080fd5b61489386838701614260565b935060208501359150808211156148a957600080fd5b506148b6858286016141a0565b9150509250929050565b6000806000606084860312156148d557600080fd5b83356001600160401b03808211156148ec57600080fd5b6148f887838801614260565b9450602086013591508082111561490e57600080fd5b5061491b868287016141a0565b925050604084013561492c81615335565b809150509250925092565b60006020828403121561494957600080fd5b5051919050565b6000806040838503121561496357600080fd5b823591506143c660208401614319565b8060005b60028110156111ec5761498b8483516149a1565b6040939093019260209190910190600101614977565b8060005b60028110156111ec5781518452602093840193909101906001016149a5565b600081518084526149dc8160208601602086016151fe565b601f01601f19169290920160200192915050565b60008251614a028184602087016151fe565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b81811015614a6a578351151583529284019291840191600101614a4c565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015614a6a57835183529284019291840191600101614a92565b602080825282518282018190526000919060409081850190868401855b82811015614b0557815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101614acb565b5091979650505050505050565b60408101610ce982846149a1565b6101008101614b2f82866149a1565b614b3c6040830185614973565b610f8c60c08301846149a1565b6000610160614b58838a6149a1565b614b656040840189614973565b614b7260c08401886149a1565b80610100840152614b85818401876149c4565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614bca60608301846149c4565b95945050505050565b602081526000611aa560208301846149c4565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b6020815260018060a01b0382511660208201526020820151604082015260006040830151614daa60608401826001600160a01b03169052565b5060608301516080830152608083015160a083015260a0830151614dd960c08401826001600160a01b03169052565b5060c08301516101008060e0850152614df66101208501836149c4565b915060e0850151601f198584030182860152614e1283826149c4565b9695505050505050565b604081526000835160e06040840152614e396101208401826149c4565b9050602080860151603f1980868503016060870152614e5884836149c4565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614e9a5784518252938301936001929092019190830190614e7a565b5060608801519350614eaf60a08701856149a1565b608088015160e087015260a088015161010087015260ff8716838701529350614ed59050565b50509392505050565b60405161010081016001600160401b0381118282101715614f0157614f0161531f565b60405290565b60405160c081016001600160401b0381118282101715614f0157614f0161531f565b604051601f8201601f191681016001600160401b0381118282101715614f5157614f5161531f565b604052919050565b60006001600160401b03821115614f7257614f7261531f565b5060051b60200190565b60006001600160401b03821115614f9557614f9561531f565b50601f01601f191660200190565b60008219821115614fb657614fb66152dd565b500190565b600063ffffffff808316818516808303821115614fda57614fda6152dd565b01949350505050565b600060ff821660ff84168060ff03821115615000576150006152dd565b019392505050565b600063ffffffff8084168061501f5761501f6152f3565b92169190910492915050565b600181815b80851115615068578163ffffffff0482111561504e5761504e6152dd565b8085161561505b57918102915b93841c9390800290615030565b509250929050565b600063ffffffff610f8c81851682851660008261508f57506001610ce9565b8161509c57506000610ce9565b81600181146150b257600281146150bc576150ed565b6001915050610ce9565b60ff8411156150cd576150cd6152dd565b6001841b915063ffffffff8211156150e7576150e76152dd565b50610ce9565b5060208310610133831016604e8410600b8410161715615124575081810a63ffffffff81111561511f5761511f6152dd565b610ce9565b61512e838361502b565b8063ffffffff04821115615144576151446152dd565b029392505050565b60008083128015600160ff1b85018412161561516a5761516a6152dd565b6001600160ff1b0384018313811615615185576151856152dd565b50500390565b60008282101561519d5761519d6152dd565b500390565b600063ffffffff838116908316818110156151bf576151bf6152dd565b039392505050565b805160208201516001600160d01b031980821692919060068310156151f65780818460060360031b1b83161693505b505050919050565b60005b83811015615219578181015183820152602001615201565b838111156111ec5750506000910152565b600063ffffffff821680615240576152406152dd565b6000190192915050565b600060001982141561525e5761525e6152dd565b5060010190565b600063ffffffff8083168181141561527f5761527f6152dd565b6001019392505050565b600082615298576152986152f3565b500690565b600063ffffffff808416806152b4576152b46152f3565b92169190910692915050565b6000600160ff1b8214156152d6576152d66152dd565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461274857600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212201cb41f30f753a44f27a0b93f23a8b9dc05fc97033533c26b7c68ea80b62a5a7264736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
