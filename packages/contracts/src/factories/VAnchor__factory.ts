/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005ab938038062005ab98339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614fb662000b0360003960008181610bae01528181610e3001528181610ec4015281816116ae0152818161174c0152818161197a01528181611f5e0152818161201f01528181612e8101528181612f1f01528181612f6c0152818161312101526131b90152600081816106a601528181610c9001528181610cfa015281816114fd015281816117fb01528181611bec01528181611c780152818161325a015281816133b9015281816136c301526137ed0152600081816105d701528181610d8301528181611d370152818161390301526139e3015260008181610aee015281816139b30152613a7c0152614fb66000f3fe60806040526004361061038c5760003560e01c80638ea3099e116101dc578063c9be725011610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b3d578063fa73168714610b6c578063fc0c546a14610b9c578063fc7e9c6f14610bd057600080fd5b8063e829558814610a88578063ec73295914610aa8578063ed33639f14610adc578063f178e47c14610b1057600080fd5b8063dbc916b8116100dc578063dbc916b8146109d0578063e4a3011614610a0b578063e5285dcc14610a2b578063e70ea87c14610a5b57600080fd5b8063c9be72501461097b578063cd87a3b41461099b578063dad878a5146109b057600080fd5b80639ff800631161017a578063ba70f75711610149578063ba70f75714610904578063bc063e1a14610710578063c2b40ae41461092e578063c80916d41461095b57600080fd5b80639ff80063146105f9578063a0d192f5146108a4578063b2bc6e0f146108c4578063b7566a67146108e457600080fd5b806392156311116101b6578063921563111461081457806395c87d1a146108445780639bbca3a9146108575780639fa12d0b1461087757600080fd5b80638ea3099e146107c15780638f1c56bd146107e157806390eeb02b146107f757600080fd5b80634c830cbd116102c157806371523c321161025f578063839df9451161022e578063839df94514610728578063840b2791146107585780638b7e87821461076e5780638c0d34d81461079f57600080fd5b806371523c321461069457806372c1ad03146106da57806378abb49b146106fa5780637fe24ffe1461071057600080fd5b80635d2d766c1161029b5780635d2d766c14610619578063616e09571461064c5780636ad481f31461066c5780636d9833e31461067457600080fd5b80634c830cbd146105995780634ecf518b146105c55780634f401241146105f957600080fd5b80632d48470c1161032e5780634167bb1e116103085780634167bb1e1461051b57806343e7119f1461052e57806344347ba914610566578063460b53e31461057957600080fd5b80632d48470c146104c65780633408e470146104e6578063414a37ba146104f957600080fd5b80631e6276171161036a5780631e627617146104295780632063e3d31461044b5780632570b7b4146104605780632b7ac3f31461048e57600080fd5b80630b27fb9a1461039157806311e4dcb9146103c957806317cc915c146103f9575b600080fd5b34801561039d57600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103d557600080fd5b506103e96103e4366004614360565b610bf5565b60405190151581526020016103c0565b34801561040557600080fd5b506103e9610414366004614214565b600c6020526000908152604090205460ff1681565b34801561043557600080fd5b5061043e610c8a565b6040516103c0919061471c565b61045e61045936600461401d565b610de4565b005b34801561046c57600080fd5b5061048061047b366004614360565b610f25565b6040519081526020016103c0565b34801561049a57600080fd5b50600b546104ae906001600160a01b031681565b6040516001600160a01b0390911681526020016103c0565b3480156104d257600080fd5b5061045e6104e1366004614214565b611013565b3480156104f257600080fd5b5046610480565b34801561050557600080fd5b50610480600080516020614f6183398151915281565b61045e61052936600461453a565b611049565b34801561053a57600080fd5b506104806105493660046145f6565b600960209081526000928352604080842090915290825290205481565b61045e6105743660046145ca565b611169565b34801561058557600080fd5b5061045e61059436600461401d565b611697565b3480156105a557600080fd5b506105ae6116e7565b60405165ffffffffffff90911681526020016103c0565b3480156105d157600080fd5b506103af7f000000000000000000000000000000000000000000000000000000000000000081565b34801561060557600080fd5b5061045e61061436600461401d565b611735565b34801561062557600080fd5b506103af610634366004614214565b600a6020526000908152604090205463ffffffff1681565b34801561065857600080fd5b506103e96106673660046140f2565b611785565b61045e611963565b34801561068057600080fd5b506103e961068f366004614214565b6119ea565b3480156106a057600080fd5b506106c87f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103c0565b3480156106e657600080fd5b5061045e6106f5366004614049565b611a65565b34801561070657600080fd5b5061048060105481565b34801561071c57600080fd5b50610480600160f81b81565b34801561073457600080fd5b506103e9610743366004614214565b600d6020526000908152604090205460ff1681565b34801561076457600080fd5b50610480600f5481565b34801561077a57600080fd5b50610786600160f81b81565b6040516001600160f01b031990911681526020016103c0565b3480156107ab57600080fd5b506107b4611be6565b6040516103c09190614754565b3480156107cd57600080fd5b506104806107dc36600461432b565b611d9b565b3480156107ed57600080fd5b50610480600e5481565b34801561080357600080fd5b506003546103af9063ffffffff1681565b34801561082057600080fd5b506103e961082f366004614214565b60009081526007602052604090205460ff1690565b61045e610852366004613fdc565b611efe565b34801561086357600080fd5b5061045e6108723660046144d7565b611fc4565b34801561088357600080fd5b5061089761089236600461407e565b6121ad565b6040516103c091906146d6565b3480156108b057600080fd5b5061045e6108bf366004614049565b612275565b3480156108d057600080fd5b5061045e6108df366004614382565b6123e0565b3480156108f057600080fd5b5061045e6108ff36600461443d565b612442565b34801561091057600080fd5b5060035463ffffffff16600090815260026020526040902054610480565b34801561093a57600080fd5b50610480610949366004614214565b60026020526000908152604090205481565b34801561096757600080fd5b506005546104ae906001600160a01b031681565b34801561098757600080fd5b5061045e6109963660046143b6565b61245c565b3480156109a757600080fd5b506103af601e81565b3480156109bc57600080fd5b5061045e6109cb366004614214565b61246f565b3480156109dc57600080fd5b506109f06109eb366004614214565b6124a2565b604080519384526020840192909252908201526060016103c0565b348015610a1757600080fd5b5061045e610a26366004614360565b6124d5565b348015610a3757600080fd5b506103e9610a46366004614214565b6000908152600c602052604090205460ff1690565b348015610a6757600080fd5b50610480610a76366004614214565b60066020526000908152604090205481565b348015610a9457600080fd5b50610480610aa3366004614214565b61259b565b348015610ab457600080fd5b506104807f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610ae857600080fd5b506104ae7f000000000000000000000000000000000000000000000000000000000000000081565b348015610b1c57600080fd5b50610480610b2b366004614214565b60016020526000908152604090205481565b348015610b4957600080fd5b50610b5d610b58366004614126565b612bdb565b6040516103c0939291906147bb565b348015610b7857600080fd5b506103e9610b87366004614214565b60076020526000908152604090205460ff1681565b348015610ba857600080fd5b506104ae7f000000000000000000000000000000000000000000000000000000000000000081565b348015610bdc57600080fd5b506003546103af90640100000000900463ffffffff1681565b600081610c0457506000610c84565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c4d57600192505050610c84565b63ffffffff8116610c5c5750601e5b80610c6681614e40565b9150508163ffffffff168163ffffffff161415610c1b576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610cc957610cc9614f35565b604051908082528060200260200182016040528015610cf2578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610dde57610d2e816001614bb9565b60085410610d7e5760088181548110610d4957610d49614f1f565b906000526020600020906003020160010154828281518110610d6d57610d6d614f1f565b602002602001018181525050610dcc565b610dad7f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661259b565b828281518110610dbf57610dbf614f1f565b6020026020010181815250505b80610dd681614e60565b915050610cf8565b50919050565b6001600160a01b038216610e9257803414610dfe57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610e7557600080fd5b505af1158015610e89573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610f0957600080fd5b505af1158015610f1d573d6000803e3d6000fd5b505050505050565b6000600160f81b8210610f6d5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610f7a600160f81b614ed6565b83138015610f8b5750600160f81b83125b610fcc5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610f64565b6000610fd88385614d62565b9050600081121561100957610fec81614ed6565b61100490600080516020614f61833981519152614da1565b61100b565b805b949350505050565b6005546001600160a01b0316331461103d5760405162461bcd60e51b8152600401610f649061498e565b61104681600f55565b50565b6110538383612c64565b60008260200151131561109457601054826020015111156110865760405162461bcd60e51b8152600401610f6490614944565b611094818360200151610de4565b60008260200151121561113e5781516001600160a01b03166110f85760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610f64565b600f54826020015161110990614ed6565b10156111275760405162461bcd60e51b8152600401610f6490614881565b61113e818360000151846020015161085290614ed6565b60608201511561115a5761115a82604001518360600151612e69565b6111648383612fb0565b505050565b6005546001600160a01b031633146111935760405162461bcd60e51b8152600401610f649061498e565b600260045414156111b65760405162461bcd60e51b8152600401610f649061490d565b60026004908155604051639215631160e01b8152908101849052309063921563119060240160206040518083038186803b1580156111f357600080fd5b505afa158015611207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122b91906141f2565b156114f65760008381526007602052604090205460ff166112b45760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610f64565b6000838152600660205260409020546008805483929081106112d8576112d8614f1f565b906000526020600020906003020160020154106113375760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610f64565b60008381526006602052604090205460088054909190811061135b5761135b614f1f565b9060005260206000209060030201600201546201000061137b9190614bb9565b81106113d95760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610f64565b600083815260066020908152604091829020548251606081018452868152918201859052918101839052600880548390811061141757611417614f1f565b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600a9052918120549091601e9161146a9163ffffffff90911690614bd1565b6114749190614eb3565b6000868152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902087905581518881529081018690529081018690529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a1505061168d565b60085460ff7f0000000000000000000000000000000000000000000000000000000000000000161161156a5760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610f64565b6000838152600760209081526040808320805460ff19166001908117909155600880548351606080820186528a82528187018a81528287018a815295840185559388528151600384027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee485015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee590930192909255888652600685528386208190556009855283862086805285528386208890558351898152948501879052928401879052919391927fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b5050600160045550565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610eef903390869086906004016146b2565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161172a81614ddd565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610eef903390869086906004016146b2565b60006117aa8260008151811061179d5761179d614f1f565b60200260200101516119ea565b6117f65760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610f64565b6118217f00000000000000000000000000000000000000000000000000000000000000006001614bf9565b60ff168251146118735760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610f64565b60005b60085481101561195a5760006008828154811061189557611895614f1f565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090506118fb8160000151600260008560016118e79190614bb9565b815260200190815260200160002054610bf5565b6119475760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610f64565b508061195281614e60565b915050611876565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906119b690339060009081906004016146b2565b6000604051808303818588803b1580156119cf57600080fd5b505af11580156119e3573d6000803e3d6000fd5b5050505050565b6000816119f957506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611a2b575060019392505050565b63ffffffff8116611a3a5750601e5b80611a4481614e40565b9150508163ffffffff168163ffffffff161415611a04575060009392505050565b6005546001600160a01b03163314611a8f5760405162461bcd60e51b8152600401610f649061498e565b6001600160a01b038216611adb5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610f64565b600b5463ffffffff808316600160a01b9092041610611b2c5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610f64565b600b54611b4790600160a01b900463ffffffff166001614bd1565b63ffffffff168163ffffffff161115611b9e5760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b6044820152606401610f64565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611c2557611c25614f35565b604051908082528060200260200182016040528015611c7057816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611c435790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610dde57611cac816001614bb9565b60085410611d205760088181548110611cc757611cc7614f1f565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050828281518110611d1057611d10614f1f565b6020026020010181905250611d89565b604051806060016040528060008152602001611d617f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661259b565b81526020016000815250828281518110611d7d57611d7d614f1f565b60200260200101819052505b80611d9381614e60565b915050611c76565b6000600080516020614f618339815191528310611dfa5760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610f64565b600080516020614f618339815191528210611e615760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610f64565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611ea291906004016147ad565b60206040518083038186803b158015611eba57600080fd5b505afa158015611ece573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef291906145b1565b925050505b9392505050565b60026004541415611f215760405162461bcd60e51b8152600401610f649061490d565b6002600455611f303082613109565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611fa257600080fd5b505af1158015611fb6573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611fe75760405162461bcd60e51b8152600401610f649061490d565b6002600455611ff68282612c64565b6000816020015113156120d05760208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916120579133913091906004016146b2565b602060405180830381600087803b15801561207157600080fd5b505af1158015612085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a991906141f2565b50601054816020015111156120d05760405162461bcd60e51b8152600401610f6490614944565b60008160200151121561217e5780516001600160a01b03166121345760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610f64565b600f54816020015161214590614ed6565b10156121635760405162461bcd60e51b8152600401610f6490614881565b61217e8160000151826020015161217990614ed6565b613109565b60608101511561219a5761219a81604001518260600151612e69565b6121a48282612fb0565b50506001600455565b60606000826001600160401b038111156121c9576121c9614f35565b6040519080825280602002602001820160405280156121f2578160200160208202803683370190505b50905060005b8381101561226d5761223185858381811061221557612215614f1f565b905060200201356000908152600c602052604090205460ff1690565b1561225b57600182828151811061224a5761224a614f1f565b911515602092830291909101909101525b8061226581614e60565b9150506121f8565b509392505050565b6005546001600160a01b0316331461229f5760405162461bcd60e51b8152600401610f649061498e565b6001600160a01b0382166122eb5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610f64565b600b5463ffffffff808316600160a01b909204161061233c5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610f64565b600b5461235790600160a01b900463ffffffff166001614bd1565b63ffffffff168163ffffffff1611156123ae5760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b6044820152606401610f64565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b031633146124395760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610f64565b611046816131e0565b61244b846123e0565b612456838383611049565b50505050565b612465836123e0565b6111648282611fc4565b6005546001600160a01b031633146124995760405162461bcd60e51b8152600401610f649061498e565b61104681601055565b600881815481106124b257600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff16806124ee575060005460ff16155b6125515760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610f64565b600054610100900460ff16158015612573576000805461ffff19166101011790555b61257c83600f55565b61258582601055565b8015611164576000805461ff0019169055505050565b6000816125c957507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600114156125f957507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561262957507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561265957507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004141561268957507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156126b957507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600614156126e957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561271957507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561274957507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561277957507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156127a957507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b14156127d957507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561280957507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561283957507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561286957507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f141561289957507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156128c957507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b81601114156128f857507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561292857507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561295857507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014141561298857507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156129b857507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b81601614156129e857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612a1857507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612a4857507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612a7857507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612aa857507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612ad857507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612b0857507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612b3857507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612b6857507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612b9857507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610f64565b919050565b612be3613c62565b612beb613c80565b612bf3613c62565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612d0257612caa83604001518281518110612c8d57612c8d614f1f565b60200260200101516000908152600c602052604090205460ff1690565b15612cf05760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610f64565b80612cfa81614e60565b915050612c67565b50600080516020614f6183398151915281604051602001612d2391906149c5565b6040516020818303038152906040528051906020012060001c612d469190614e9f565b60a083015114612d985760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610f64565b612daa81602001518260600151610f25565b826080015114612df45760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610f64565b612dfd8261322c565b60005b826040015151811015611164576001600c600085604001518481518110612e2957612e29614f1f565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612e6190614e60565b915050612e00565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612ecb57600080fd5b505afa158015612edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f0391906145b1565b9050811561116457818110612f46576111646001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846134e6565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610e7557600080fd5b60608201518051602090910151612fc79190613538565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd919061300e90600290640100000000900463ffffffff16614db8565b836080015160405161302293929190614840565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461307590600190640100000000900463ffffffff16614db8565b8360a0015160405161308993929190614840565b60405180910390a160005b826040015151811015611164577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106130d8576130d8614f1f565b60200260200101516040516130ef91815260200190565b60405180910390a18061310181614e60565b915050613094565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561316b57600080fd5b505afa15801561317f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131a391906145b1565b9050818110612f46576111646001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846134e6565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e508260200151604051613221919061486e565b60405180910390a250565b8060400151516002141561338b5760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401613296929190614a32565b60006040518083038186803b1580156132ae57600080fd5b505af41580156132c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132ea919081019061422d565b915091506132f781611785565b6133335760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610f64565b825161333f9083613666565b6111645760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610f64565b8060400151516010141561349e5760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016133f5929190614a32565b60006040518083038186803b15801561340d57600080fd5b505af4158015613421573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613449919081019061422d565b9150915061345681611785565b6134925760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610f64565b825161333f9083613790565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610f64565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611164908490613818565b6000828152600d602052604081205460ff16156135675760405162461bcd60e51b8152600401610f64906148cc565b6000828152600d602052604090205460ff16156135965760405162461bcd60e51b8152600401610f64906148cc565b60006135a284846138ea565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5613642836001614bd1565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b6000808380602001905181019061367d9190614191565b9050600080600061368d84612bdb565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906136ee908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906001906004016147e4565b60206040518083038186803b15801561370657600080fd5b505afa15801561371a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061373e91906141f2565b9450846137865760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610f64565b5050505092915050565b600080838060200190518101906137a79190614191565b905060008060006137b784612bdb565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906136ee908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906000906004016147e4565b600061386d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613b579092919063ffffffff16565b805190915015611164578080602001905181019061388b91906141f2565b6111645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610f64565b600354600090640100000000900463ffffffff166139297f00000000000000000000000000000000000000000000000000000000000000006002614c86565b63ffffffff168163ffffffff16141561399d5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610f64565b60006139aa600283614c1e565b905060006139d97f00000000000000000000000000000000000000000000000000000000000000008787611d9b565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613ac357613a20600286614eb3565b63ffffffff16613a5b57839250613a3c8163ffffffff1661259b565b63ffffffff821660009081526001602052604090208590559150613a77565b63ffffffff811660009081526001602052604090205492508391505b613aa27f00000000000000000000000000000000000000000000000000000000000000008484611d9b565b9350613aaf600286614c1e565b945080613abb81614e7b565b9150506139e1565b50600354600090601e90613ade9063ffffffff166001614bd1565b613ae89190614eb3565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613b22908790614bd1565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b606061100b848460008585843b613bb05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f64565b600080866001600160a01b03168587604051613bcc9190614696565b60006040518083038185875af1925050503d8060008114613c09576040519150601f19603f3d011682016040523d82523d6000602084013e613c0e565b606091505b5091509150613c1e828286613c29565b979650505050505050565b60608315613c38575081611ef7565b825115613c485782518084602001fd5b8160405162461bcd60e51b8152600401610f64919061486e565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613c97613c62565b815260200190600190039081613c8f5790505090565b8035612bd681614f4b565b600082601f830112613cc957600080fd5b604051604081018181106001600160401b0382111715613ceb57613ceb614f35565b8060405250808385604086011115613d0257600080fd5b60005b6002811015613d24578135835260209283019290910190600101613d05565b509195945050505050565b600082601f830112613d4057600080fd5b81356020613d55613d5083614b6f565b614b3f565b80838252828201915082860187848660051b8901011115613d7557600080fd5b60005b85811015613d9457813584529284019290840190600101613d78565b5090979650505050505050565b600082601f830112613db257600080fd5b8135613dc0613d5082614b92565b818152846020838601011115613dd557600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613e0457600080fd5b604051604081016001600160401b038282108183111715613e2757613e27614f35565b8160405282935084359150613e3b82614f4b565b90825260208401359080821115613e5157600080fd5b50613e5e85828601613da1565b6020830152505092915050565b600060c08284031215613e7d57600080fd5b613e85614af4565b9050613e9082613cad565b815260208201356020820152613ea860408301613cad565b60408201526060820135606082015260808201356001600160401b0380821115613ed157600080fd5b613edd85838601613da1565b608084015260a0840135915080821115613ef657600080fd5b50613f0384828501613da1565b60a08301525092915050565b600060e08284031215613f2157600080fd5b613f29614af4565b905081356001600160401b0380821115613f4257600080fd5b613f4e85838601613da1565b83526020840135915080821115613f6457600080fd5b613f7085838601613da1565b60208401526040840135915080821115613f8957600080fd5b50613f9684828501613d2f565b604083015250613fa98360608401613cb8565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612bd657600080fd5b600080600060608486031215613ff157600080fd5b8335613ffc81614f4b565b9250602084013561400c81614f4b565b929592945050506040919091013590565b6000806040838503121561403057600080fd5b823561403b81614f4b565b946020939093013593505050565b6000806040838503121561405c57600080fd5b823561406781614f4b565b915061407560208401613fc8565b90509250929050565b6000806020838503121561409157600080fd5b82356001600160401b03808211156140a857600080fd5b818501915085601f8301126140bc57600080fd5b8135818111156140cb57600080fd5b8660208260051b85010111156140e057600080fd5b60209290920196919550909350505050565b60006020828403121561410457600080fd5b81356001600160401b0381111561411a57600080fd5b61100b84828501613d2f565b600061010080838503121561413a57600080fd5b83601f84011261414957600080fd5b614151614b1c565b808486848701111561416257600080fd5b600093505b600884101561418757803583526001939093019260209283019201614167565b5095945050505050565b60006101008083850312156141a557600080fd5b83601f8401126141b457600080fd5b6141bc614b1c565b80848684870111156141cd57600080fd5b600093505b6008841015614187578051835260019390930192602092830192016141d2565b60006020828403121561420457600080fd5b8151801515811461100957600080fd5b60006020828403121561422657600080fd5b5035919050565b6000806040838503121561424057600080fd5b82516001600160401b038082111561425757600080fd5b818501915085601f83011261426b57600080fd5b8151602061427b613d5083614b92565b828152888284870101111561428f57600080fd5b61429e83838301848801614e14565b878201519096509350828411156142b457600080fd5b838701935087601f8501126142c857600080fd5b835192506142d8613d5084614b6f565b8381528181019250848201600585901b860183018a10156142f857600080fd5b600095505b8486101561431b5780518452600195909501949282019282016142fd565b5080955050505050509250929050565b60008060006060848603121561434057600080fd5b833561434b81614f4b565b95602085013595506040909401359392505050565b6000806040838503121561437357600080fd5b50508035926020909101359150565b60006020828403121561439457600080fd5b81356001600160401b038111156143aa57600080fd5b61100b84828501613df2565b6000806000606084860312156143cb57600080fd5b83356001600160401b03808211156143e257600080fd5b6143ee87838801613df2565b9450602086013591508082111561440457600080fd5b61441087838801613f0f565b9350604086013591508082111561442657600080fd5b5061443386828701613e6b565b9150509250925092565b6000806000806080858703121561445357600080fd5b84356001600160401b038082111561446a57600080fd5b61447688838901613df2565b9550602087013591508082111561448c57600080fd5b61449888838901613f0f565b945060408701359150808211156144ae57600080fd5b506144bb87828801613e6b565b92505060608501356144cc81614f4b565b939692955090935050565b600080604083850312156144ea57600080fd5b82356001600160401b038082111561450157600080fd5b61450d86838701613f0f565b9350602085013591508082111561452357600080fd5b5061453085828601613e6b565b9150509250929050565b60008060006060848603121561454f57600080fd5b83356001600160401b038082111561456657600080fd5b61457287838801613f0f565b9450602086013591508082111561458857600080fd5b5061459586828701613e6b565b92505060408401356145a681614f4b565b809150509250925092565b6000602082840312156145c357600080fd5b5051919050565b6000806000606084860312156145df57600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561460957600080fd5b8235915061407560208401613fc8565b8060005b600281101561245657614631848351614647565b604093909301926020919091019060010161461d565b8060005b600281101561245657815184526020938401939091019060010161464b565b60008151808452614682816020860160208601614e14565b601f01601f19169290920160200192915050565b600082516146a8818460208701614e14565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156147105783511515835292840192918401916001016146f2565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561471057835183529284019291840191600101614738565b602080825282518282018190526000919060409081850190868401855b828110156147a05781518051855286810151878601528501518585015260609093019290850190600101614771565b5091979650505050505050565b60408101610c848284614647565b61010081016147ca8286614647565b6147d76040830185614619565b61100b60c0830184614647565b60006101606147f3838a614647565b6148006040840189614619565b61480d60c0840188614647565b806101008401526148208184018761466a565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614865606083018461466a565b95945050505050565b602081526000611ef7602083018461466a565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614a1560e084018261466a565b905060a0840151601f198483030160c0850152614865828261466a565b604081526000835160e06040840152614a4f61012084018261466a565b9050602080860151603f1980868503016060870152614a6e848361466a565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614ab05784518252938301936001929092019190830190614a90565b5060608801519350614ac560a0870185614647565b608088015160e087015260a088015161010087015260ff8716838701529350614aeb9050565b50509392505050565b60405160c081016001600160401b0381118282101715614b1657614b16614f35565b60405290565b60405161010081016001600160401b0381118282101715614b1657614b16614f35565b604051601f8201601f191681016001600160401b0381118282101715614b6757614b67614f35565b604052919050565b60006001600160401b03821115614b8857614b88614f35565b5060051b60200190565b60006001600160401b03821115614bab57614bab614f35565b50601f01601f191660200190565b60008219821115614bcc57614bcc614ef3565b500190565b600063ffffffff808316818516808303821115614bf057614bf0614ef3565b01949350505050565b600060ff821660ff84168060ff03821115614c1657614c16614ef3565b019392505050565b600063ffffffff80841680614c3557614c35614f09565b92169190910492915050565b600181815b80851115614c7e578163ffffffff04821115614c6457614c64614ef3565b80851615614c7157918102915b93841c9390800290614c46565b509250929050565b600063ffffffff61100b818516828516600082614ca557506001610c84565b81614cb257506000610c84565b8160018114614cc85760028114614cd257614d03565b6001915050610c84565b60ff841115614ce357614ce3614ef3565b6001841b915063ffffffff821115614cfd57614cfd614ef3565b50610c84565b5060208310610133831016604e8410600b8410161715614d3a575081810a63ffffffff811115614d3557614d35614ef3565b610c84565b614d448383614c41565b8063ffffffff04821115614d5a57614d5a614ef3565b029392505050565b60008083128015600160ff1b850184121615614d8057614d80614ef3565b6001600160ff1b0384018313811615614d9b57614d9b614ef3565b50500390565b600082821015614db357614db3614ef3565b500390565b600063ffffffff83811690831681811015614dd557614dd5614ef3565b039392505050565b805160208201516001600160d01b03198082169291906006831015614e0c5780818460060360031b1b83161693505b505050919050565b60005b83811015614e2f578181015183820152602001614e17565b838111156124565750506000910152565b600063ffffffff821680614e5657614e56614ef3565b6000190192915050565b6000600019821415614e7457614e74614ef3565b5060010190565b600063ffffffff80831681811415614e9557614e95614ef3565b6001019392505050565b600082614eae57614eae614f09565b500690565b600063ffffffff80841680614eca57614eca614f09565b92169190910692915050565b6000600160ff1b821415614eec57614eec614ef3565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461104657600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212203349f4e0df18d9ed4192fd9d6c8c41ccf25e6fed8925c987f6f6e1774b51f7a464736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
