/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "target",
            type: "bytes32",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_target",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005c3838038062005c388339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c61513562000b0360003960008181610bb301528181611053015281816111270152818161136501528181611e6001528181611f3001528181611ff3015281816120da01528181612eac01528181612f4a01528181612f9701528181613169015261320101526000818161068001528181610c9501528181610cff015281816111d6015281816115ab0152818161163e01528181611b1b0152818161332a015281816134890152818161379301526138bd0152600081816105b101528181610d8d01528181611709015281816139d30152613ab3015260008181610af301528181613a830152613b4c01526151356000f3fe60806040526004361061038c5760003560e01c80638f1c56bd116101dc578063c9be725011610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b42578063fa73168714610b71578063fc0c546a14610ba1578063fc7e9c6f14610bd557600080fd5b8063e829558814610a8d578063ec73295914610aad578063ed33639f14610ae1578063f178e47c14610b1557600080fd5b8063dbc916b8116100dc578063dbc916b8146109d0578063e4a3011614610a10578063e5285dcc14610a30578063e70ea87c14610a6057600080fd5b8063c9be72501461097b578063cd87a3b41461099b578063dad878a5146109b057600080fd5b80639ff800631161017a578063ba70f75711610149578063ba70f75714610904578063bc063e1a146106ea578063c2b40ae41461092e578063c80916d41461095b57600080fd5b80639ff80063146105d3578063a0d192f5146108a4578063b2bc6e0f146108c4578063b7566a67146108e457600080fd5b806394eee060116101b657806394eee0601461083157806395c87d1a146108445780639bbca3a9146108575780639fa12d0b1461087757600080fd5b80638f1c56bd146107ce57806390eeb02b146107e4578063921563111461080157600080fd5b80634f401241116102c157806378abb49b1161025f5780638b7e87821161022e5780638b7e8782146107485780638c0d34d8146107795780638d09169d1461079b5780638ea3099e146107ae57600080fd5b806378abb49b146106d45780637fe24ffe146106ea578063839df94514610702578063840b27911461073257600080fd5b80636ad481f31161029b5780636ad481f3146106465780636d9833e31461064e57806371523c321461066e57806372c1ad03146106b457600080fd5b80634f401241146105d35780635d2d766c146105f3578063616e09571461062657600080fd5b80633408e4701161032e57806343e7119f1161030857806343e7119f1461051b578063460b53e3146105535780634c830cbd146105735780634ecf518b1461059f57600080fd5b80633408e470146104d3578063414a37ba146104e65780634167bb1e1461050857600080fd5b80631e6276171161036a5780631e627617146104295780632570b7b41461044b5780632b7ac3f3146104795780632d48470c146104b157600080fd5b80630b27fb9a1461039157806311e4dcb9146103c957806317cc915c146103f9575b600080fd5b34801561039d57600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103d557600080fd5b506103e96103e4366004614439565b610bfa565b60405190151581526020016103c0565b34801561040557600080fd5b506103e96104143660046142ed565b600c6020526000908152604090205460ff1681565b34801561043557600080fd5b5061043e610c8f565b6040516103c091906147fb565b34801561045757600080fd5b5061046b610466366004614439565b610df3565b6040519081526020016103c0565b34801561048557600080fd5b50600b54610499906001600160a01b031681565b6040516001600160a01b0390911681526020016103c0565b3480156104bd57600080fd5b506104d16104cc3660046142ed565b610ee1565b005b3480156104df57600080fd5b504661046b565b3480156104f257600080fd5b5061046b6000805160206150e083398151915281565b6104d1610516366004614613565b610f17565b34801561052757600080fd5b5061046b6105363660046146d5565b600960209081526000928352604080842090915290825290205481565b34801561055f57600080fd5b506104d161056e3660046140f6565b61103c565b34801561057f57600080fd5b506105886110c2565b60405165ffffffffffff90911681526020016103c0565b3480156105ab57600080fd5b506103af7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105df57600080fd5b506104d16105ee3660046140f6565b611110565b3480156105ff57600080fd5b506103af61060e3660046142ed565b600a6020526000908152604090205463ffffffff1681565b34801561063257600080fd5b506103e96106413660046141cb565b611160565b6104d161134e565b34801561065a57600080fd5b506103e96106693660046142ed565b6113d5565b34801561067a57600080fd5b506106a27f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103c0565b3480156106c057600080fd5b506104d16106cf366004614122565b611450565b3480156106e057600080fd5b5061046b60105481565b3480156106f657600080fd5b5061046b600160f81b81565b34801561070e57600080fd5b506103e961071d3660046142ed565b600d6020526000908152604090205460ff1681565b34801561073e57600080fd5b5061046b600f5481565b34801561075457600080fd5b50610760600160f81b81565b6040516001600160f01b031990911681526020016103c0565b34801561078557600080fd5b5061078e6115a5565b6040516103c09190614833565b6104d16107a93660046146a3565b611775565b3480156107ba57600080fd5b5061046b6107c9366004614404565b611ce4565b3480156107da57600080fd5b5061046b600e5481565b3480156107f057600080fd5b506003546103af9063ffffffff1681565b34801561080d57600080fd5b506103e961081c3660046142ed565b60009081526007602052604090205460ff1690565b6104d161083f3660046140f6565b611e47565b6104d16108523660046140b5565b611f93565b34801561086357600080fd5b506104d16108723660046145b0565b612059565b34801561088357600080fd5b50610897610892366004614157565b612243565b6040516103c091906147b5565b3480156108b057600080fd5b506104d16108bf366004614122565b61230b565b3480156108d057600080fd5b506104d16108df36600461445b565b61244a565b3480156108f057600080fd5b506104d16108ff366004614516565b6124ac565b34801561091057600080fd5b5060035463ffffffff1660009081526002602052604090205461046b565b34801561093a57600080fd5b5061046b6109493660046142ed565b60026020526000908152604090205481565b34801561096757600080fd5b50600554610499906001600160a01b031681565b34801561098757600080fd5b506104d161099636600461448f565b6124c6565b3480156109a757600080fd5b506103af601e81565b3480156109bc57600080fd5b506104d16109cb3660046142ed565b6124d9565b3480156109dc57600080fd5b506109f06109eb3660046142ed565b61250c565b6040805194855260208501939093529183015260608201526080016103c0565b348015610a1c57600080fd5b506104d1610a2b366004614439565b612546565b348015610a3c57600080fd5b506103e9610a4b3660046142ed565b6000908152600c602052604090205460ff1690565b348015610a6c57600080fd5b5061046b610a7b3660046142ed565b60066020526000908152604090205481565b348015610a9957600080fd5b5061046b610aa83660046142ed565b6125c6565b348015610ab957600080fd5b5061046b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610aed57600080fd5b506104997f000000000000000000000000000000000000000000000000000000000000000081565b348015610b2157600080fd5b5061046b610b303660046142ed565b60016020526000908152604090205481565b348015610b4e57600080fd5b50610b62610b5d3660046141ff565b612c06565b6040516103c0939291906148a5565b348015610b7d57600080fd5b506103e9610b8c3660046142ed565b60076020526000908152604090205460ff1681565b348015610bad57600080fd5b506104997f000000000000000000000000000000000000000000000000000000000000000081565b348015610be157600080fd5b506003546103af90640100000000900463ffffffff1681565b600081610c0957506000610c89565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c5257600192505050610c89565b63ffffffff8116610c615750601e5b80610c6b81614fbf565b9150508163ffffffff168163ffffffff161415610c20576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610cce57610cce6150b4565b604051908082528060200260200182016040528015610cf7578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ded57610d33816001614d38565b60085410610d835760088181548110610d4e57610d4e61509e565b906000526020600020906004020160010154828281518110610d7257610d7261509e565b602002602001018181525050610ddb565b610dbc610db160017f0000000000000000000000000000000000000000000000000000000000000000614f37565b63ffffffff166125c6565b828281518110610dce57610dce61509e565b6020026020010181815250505b80610de581614fdf565b915050610cfd565b50919050565b6000600160f81b8210610e3b5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610e48600160f81b615055565b83138015610e595750600160f81b83125b610e9a5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610e32565b6000610ea68385614ee1565b90506000811215610ed757610eba81615055565b610ed2906000805160206150e0833981519152614f20565b610ed9565b805b949350505050565b6005546001600160a01b03163314610f0b5760405162461bcd60e51b8152600401610e3290614b0d565b610f1481600f55565b50565b610f218383612c8f565b600082602001511315610f675760105482602001511115610f545760405162461bcd60e51b8152600401610e3290614ac3565b610f62818360200151611e47565b611011565b6000826020015112156110115781516001600160a01b0316610fcb5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e32565b600f548260200151610fdc90615055565b1015610ffa5760405162461bcd60e51b8152600401610e329061496b565b611011818360000151846020015161085290615055565b60608201511561102d5761102d82604001518360600151612e94565b6110378383612ff8565b505050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889061108c90339086908690600401614791565b600060405180830381600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161110581614f5c565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b69061108c90339086908690600401614791565b6000611185826000815181106111785761117861509e565b60200260200101516113d5565b6111d15760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610e32565b6111fc7f00000000000000000000000000000000000000000000000000000000000000006001614d78565b60ff1682511461124e5760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610e32565b60005b600854811015611345576000600882815481106112705761127061509e565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506112e68160000151858460016112c99190614d38565b815181106112d9576112d961509e565b6020026020010151610bfa565b6113325760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610e32565b508061133d81614fdf565b915050611251565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906113a19033906000908190600401614791565b6000604051808303818588803b1580156113ba57600080fd5b505af11580156113ce573d6000803e3d6000fd5b5050505050565b6000816113e457506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611416575060019392505050565b63ffffffff81166114255750601e5b8061142f81614fbf565b9150508163ffffffff168163ffffffff1614156113ef575060009392505050565b6005546001600160a01b0316331461147a5760405162461bcd60e51b8152600401610e3290614b0d565b6001600160a01b0382166114c65760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e32565b600b5463ffffffff808316600160a01b90920416106115175760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e32565b600b5461153390600160a01b900463ffffffff16610418614d50565b63ffffffff168163ffffffff161061155d5760405162461bcd60e51b8152600401610e32906149b6565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156115e4576115e46150b4565b60405190808252806020026020018201604052801561163657816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816116025790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ded57611672816001614d38565b600854106116f0576008818154811061168d5761168d61509e565b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508282815181106116e0576116e061509e565b6020026020010181905250611763565b60405180608001604052806000815260200161173260017f0000000000000000000000000000000000000000000000000000000000000000610db19190614f37565b8152602001600081526020016000801b8152508282815181106117575761175761509e565b60200260200101819052505b8061176d81614fdf565b91505061163c565b6005546001600160a01b0316331461179f5760405162461bcd60e51b8152600401610e3290614b0d565b600260045414156117c25760405162461bcd60e51b8152600401610e3290614a8c565b60026004908155604051639215631160e01b8152908101859052309063921563119060240160206040518083038186803b1580156117ff57600080fd5b505afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183791906142cb565b15611b145760008481526007602052604090205460ff166118c05760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610e32565b6000848152600660205260409020546008805484929081106118e4576118e461509e565b906000526020600020906004020160020154106119435760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610e32565b6000848152600660205260409020546008805490919081106119675761196761509e565b906000526020600020906004020160020154620100006119879190614d38565b82106119e55760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610e32565b600084815260066020908152604091829020548251608081018452878152918201869052918101849052606081018390526008805483908110611a2a57611a2a61509e565b600091825260208083208451600490930201918255838101516001808401919091556040808601516002850155606090950151600390930192909255888352600a9052918120549091601e91611a889163ffffffff90911690614d50565b611a929190615032565b6000878152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902088905581518981529081018790529081018790529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050611cd9565b60085460ff7f00000000000000000000000000000000000000000000000000000000000000001611611b885760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610e32565b6000848152600760209081526040808320805460ff191660019081179091556008805483516080810185528a81528086018a81528186018a815260608084018b815296850186559489528251600485027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915591517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee582015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee6909401939093558986526006855283862081905560098552838620868052855283862089905583518a81529485018890529284018890529193909290917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b60006000805160206150e08339815191528310611d435760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610e32565b6000805160206150e08339815191528210611daa5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610e32565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611deb9190600401614897565b60206040518083038186803b158015611e0357600080fd5b505afa158015611e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3b919061468a565b925050505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b158015611eaa57600080fd5b505afa158015611ebe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee2919061468a565b90506001600160a01b038316611efe57803414611efe57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015611f7557600080fd5b505af1158015611f89573d6000803e3d6000fd5b5050505050505050565b60026004541415611fb65760405162461bcd60e51b8152600401610e3290614a8c565b6002600455611fc53082613151565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b15801561203757600080fd5b505af115801561204b573d6000803e3d6000fd5b505060016004555050505050565b6002600454141561207c5760405162461bcd60e51b8152600401610e3290614a8c565b600260045561208b8282612c8f565b60008160200151131561216657601054816020015111156120be5760405162461bcd60e51b8152600401610e3290614ac3565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91612112913391309190600401614791565b602060405180830381600087803b15801561212c57600080fd5b505af1158015612140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061216491906142cb565b505b6000816020015112156122145780516001600160a01b03166121ca5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e32565b600f5481602001516121db90615055565b10156121f95760405162461bcd60e51b8152600401610e329061496b565b6122148160000151826020015161220f90615055565b613151565b6060810151156122305761223081604001518260600151612e94565b61223a8282612ff8565b50506001600455565b60606000826001600160401b0381111561225f5761225f6150b4565b604051908082528060200260200182016040528015612288578160200160208202803683370190505b50905060005b83811015612303576122c78585838181106122ab576122ab61509e565b905060200201356000908152600c602052604090205460ff1690565b156122f15760018282815181106122e0576122e061509e565b911515602092830291909101909101525b806122fb81614fdf565b91505061228e565b509392505050565b6005546001600160a01b031633146123355760405162461bcd60e51b8152600401610e3290614b0d565b6001600160a01b0382166123815760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e32565b600b5463ffffffff808316600160a01b90920416106123d25760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e32565b600b546123ee90600160a01b900463ffffffff16610418614d50565b63ffffffff168163ffffffff16106124185760405162461bcd60e51b8152600401610e32906149b6565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b031633146124a35760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610e32565b610f1481613228565b6124b58461244a565b6124c0838383610f17565b50505050565b6124cf8361244a565b6110378282612059565b6005546001600160a01b031633146125035760405162461bcd60e51b8152600401610e3290614b0d565b610f1481601055565b6008818154811061251c57600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b60006125526001613274565b9050801561256a576000805461ff0019166101001790555b61257383600f55565b61257c82601055565b8015611037576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6000816125f457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561262457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561265457507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561268457507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156126b457507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156126e457507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561271457507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561274457507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561277457507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156127a457507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156127d457507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b141561280457507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561283457507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561286457507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561289457507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156128c457507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156128f457507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011141561292357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561295357507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561298357507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156129b357507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156129e357507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612a1357507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612a4357507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612a7357507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612aa357507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612ad357507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612b0357507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612b3357507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612b6357507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612b9357507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612bc357507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610e32565b919050565b612c0e613d3b565b612c16613d59565b612c1e613d3b565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612d2d57612cd583604001518281518110612cb857612cb861509e565b60200260200101516000908152600c602052604090205460ff1690565b15612d1b5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610e32565b80612d2581614fdf565b915050612c92565b506000805160206150e083398151915281604051602001612d4e9190614b44565b6040516020818303038152906040528051906020012060001c612d71919061501e565b60a083015114612dc35760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610e32565b612dd581602001518260600151610df3565b826080015114612e1f5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610e32565b612e28826132fc565b60005b826040015151811015611037576001600c600085604001518481518110612e5457612e5461509e565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612e8c90614fdf565b915050612e2b565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612ef657600080fd5b505afa158015612f0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f2e919061468a565b9050811561103757818110612f71576110376001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846135b6565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015612fdb57600080fd5b505af1158015612fef573d6000803e3d6000fd5b50505050505050565b6060820151805160209091015161300f9190613608565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd919061305690600290640100000000900463ffffffff16614f37565b836080015160405161306a9392919061492a565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd90600160200201516003546130bd90600190640100000000900463ffffffff16614f37565b8360a001516040516130d19392919061492a565b60405180910390a160005b826040015151811015611037577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106131205761312061509e565b602002602001015160405161313791815260200190565b60405180910390a18061314981614fdf565b9150506130dc565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156131b357600080fd5b505afa1580156131c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131eb919061468a565b9050818110612f71576110376001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846135b6565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516132699190614958565b60405180910390a250565b60008054610100900460ff16156132bb578160ff1660011480156132975750303b155b6132b35760405162461bcd60e51b8152600401610e32906149fd565b506000919050565b60005460ff8084169116106132e25760405162461bcd60e51b8152600401610e32906149fd565b506000805460ff191660ff92909216919091179055600190565b8060400151516002141561345b5760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401613366929190614bb1565b60006040518083038186803b15801561337e57600080fd5b505af4158015613392573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133ba9190810190614306565b915091506133c781611160565b6134035760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e32565b825161340f9083613736565b6110375760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610e32565b8060400151516010141561356e5760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016134c5929190614bb1565b60006040518083038186803b1580156134dd57600080fd5b505af41580156134f1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526135199190810190614306565b9150915061352681611160565b6135625760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e32565b825161340f9083613860565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610e32565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526110379084906138e8565b6000828152600d602052604081205460ff16156136375760405162461bcd60e51b8152600401610e3290614a4b565b6000828152600d602052604090205460ff16156136665760405162461bcd60e51b8152600401610e3290614a4b565b600061367284846139ba565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5613712836001614d50565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b6000808380602001905181019061374d919061426a565b9050600080600061375d84612c06565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906137be908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906001906004016148ce565b60206040518083038186803b1580156137d657600080fd5b505afa1580156137ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061380e91906142cb565b9450846138565760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610e32565b5050505092915050565b60008083806020019051810190613877919061426a565b9050600080600061388784612c06565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906137be908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906000906004016148ce565b600061393d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613c279092919063ffffffff16565b805190915015611037578080602001905181019061395b91906142cb565b6110375760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e32565b600354600090640100000000900463ffffffff166139f97f00000000000000000000000000000000000000000000000000000000000000006002614e05565b63ffffffff168163ffffffff161415613a6d5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610e32565b6000613a7a600283614d9d565b90506000613aa97f00000000000000000000000000000000000000000000000000000000000000008787611ce4565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613b9357613af0600286615032565b63ffffffff16613b2b57839250613b0c8163ffffffff166125c6565b63ffffffff821660009081526001602052604090208590559150613b47565b63ffffffff811660009081526001602052604090205492508391505b613b727f00000000000000000000000000000000000000000000000000000000000000008484611ce4565b9350613b7f600286614d9d565b945080613b8b81614ffa565b915050613ab1565b50600354600090601e90613bae9063ffffffff166001614d50565b613bb89190615032565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613bf2908790614d50565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b6060610ed98484600085856001600160a01b0385163b613c895760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e32565b600080866001600160a01b03168587604051613ca59190614775565b60006040518083038185875af1925050503d8060008114613ce2576040519150601f19603f3d011682016040523d82523d6000602084013e613ce7565b606091505b5091509150613cf7828286613d02565b979650505050505050565b60608315613d11575081611e40565b825115613d215782518084602001fd5b8160405162461bcd60e51b8152600401610e329190614958565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613d70613d3b565b815260200190600190039081613d685790505090565b8035612c01816150ca565b600082601f830112613da257600080fd5b604051604081018181106001600160401b0382111715613dc457613dc46150b4565b8060405250808385604086011115613ddb57600080fd5b60005b6002811015613dfd578135835260209283019290910190600101613dde565b509195945050505050565b600082601f830112613e1957600080fd5b81356020613e2e613e2983614cee565b614cbe565b80838252828201915082860187848660051b8901011115613e4e57600080fd5b60005b85811015613e6d57813584529284019290840190600101613e51565b5090979650505050505050565b600082601f830112613e8b57600080fd5b8135613e99613e2982614d11565b818152846020838601011115613eae57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613edd57600080fd5b604051604081016001600160401b038282108183111715613f0057613f006150b4565b8160405282935084359150613f14826150ca565b90825260208401359080821115613f2a57600080fd5b50613f3785828601613e7a565b6020830152505092915050565b600060c08284031215613f5657600080fd5b613f5e614c73565b9050613f6982613d86565b815260208201356020820152613f8160408301613d86565b60408201526060820135606082015260808201356001600160401b0380821115613faa57600080fd5b613fb685838601613e7a565b608084015260a0840135915080821115613fcf57600080fd5b50613fdc84828501613e7a565b60a08301525092915050565b600060e08284031215613ffa57600080fd5b614002614c73565b905081356001600160401b038082111561401b57600080fd5b61402785838601613e7a565b8352602084013591508082111561403d57600080fd5b61404985838601613e7a565b6020840152604084013591508082111561406257600080fd5b5061406f84828501613e08565b6040830152506140828360608401613d91565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612c0157600080fd5b6000806000606084860312156140ca57600080fd5b83356140d5816150ca565b925060208401356140e5816150ca565b929592945050506040919091013590565b6000806040838503121561410957600080fd5b8235614114816150ca565b946020939093013593505050565b6000806040838503121561413557600080fd5b8235614140816150ca565b915061414e602084016140a1565b90509250929050565b6000806020838503121561416a57600080fd5b82356001600160401b038082111561418157600080fd5b818501915085601f83011261419557600080fd5b8135818111156141a457600080fd5b8660208260051b85010111156141b957600080fd5b60209290920196919550909350505050565b6000602082840312156141dd57600080fd5b81356001600160401b038111156141f357600080fd5b610ed984828501613e08565b600061010080838503121561421357600080fd5b83601f84011261422257600080fd5b61422a614c9b565b808486848701111561423b57600080fd5b600093505b600884101561426057803583526001939093019260209283019201614240565b5095945050505050565b600061010080838503121561427e57600080fd5b83601f84011261428d57600080fd5b614295614c9b565b80848684870111156142a657600080fd5b600093505b6008841015614260578051835260019390930192602092830192016142ab565b6000602082840312156142dd57600080fd5b81518015158114610ed757600080fd5b6000602082840312156142ff57600080fd5b5035919050565b6000806040838503121561431957600080fd5b82516001600160401b038082111561433057600080fd5b818501915085601f83011261434457600080fd5b81516020614354613e2983614d11565b828152888284870101111561436857600080fd5b61437783838301848801614f93565b8782015190965093508284111561438d57600080fd5b838701935087601f8501126143a157600080fd5b835192506143b1613e2984614cee565b8381528181019250848201600585901b860183018a10156143d157600080fd5b600095505b848610156143f45780518452600195909501949282019282016143d6565b5080955050505050509250929050565b60008060006060848603121561441957600080fd5b8335614424816150ca565b95602085013595506040909401359392505050565b6000806040838503121561444c57600080fd5b50508035926020909101359150565b60006020828403121561446d57600080fd5b81356001600160401b0381111561448357600080fd5b610ed984828501613ecb565b6000806000606084860312156144a457600080fd5b83356001600160401b03808211156144bb57600080fd5b6144c787838801613ecb565b945060208601359150808211156144dd57600080fd5b6144e987838801613fe8565b935060408601359150808211156144ff57600080fd5b5061450c86828701613f44565b9150509250925092565b6000806000806080858703121561452c57600080fd5b84356001600160401b038082111561454357600080fd5b61454f88838901613ecb565b9550602087013591508082111561456557600080fd5b61457188838901613fe8565b9450604087013591508082111561458757600080fd5b5061459487828801613f44565b92505060608501356145a5816150ca565b939692955090935050565b600080604083850312156145c357600080fd5b82356001600160401b03808211156145da57600080fd5b6145e686838701613fe8565b935060208501359150808211156145fc57600080fd5b5061460985828601613f44565b9150509250929050565b60008060006060848603121561462857600080fd5b83356001600160401b038082111561463f57600080fd5b61464b87838801613fe8565b9450602086013591508082111561466157600080fd5b5061466e86828701613f44565b925050604084013561467f816150ca565b809150509250925092565b60006020828403121561469c57600080fd5b5051919050565b600080600080608085870312156146b957600080fd5b5050823594602084013594506040840135936060013592509050565b600080604083850312156146e857600080fd5b8235915061414e602084016140a1565b8060005b60028110156124c057614710848351614726565b60409390930192602091909101906001016146fc565b8060005b60028110156124c057815184526020938401939091019060010161472a565b60008151808452614761816020860160208601614f93565b601f01601f19169290920160200192915050565b60008251614787818460208701614f93565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156147ef5783511515835292840192918401916001016147d1565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156147ef57835183529284019291840191600101614817565b602080825282518282018190526000919060409081850190868401855b8281101561488a57815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101614850565b5091979650505050505050565b60408101610c898284614726565b61010081016148b48286614726565b6148c160408301856146f8565b610ed960c0830184614726565b60006101606148dd838a614726565b6148ea60408401896146f8565b6148f760c0840188614726565b8061010084015261490a81840187614749565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff8316602082015260606040820152600061494f6060830184614749565b95945050505050565b602081526000611e406020830184614749565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614b9460e0840182614749565b905060a0840151601f198483030160c085015261494f8282614749565b604081526000835160e06040840152614bce610120840182614749565b9050602080860151603f1980868503016060870152614bed8483614749565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614c2f5784518252938301936001929092019190830190614c0f565b5060608801519350614c4460a0870185614726565b608088015160e087015260a088015161010087015260ff8716838701529350614c6a9050565b50509392505050565b60405160c081016001600160401b0381118282101715614c9557614c956150b4565b60405290565b60405161010081016001600160401b0381118282101715614c9557614c956150b4565b604051601f8201601f191681016001600160401b0381118282101715614ce657614ce66150b4565b604052919050565b60006001600160401b03821115614d0757614d076150b4565b5060051b60200190565b60006001600160401b03821115614d2a57614d2a6150b4565b50601f01601f191660200190565b60008219821115614d4b57614d4b615072565b500190565b600063ffffffff808316818516808303821115614d6f57614d6f615072565b01949350505050565b600060ff821660ff84168060ff03821115614d9557614d95615072565b019392505050565b600063ffffffff80841680614db457614db4615088565b92169190910492915050565b600181815b80851115614dfd578163ffffffff04821115614de357614de3615072565b80851615614df057918102915b93841c9390800290614dc5565b509250929050565b600063ffffffff610ed9818516828516600082614e2457506001610c89565b81614e3157506000610c89565b8160018114614e475760028114614e5157614e82565b6001915050610c89565b60ff841115614e6257614e62615072565b6001841b915063ffffffff821115614e7c57614e7c615072565b50610c89565b5060208310610133831016604e8410600b8410161715614eb9575081810a63ffffffff811115614eb457614eb4615072565b610c89565b614ec38383614dc0565b8063ffffffff04821115614ed957614ed9615072565b029392505050565b60008083128015600160ff1b850184121615614eff57614eff615072565b6001600160ff1b0384018313811615614f1a57614f1a615072565b50500390565b600082821015614f3257614f32615072565b500390565b600063ffffffff83811690831681811015614f5457614f54615072565b039392505050565b805160208201516001600160d01b03198082169291906006831015614f8b5780818460060360031b1b83161693505b505050919050565b60005b83811015614fae578181015183820152602001614f96565b838111156124c05750506000910152565b600063ffffffff821680614fd557614fd5615072565b6000190192915050565b6000600019821415614ff357614ff3615072565b5060010190565b600063ffffffff8083168181141561501457615014615072565b6001019392505050565b60008261502d5761502d615088565b500690565b600063ffffffff8084168061504957615049615088565b92169190910692915050565b6000600160ff1b82141561506b5761506b615072565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f1457600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220686007870427e0e93ad874fcfbe34b5dae82079d1b2dc5ae26871cc4408b5db264736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
