/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "target",
            type: "bytes32",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_target",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005c6938038062005c698339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c61515f62000b0a60003960008181610bb301528181611053015281816111270152818161136501528181611e6001528181611f3001528181611fc6015281816120570152818161213e01528181612fac0152818161304a0152818161309701528181613269015261330101526000818161068001528181610c9501528181610cff015281816111d6015281816115ab0152818161163e01528181611b1b015281816133a2015281816135010152818161380b01526139350152600081816105b101528181610d8d0152818161170901528181613a4b0152613b2b015260008181610af301528181613afb0152613bc4015261515f6000f3fe60806040526004361061038c5760003560e01c80638f1c56bd116101dc578063c9be725011610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b42578063fa73168714610b71578063fc0c546a14610ba1578063fc7e9c6f14610bd557600080fd5b8063e829558814610a8d578063ec73295914610aad578063ed33639f14610ae1578063f178e47c14610b1557600080fd5b8063dbc916b8116100dc578063dbc916b8146109d0578063e4a3011614610a10578063e5285dcc14610a30578063e70ea87c14610a6057600080fd5b8063c9be72501461097b578063cd87a3b41461099b578063dad878a5146109b057600080fd5b80639ff800631161017a578063ba70f75711610149578063ba70f75714610904578063bc063e1a146106ea578063c2b40ae41461092e578063c80916d41461095b57600080fd5b80639ff80063146105d3578063a0d192f5146108a4578063b2bc6e0f146108c4578063b7566a67146108e457600080fd5b806394eee060116101b657806394eee0601461083157806395c87d1a146108445780639bbca3a9146108575780639fa12d0b1461087757600080fd5b80638f1c56bd146107ce57806390eeb02b146107e4578063921563111461080157600080fd5b80634f401241116102c157806378abb49b1161025f5780638b7e87821161022e5780638b7e8782146107485780638c0d34d8146107795780638d09169d1461079b5780638ea3099e146107ae57600080fd5b806378abb49b146106d45780637fe24ffe146106ea578063839df94514610702578063840b27911461073257600080fd5b80636ad481f31161029b5780636ad481f3146106465780636d9833e31461064e57806371523c321461066e57806372c1ad03146106b457600080fd5b80634f401241146105d35780635d2d766c146105f3578063616e09571461062657600080fd5b80633408e4701161032e57806343e7119f1161030857806343e7119f1461051b578063460b53e3146105535780634c830cbd146105735780634ecf518b1461059f57600080fd5b80633408e470146104d3578063414a37ba146104e65780634167bb1e1461050857600080fd5b80631e6276171161036a5780631e627617146104295780632570b7b41461044b5780632b7ac3f3146104795780632d48470c146104b157600080fd5b80630b27fb9a1461039157806311e4dcb9146103c957806317cc915c146103f9575b600080fd5b34801561039d57600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103d557600080fd5b506103e96103e43660046144b1565b610bfa565b60405190151581526020016103c0565b34801561040557600080fd5b506103e9610414366004614365565b600c6020526000908152604090205460ff1681565b34801561043557600080fd5b5061043e610c8f565b6040516103c09190614873565b34801561045757600080fd5b5061046b6104663660046144b1565b610df3565b6040519081526020016103c0565b34801561048557600080fd5b50600b54610499906001600160a01b031681565b6040516001600160a01b0390911681526020016103c0565b3480156104bd57600080fd5b506104d16104cc366004614365565b610ee1565b005b3480156104df57600080fd5b504661046b565b3480156104f257600080fd5b5061046b60008051602061510a83398151915281565b6104d161051636600461468b565b610f17565b34801561052757600080fd5b5061046b61053636600461474d565b600960209081526000928352604080842090915290825290205481565b34801561055f57600080fd5b506104d161056e36600461416e565b61103c565b34801561057f57600080fd5b506105886110c2565b60405165ffffffffffff90911681526020016103c0565b3480156105ab57600080fd5b506103af7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105df57600080fd5b506104d16105ee36600461416e565b611110565b3480156105ff57600080fd5b506103af61060e366004614365565b600a6020526000908152604090205463ffffffff1681565b34801561063257600080fd5b506103e9610641366004614243565b611160565b6104d161134e565b34801561065a57600080fd5b506103e9610669366004614365565b6113d5565b34801561067a57600080fd5b506106a27f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103c0565b3480156106c057600080fd5b506104d16106cf36600461419a565b611450565b3480156106e057600080fd5b5061046b60105481565b3480156106f657600080fd5b5061046b600160f81b81565b34801561070e57600080fd5b506103e961071d366004614365565b600d6020526000908152604090205460ff1681565b34801561073e57600080fd5b5061046b600f5481565b34801561075457600080fd5b50610760600160f81b81565b6040516001600160f01b031990911681526020016103c0565b34801561078557600080fd5b5061078e6115a5565b6040516103c091906148ab565b6104d16107a936600461471b565b611775565b3480156107ba57600080fd5b5061046b6107c936600461447c565b611ce4565b3480156107da57600080fd5b5061046b600e5481565b3480156107f057600080fd5b506003546103af9063ffffffff1681565b34801561080d57600080fd5b506103e961081c366004614365565b60009081526007602052604090205460ff1690565b6104d161083f36600461416e565b611e47565b6104d161085236600461412d565b611ff7565b34801561086357600080fd5b506104d1610872366004614628565b6120bd565b34801561088357600080fd5b506108976108923660046141cf565b6122a7565b6040516103c0919061482d565b3480156108b057600080fd5b506104d16108bf36600461419a565b61236f565b3480156108d057600080fd5b506104d16108df3660046144d3565b6124ae565b3480156108f057600080fd5b506104d16108ff36600461458e565b612510565b34801561091057600080fd5b5060035463ffffffff1660009081526002602052604090205461046b565b34801561093a57600080fd5b5061046b610949366004614365565b60026020526000908152604090205481565b34801561096757600080fd5b50600554610499906001600160a01b031681565b34801561098757600080fd5b506104d1610996366004614507565b61252a565b3480156109a757600080fd5b506103af601e81565b3480156109bc57600080fd5b506104d16109cb366004614365565b61253d565b3480156109dc57600080fd5b506109f06109eb366004614365565b612570565b6040805194855260208501939093529183015260608201526080016103c0565b348015610a1c57600080fd5b506104d1610a2b3660046144b1565b6125aa565b348015610a3c57600080fd5b506103e9610a4b366004614365565b6000908152600c602052604090205460ff1690565b348015610a6c57600080fd5b5061046b610a7b366004614365565b60066020526000908152604090205481565b348015610a9957600080fd5b5061046b610aa8366004614365565b6126c6565b348015610ab957600080fd5b5061046b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610aed57600080fd5b506104997f000000000000000000000000000000000000000000000000000000000000000081565b348015610b2157600080fd5b5061046b610b30366004614365565b60016020526000908152604090205481565b348015610b4e57600080fd5b50610b62610b5d366004614277565b612d06565b6040516103c09392919061491d565b348015610b7d57600080fd5b506103e9610b8c366004614365565b60076020526000908152604090205460ff1681565b348015610bad57600080fd5b506104997f000000000000000000000000000000000000000000000000000000000000000081565b348015610be157600080fd5b506003546103af90640100000000900463ffffffff1681565b600081610c0957506000610c89565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c5257600192505050610c89565b63ffffffff8116610c615750601e5b80610c6b81614fe9565b9150508163ffffffff168163ffffffff161415610c20576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610cce57610cce6150de565b604051908082528060200260200182016040528015610cf7578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ded57610d33816001614d62565b60085410610d835760088181548110610d4e57610d4e6150c8565b906000526020600020906004020160010154828281518110610d7257610d726150c8565b602002602001018181525050610ddb565b610dbc610db160017f0000000000000000000000000000000000000000000000000000000000000000614f61565b63ffffffff166126c6565b828281518110610dce57610dce6150c8565b6020026020010181815250505b80610de581615009565b915050610cfd565b50919050565b6000600160f81b8210610e3b5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610e48600160f81b61507f565b83138015610e595750600160f81b83125b610e9a5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610e32565b6000610ea68385614f0b565b90506000811215610ed757610eba8161507f565b610ed29060008051602061510a833981519152614f4a565b610ed9565b805b949350505050565b6005546001600160a01b03163314610f0b5760405162461bcd60e51b8152600401610e3290614b37565b610f1481600f55565b50565b610f218383612d8f565b600082602001511315610f675760105482602001511115610f545760405162461bcd60e51b8152600401610e3290614aed565b610f62818360200151611e47565b611011565b6000826020015112156110115781516001600160a01b0316610fcb5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e32565b600f548260200151610fdc9061507f565b1015610ffa5760405162461bcd60e51b8152600401610e32906149e3565b61101181836000015184602001516108529061507f565b60608201511561102d5761102d82604001518360600151612f94565b61103783836130f8565b505050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889061108c90339086908690600401614809565b600060405180830381600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161110581614f86565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b69061108c90339086908690600401614809565b600061118582600081518110611178576111786150c8565b60200260200101516113d5565b6111d15760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610e32565b6111fc7f00000000000000000000000000000000000000000000000000000000000000006001614da2565b60ff1682511461124e5760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610e32565b60005b60085481101561134557600060088281548110611270576112706150c8565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506112e68160000151858460016112c99190614d62565b815181106112d9576112d96150c8565b6020026020010151610bfa565b6113325760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610e32565b508061133d81615009565b915050611251565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906113a19033906000908190600401614809565b6000604051808303818588803b1580156113ba57600080fd5b505af11580156113ce573d6000803e3d6000fd5b5050505050565b6000816113e457506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611416575060019392505050565b63ffffffff81166114255750601e5b8061142f81614fe9565b9150508163ffffffff168163ffffffff1614156113ef575060009392505050565b6005546001600160a01b0316331461147a5760405162461bcd60e51b8152600401610e3290614b37565b6001600160a01b0382166114c65760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e32565b600b5463ffffffff808316600160a01b90920416106115175760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e32565b600b5461153390600160a01b900463ffffffff16610418614d7a565b63ffffffff168163ffffffff161061155d5760405162461bcd60e51b8152600401610e3290614a2e565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156115e4576115e46150de565b60405190808252806020026020018201604052801561163657816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816116025790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ded57611672816001614d62565b600854106116f0576008818154811061168d5761168d6150c8565b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508282815181106116e0576116e06150c8565b6020026020010181905250611763565b60405180608001604052806000815260200161173260017f0000000000000000000000000000000000000000000000000000000000000000610db19190614f61565b8152602001600081526020016000801b815250828281518110611757576117576150c8565b60200260200101819052505b8061176d81615009565b91505061163c565b6005546001600160a01b0316331461179f5760405162461bcd60e51b8152600401610e3290614b37565b600260045414156117c25760405162461bcd60e51b8152600401610e3290614ab6565b60026004908155604051639215631160e01b8152908101859052309063921563119060240160206040518083038186803b1580156117ff57600080fd5b505afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118379190614343565b15611b145760008481526007602052604090205460ff166118c05760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610e32565b6000848152600660205260409020546008805484929081106118e4576118e46150c8565b906000526020600020906004020160020154106119435760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610e32565b600084815260066020526040902054600880549091908110611967576119676150c8565b906000526020600020906004020160020154620100006119879190614d62565b82106119e55760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610e32565b600084815260066020908152604091829020548251608081018452878152918201869052918101849052606081018390526008805483908110611a2a57611a2a6150c8565b600091825260208083208451600490930201918255838101516001808401919091556040808601516002850155606090950151600390930192909255888352600a9052918120549091601e91611a889163ffffffff90911690614d7a565b611a92919061505c565b6000878152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902088905581518981529081018790529081018790529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050611cd9565b60085460ff7f00000000000000000000000000000000000000000000000000000000000000001611611b885760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610e32565b6000848152600760209081526040808320805460ff191660019081179091556008805483516080810185528a81528086018a81528186018a815260608084018b815296850186559489528251600485027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915591517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee582015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee6909401939093558986526006855283862081905560098552838620868052855283862089905583518a81529485018890529284018890529193909290917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b600060008051602061510a8339815191528310611d435760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610e32565b60008051602061510a8339815191528210611daa5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610e32565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611deb919060040161490f565b60206040518083038186803b158015611e0357600080fd5b505afa158015611e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3b9190614702565b925050505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b158015611eaa57600080fd5b505afa158015611ebe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee29190614702565b90506001600160a01b038316611f9457803414611efe57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b158015611f7657600080fd5b505af1158015611f8a573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611f5d565b6002600454141561201a5760405162461bcd60e51b8152600401610e3290614ab6565b60026004556120293082613251565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b15801561209b57600080fd5b505af11580156120af573d6000803e3d6000fd5b505060016004555050505050565b600260045414156120e05760405162461bcd60e51b8152600401610e3290614ab6565b60026004556120ef8282612d8f565b6000816020015113156121ca57601054816020015111156121225760405162461bcd60e51b8152600401610e3290614aed565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91612176913391309190600401614809565b602060405180830381600087803b15801561219057600080fd5b505af11580156121a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c89190614343565b505b6000816020015112156122785780516001600160a01b031661222e5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e32565b600f54816020015161223f9061507f565b101561225d5760405162461bcd60e51b8152600401610e32906149e3565b612278816000015182602001516122739061507f565b613251565b6060810151156122945761229481604001518260600151612f94565b61229e82826130f8565b50506001600455565b60606000826001600160401b038111156122c3576122c36150de565b6040519080825280602002602001820160405280156122ec578160200160208202803683370190505b50905060005b838110156123675761232b85858381811061230f5761230f6150c8565b905060200201356000908152600c602052604090205460ff1690565b15612355576001828281518110612344576123446150c8565b911515602092830291909101909101525b8061235f81615009565b9150506122f2565b509392505050565b6005546001600160a01b031633146123995760405162461bcd60e51b8152600401610e3290614b37565b6001600160a01b0382166123e55760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e32565b600b5463ffffffff808316600160a01b90920416106124365760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e32565b600b5461245290600160a01b900463ffffffff16610418614d7a565b63ffffffff168163ffffffff161061247c5760405162461bcd60e51b8152600401610e3290614a2e565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b031633146125075760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610e32565b610f1481613328565b612519846124ae565b612524838383610f17565b50505050565b612533836124ae565b61103782826120bd565b6005546001600160a01b031633146125675760405162461bcd60e51b8152600401610e3290614b37565b610f1481601055565b6008818154811061258057600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff16158080156125ca5750600054600160ff909116105b806125e45750303b1580156125e4575060005460ff166001145b6126475760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e32565b6000805460ff19166001179055801561266a576000805461ff0019166101001790555b61267383600f55565b61267c82601055565b8015611037576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6000816126f457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561272457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561275457507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561278457507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156127b457507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156127e457507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561281457507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561284457507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561287457507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156128a457507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156128d457507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b141561290457507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561293457507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561296457507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561299457507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156129c457507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156129f457507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415612a2357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b8160121415612a5357507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160131415612a8357507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b8160141415612ab357507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415612ae357507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612b1357507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612b4357507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612b7357507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612ba357507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612bd357507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612c0357507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612c3357507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612c6357507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612c9357507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612cc357507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610e32565b919050565b612d0e613db3565b612d16613dd1565b612d1e613db3565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612e2d57612dd583604001518281518110612db857612db86150c8565b60200260200101516000908152600c602052604090205460ff1690565b15612e1b5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610e32565b80612e2581615009565b915050612d92565b5060008051602061510a83398151915281604051602001612e4e9190614b6e565b6040516020818303038152906040528051906020012060001c612e719190615048565b60a083015114612ec35760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610e32565b612ed581602001518260600151610df3565b826080015114612f1f5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610e32565b612f2882613374565b60005b826040015151811015611037576001600c600085604001518481518110612f5457612f546150c8565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612f8c90615009565b915050612f2b565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612ff657600080fd5b505afa15801561300a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061302e9190614702565b9050811561103757818110613071576110376001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461362e565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b1580156130db57600080fd5b505af11580156130ef573d6000803e3d6000fd5b50505050505050565b6060820151805160209091015161310f9190613680565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd919061315690600290640100000000900463ffffffff16614f61565b836080015160405161316a939291906149a2565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd90600160200201516003546131bd90600190640100000000900463ffffffff16614f61565b8360a001516040516131d1939291906149a2565b60405180910390a160005b826040015151811015611037577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce83604001518281518110613220576132206150c8565b602002602001015160405161323791815260200190565b60405180910390a18061324981615009565b9150506131dc565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156132b357600080fd5b505afa1580156132c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132eb9190614702565b9050818110613071576110376001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461362e565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e50826020015160405161336991906149d0565b60405180910390a250565b806040015151600214156134d35760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016133de929190614bdb565b60006040518083038186803b1580156133f657600080fd5b505af415801561340a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613432919081019061437e565b9150915061343f81611160565b61347b5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e32565b825161348790836137ae565b6110375760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610e32565b806040015151601014156135e65760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161353d929190614bdb565b60006040518083038186803b15801561355557600080fd5b505af4158015613569573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613591919081019061437e565b9150915061359e81611160565b6135da5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e32565b825161348790836138d8565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610e32565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611037908490613960565b6000828152600d602052604081205460ff16156136af5760405162461bcd60e51b8152600401610e3290614a75565b6000828152600d602052604090205460ff16156136de5760405162461bcd60e51b8152600401610e3290614a75565b60006136ea8484613a32565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b561378a836001614d7a565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906137c591906142e2565b905060008060006137d584612d06565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613836908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600190600401614946565b60206040518083038186803b15801561384e57600080fd5b505afa158015613862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138869190614343565b9450846138ce5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610e32565b5050505092915050565b600080838060200190518101906138ef91906142e2565b905060008060006138ff84612d06565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613836908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600090600401614946565b60006139b5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613c9f9092919063ffffffff16565b80519091501561103757808060200190518101906139d39190614343565b6110375760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e32565b600354600090640100000000900463ffffffff16613a717f00000000000000000000000000000000000000000000000000000000000000006002614e2f565b63ffffffff168163ffffffff161415613ae55760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610e32565b6000613af2600283614dc7565b90506000613b217f00000000000000000000000000000000000000000000000000000000000000008787611ce4565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613c0b57613b6860028661505c565b63ffffffff16613ba357839250613b848163ffffffff166126c6565b63ffffffff821660009081526001602052604090208590559150613bbf565b63ffffffff811660009081526001602052604090205492508391505b613bea7f00000000000000000000000000000000000000000000000000000000000000008484611ce4565b9350613bf7600286614dc7565b945080613c0381615024565b915050613b29565b50600354600090601e90613c269063ffffffff166001614d7a565b613c30919061505c565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613c6a908790614d7a565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b6060610ed98484600085856001600160a01b0385163b613d015760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e32565b600080866001600160a01b03168587604051613d1d91906147ed565b60006040518083038185875af1925050503d8060008114613d5a576040519150601f19603f3d011682016040523d82523d6000602084013e613d5f565b606091505b5091509150613d6f828286613d7a565b979650505050505050565b60608315613d89575081611e40565b825115613d995782518084602001fd5b8160405162461bcd60e51b8152600401610e3291906149d0565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613de8613db3565b815260200190600190039081613de05790505090565b8035612d01816150f4565b600082601f830112613e1a57600080fd5b604051604081018181106001600160401b0382111715613e3c57613e3c6150de565b8060405250808385604086011115613e5357600080fd5b60005b6002811015613e75578135835260209283019290910190600101613e56565b509195945050505050565b600082601f830112613e9157600080fd5b81356020613ea6613ea183614d18565b614ce8565b80838252828201915082860187848660051b8901011115613ec657600080fd5b60005b85811015613ee557813584529284019290840190600101613ec9565b5090979650505050505050565b600082601f830112613f0357600080fd5b8135613f11613ea182614d3b565b818152846020838601011115613f2657600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613f5557600080fd5b604051604081016001600160401b038282108183111715613f7857613f786150de565b8160405282935084359150613f8c826150f4565b90825260208401359080821115613fa257600080fd5b50613faf85828601613ef2565b6020830152505092915050565b600060c08284031215613fce57600080fd5b613fd6614c9d565b9050613fe182613dfe565b815260208201356020820152613ff960408301613dfe565b60408201526060820135606082015260808201356001600160401b038082111561402257600080fd5b61402e85838601613ef2565b608084015260a084013591508082111561404757600080fd5b5061405484828501613ef2565b60a08301525092915050565b600060e0828403121561407257600080fd5b61407a614c9d565b905081356001600160401b038082111561409357600080fd5b61409f85838601613ef2565b835260208401359150808211156140b557600080fd5b6140c185838601613ef2565b602084015260408401359150808211156140da57600080fd5b506140e784828501613e80565b6040830152506140fa8360608401613e09565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612d0157600080fd5b60008060006060848603121561414257600080fd5b833561414d816150f4565b9250602084013561415d816150f4565b929592945050506040919091013590565b6000806040838503121561418157600080fd5b823561418c816150f4565b946020939093013593505050565b600080604083850312156141ad57600080fd5b82356141b8816150f4565b91506141c660208401614119565b90509250929050565b600080602083850312156141e257600080fd5b82356001600160401b03808211156141f957600080fd5b818501915085601f83011261420d57600080fd5b81358181111561421c57600080fd5b8660208260051b850101111561423157600080fd5b60209290920196919550909350505050565b60006020828403121561425557600080fd5b81356001600160401b0381111561426b57600080fd5b610ed984828501613e80565b600061010080838503121561428b57600080fd5b83601f84011261429a57600080fd5b6142a2614cc5565b80848684870111156142b357600080fd5b600093505b60088410156142d8578035835260019390930192602092830192016142b8565b5095945050505050565b60006101008083850312156142f657600080fd5b83601f84011261430557600080fd5b61430d614cc5565b808486848701111561431e57600080fd5b600093505b60088410156142d857805183526001939093019260209283019201614323565b60006020828403121561435557600080fd5b81518015158114610ed757600080fd5b60006020828403121561437757600080fd5b5035919050565b6000806040838503121561439157600080fd5b82516001600160401b03808211156143a857600080fd5b818501915085601f8301126143bc57600080fd5b815160206143cc613ea183614d3b565b82815288828487010111156143e057600080fd5b6143ef83838301848801614fbd565b8782015190965093508284111561440557600080fd5b838701935087601f85011261441957600080fd5b83519250614429613ea184614d18565b8381528181019250848201600585901b860183018a101561444957600080fd5b600095505b8486101561446c57805184526001959095019492820192820161444e565b5080955050505050509250929050565b60008060006060848603121561449157600080fd5b833561449c816150f4565b95602085013595506040909401359392505050565b600080604083850312156144c457600080fd5b50508035926020909101359150565b6000602082840312156144e557600080fd5b81356001600160401b038111156144fb57600080fd5b610ed984828501613f43565b60008060006060848603121561451c57600080fd5b83356001600160401b038082111561453357600080fd5b61453f87838801613f43565b9450602086013591508082111561455557600080fd5b61456187838801614060565b9350604086013591508082111561457757600080fd5b5061458486828701613fbc565b9150509250925092565b600080600080608085870312156145a457600080fd5b84356001600160401b03808211156145bb57600080fd5b6145c788838901613f43565b955060208701359150808211156145dd57600080fd5b6145e988838901614060565b945060408701359150808211156145ff57600080fd5b5061460c87828801613fbc565b925050606085013561461d816150f4565b939692955090935050565b6000806040838503121561463b57600080fd5b82356001600160401b038082111561465257600080fd5b61465e86838701614060565b9350602085013591508082111561467457600080fd5b5061468185828601613fbc565b9150509250929050565b6000806000606084860312156146a057600080fd5b83356001600160401b03808211156146b757600080fd5b6146c387838801614060565b945060208601359150808211156146d957600080fd5b506146e686828701613fbc565b92505060408401356146f7816150f4565b809150509250925092565b60006020828403121561471457600080fd5b5051919050565b6000806000806080858703121561473157600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561476057600080fd5b823591506141c660208401614119565b8060005b60028110156125245761478884835161479e565b6040939093019260209190910190600101614774565b8060005b60028110156125245781518452602093840193909101906001016147a2565b600081518084526147d9816020860160208601614fbd565b601f01601f19169290920160200192915050565b600082516147ff818460208701614fbd565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b81811015614867578351151583529284019291840191600101614849565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156148675783518352928401929184019160010161488f565b602080825282518282018190526000919060409081850190868401855b82811015614902578151805185528681015187860152858101518686015260609081015190850152608090930192908501906001016148c8565b5091979650505050505050565b60408101610c89828461479e565b610100810161492c828661479e565b6149396040830185614770565b610ed960c083018461479e565b6000610160614955838a61479e565b6149626040840189614770565b61496f60c084018861479e565b80610100840152614982818401876147c1565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff831660208201526060604082015260006149c760608301846147c1565b95945050505050565b602081526000611e4060208301846147c1565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614bbe60e08401826147c1565b905060a0840151601f198483030160c08501526149c782826147c1565b604081526000835160e06040840152614bf86101208401826147c1565b9050602080860151603f1980868503016060870152614c1784836147c1565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614c595784518252938301936001929092019190830190614c39565b5060608801519350614c6e60a087018561479e565b608088015160e087015260a088015161010087015260ff8716838701529350614c949050565b50509392505050565b60405160c081016001600160401b0381118282101715614cbf57614cbf6150de565b60405290565b60405161010081016001600160401b0381118282101715614cbf57614cbf6150de565b604051601f8201601f191681016001600160401b0381118282101715614d1057614d106150de565b604052919050565b60006001600160401b03821115614d3157614d316150de565b5060051b60200190565b60006001600160401b03821115614d5457614d546150de565b50601f01601f191660200190565b60008219821115614d7557614d7561509c565b500190565b600063ffffffff808316818516808303821115614d9957614d9961509c565b01949350505050565b600060ff821660ff84168060ff03821115614dbf57614dbf61509c565b019392505050565b600063ffffffff80841680614dde57614dde6150b2565b92169190910492915050565b600181815b80851115614e27578163ffffffff04821115614e0d57614e0d61509c565b80851615614e1a57918102915b93841c9390800290614def565b509250929050565b600063ffffffff610ed9818516828516600082614e4e57506001610c89565b81614e5b57506000610c89565b8160018114614e715760028114614e7b57614eac565b6001915050610c89565b60ff841115614e8c57614e8c61509c565b6001841b915063ffffffff821115614ea657614ea661509c565b50610c89565b5060208310610133831016604e8410600b8410161715614ee3575081810a63ffffffff811115614ede57614ede61509c565b610c89565b614eed8383614dea565b8063ffffffff04821115614f0357614f0361509c565b029392505050565b60008083128015600160ff1b850184121615614f2957614f2961509c565b6001600160ff1b0384018313811615614f4457614f4461509c565b50500390565b600082821015614f5c57614f5c61509c565b500390565b600063ffffffff83811690831681811015614f7e57614f7e61509c565b039392505050565b805160208201516001600160d01b03198082169291906006831015614fb55780818460060360031b1b83161693505b505050919050565b60005b83811015614fd8578181015183820152602001614fc0565b838111156125245750506000910152565b600063ffffffff821680614fff57614fff61509c565b6000190192915050565b600060001982141561501d5761501d61509c565b5060010190565b600063ffffffff8083168181141561503e5761503e61509c565b6001019392505050565b600082615057576150576150b2565b500690565b600063ffffffff80841680615073576150736150b2565b92169190910692915050565b6000600160ff1b8214156150955761509561509c565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f1457600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212202a8cc1733dee60c676ef670903b2c34fa5b35769b1fd2fa3d84b4056d9a5041564736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
