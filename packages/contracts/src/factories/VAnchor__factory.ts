/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "target",
            type: "bytes32",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_target",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005b3038038062005b308339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c61502d62000b0360003960008181610bb301528181610e3501528181610ec901528181611185015281816112230152818161146101528181611fa20152818161206301528181612ea001528181612f3e01528181612f8b0152818161314001526131d801526000818161069301528181610c9501528181610cff015281816112d2015281816116a70152818161173a01528181611c1601528181613279015281816133d8015281816136e2015261380c0152600081816105c401528181610d8801528181611803015281816139220152613a02015260008181610af3015281816139d20152613a9b015261502d6000f3fe60806040526004361061038c5760003560e01c80638ea3099e116101dc578063c9be725011610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b42578063fa73168714610b71578063fc0c546a14610ba1578063fc7e9c6f14610bd557600080fd5b8063e829558814610a8d578063ec73295914610aad578063ed33639f14610ae1578063f178e47c14610b1557600080fd5b8063dbc916b8116100dc578063dbc916b8146109d0578063e4a3011614610a10578063e5285dcc14610a30578063e70ea87c14610a6057600080fd5b8063c9be72501461097b578063cd87a3b41461099b578063dad878a5146109b057600080fd5b80639ff800631161017a578063ba70f75711610149578063ba70f75714610904578063bc063e1a146106fd578063c2b40ae41461092e578063c80916d41461095b57600080fd5b80639ff80063146105e6578063a0d192f5146108a4578063b2bc6e0f146108c4578063b7566a67146108e457600080fd5b806392156311116101b6578063921563111461081457806395c87d1a146108445780639bbca3a9146108575780639fa12d0b1461087757600080fd5b80638ea3099e146107c15780638f1c56bd146107e157806390eeb02b146107f757600080fd5b80634ecf518b116102c157806372c1ad031161025f578063840b27911161022e578063840b2791146107455780638b7e87821461075b5780638c0d34d81461078c5780638d09169d146107ae57600080fd5b806372c1ad03146106c757806378abb49b146106e75780637fe24ffe146106fd578063839df9451461071557600080fd5b8063616e09571161029b578063616e0957146106395780636ad481f3146106595780636d9833e31461066157806371523c321461068157600080fd5b80634ecf518b146105b25780634f401241146105e65780635d2d766c1461060657600080fd5b80632d48470c1161032e5780634167bb1e116103085780634167bb1e1461051b57806343e7119f1461052e578063460b53e3146105665780634c830cbd1461058657600080fd5b80632d48470c146104c65780633408e470146104e6578063414a37ba146104f957600080fd5b80631e6276171161036a5780631e627617146104295780632063e3d31461044b5780632570b7b4146104605780632b7ac3f31461048e57600080fd5b80630b27fb9a1461039157806311e4dcb9146103c957806317cc915c146103f9575b600080fd5b34801561039d57600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103d557600080fd5b506103e96103e436600461437f565b610bfa565b60405190151581526020016103c0565b34801561040557600080fd5b506103e9610414366004614233565b600c6020526000908152604090205460ff1681565b34801561043557600080fd5b5061043e610c8f565b6040516103c09190614741565b61045e61045936600461403c565b610de9565b005b34801561046c57600080fd5b5061048061047b36600461437f565b610f2a565b6040519081526020016103c0565b34801561049a57600080fd5b50600b546104ae906001600160a01b031681565b6040516001600160a01b0390911681526020016103c0565b3480156104d257600080fd5b5061045e6104e1366004614233565b611018565b3480156104f257600080fd5b5046610480565b34801561050557600080fd5b50610480600080516020614fd883398151915281565b61045e610529366004614559565b61104e565b34801561053a57600080fd5b5061048061054936600461461b565b600960209081526000928352604080842090915290825290205481565b34801561057257600080fd5b5061045e61058136600461403c565b61116e565b34801561059257600080fd5b5061059b6111be565b60405165ffffffffffff90911681526020016103c0565b3480156105be57600080fd5b506103af7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105f257600080fd5b5061045e61060136600461403c565b61120c565b34801561061257600080fd5b506103af610621366004614233565b600a6020526000908152604090205463ffffffff1681565b34801561064557600080fd5b506103e9610654366004614111565b61125c565b61045e61144a565b34801561066d57600080fd5b506103e961067c366004614233565b6114d1565b34801561068d57600080fd5b506106b57f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103c0565b3480156106d357600080fd5b5061045e6106e2366004614068565b61154c565b3480156106f357600080fd5b5061048060105481565b34801561070957600080fd5b50610480600160f81b81565b34801561072157600080fd5b506103e9610730366004614233565b600d6020526000908152604090205460ff1681565b34801561075157600080fd5b50610480600f5481565b34801561076757600080fd5b50610773600160f81b81565b6040516001600160f01b031990911681526020016103c0565b34801561079857600080fd5b506107a16116a1565b6040516103c09190614779565b61045e6107bc3660046145e9565b611870565b3480156107cd57600080fd5b506104806107dc36600461434a565b611ddf565b3480156107ed57600080fd5b50610480600e5481565b34801561080357600080fd5b506003546103af9063ffffffff1681565b34801561082057600080fd5b506103e961082f366004614233565b60009081526007602052604090205460ff1690565b61045e610852366004613ffb565b611f42565b34801561086357600080fd5b5061045e6108723660046144f6565b612008565b34801561088357600080fd5b5061089761089236600461409d565b6121f1565b6040516103c091906146fb565b3480156108b057600080fd5b5061045e6108bf366004614068565b6122b9565b3480156108d057600080fd5b5061045e6108df3660046143a1565b6123f8565b3480156108f057600080fd5b5061045e6108ff36600461445c565b61245a565b34801561091057600080fd5b5060035463ffffffff16600090815260026020526040902054610480565b34801561093a57600080fd5b50610480610949366004614233565b60026020526000908152604090205481565b34801561096757600080fd5b506005546104ae906001600160a01b031681565b34801561098757600080fd5b5061045e6109963660046143d5565b612474565b3480156109a757600080fd5b506103af601e81565b3480156109bc57600080fd5b5061045e6109cb366004614233565b612487565b3480156109dc57600080fd5b506109f06109eb366004614233565b6124ba565b6040805194855260208501939093529183015260608201526080016103c0565b348015610a1c57600080fd5b5061045e610a2b36600461437f565b6124f4565b348015610a3c57600080fd5b506103e9610a4b366004614233565b6000908152600c602052604090205460ff1690565b348015610a6c57600080fd5b50610480610a7b366004614233565b60066020526000908152604090205481565b348015610a9957600080fd5b50610480610aa8366004614233565b6125ba565b348015610ab957600080fd5b506104807f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610aed57600080fd5b506104ae7f000000000000000000000000000000000000000000000000000000000000000081565b348015610b2157600080fd5b50610480610b30366004614233565b60016020526000908152604090205481565b348015610b4e57600080fd5b50610b62610b5d366004614145565b612bfa565b6040516103c0939291906147eb565b348015610b7d57600080fd5b506103e9610b8c366004614233565b60076020526000908152604090205460ff1681565b348015610bad57600080fd5b506104ae7f000000000000000000000000000000000000000000000000000000000000000081565b348015610be157600080fd5b506003546103af90640100000000900463ffffffff1681565b600081610c0957506000610c89565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c5257600192505050610c89565b63ffffffff8116610c615750601e5b80610c6b81614eb7565b9150508163ffffffff168163ffffffff161415610c20576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610cce57610cce614fac565b604051908082528060200260200182016040528015610cf7578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610de357610d33816001614c30565b60085410610d835760088181548110610d4e57610d4e614f96565b906000526020600020906004020160010154828281518110610d7257610d72614f96565b602002602001018181525050610dd1565b610db27f000000000000000000000000000000000000000000000000000000000000000063ffffffff166125ba565b828281518110610dc457610dc4614f96565b6020026020010181815250505b80610ddb81614ed7565b915050610cfd565b50919050565b6001600160a01b038216610e9757803414610e0357600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610e7a57600080fd5b505af1158015610e8e573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610f0e57600080fd5b505af1158015610f22573d6000803e3d6000fd5b505050505050565b6000600160f81b8210610f725760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610f7f600160f81b614f4d565b83138015610f905750600160f81b83125b610fd15760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610f69565b6000610fdd8385614dd9565b9050600081121561100e57610ff181614f4d565b61100990600080516020614fd8833981519152614e18565b611010565b805b949350505050565b6005546001600160a01b031633146110425760405162461bcd60e51b8152600401610f6990614a05565b61104b81600f55565b50565b6110588383612c83565b600082602001511315611099576010548260200151111561108b5760405162461bcd60e51b8152600401610f69906149bb565b611099818360200151610de9565b6000826020015112156111435781516001600160a01b03166110fd5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610f69565b600f54826020015161110e90614f4d565b101561112c5760405162461bcd60e51b8152600401610f69906148b1565b611143818360000151846020015161085290614f4d565b60608201511561115f5761115f82604001518360600151612e88565b6111698383612fcf565b505050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610ef4903390869086906004016146d7565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161120181614e54565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610ef4903390869086906004016146d7565b60006112818260008151811061127457611274614f96565b60200260200101516114d1565b6112cd5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610f69565b6112f87f00000000000000000000000000000000000000000000000000000000000000006001614c70565b60ff1682511461134a5760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610f69565b60005b6008548110156114415760006008828154811061136c5761136c614f96565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506113e28160000151858460016113c59190614c30565b815181106113d5576113d5614f96565b6020026020010151610bfa565b61142e5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610f69565b508061143981614ed7565b91505061134d565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890349061149d90339060009081906004016146d7565b6000604051808303818588803b1580156114b657600080fd5b505af11580156114ca573d6000803e3d6000fd5b5050505050565b6000816114e057506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611512575060019392505050565b63ffffffff81166115215750601e5b8061152b81614eb7565b9150508163ffffffff168163ffffffff1614156114eb575060009392505050565b6005546001600160a01b031633146115765760405162461bcd60e51b8152600401610f6990614a05565b6001600160a01b0382166115c25760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610f69565b600b5463ffffffff808316600160a01b90920416106116135760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610f69565b600b5461162f90600160a01b900463ffffffff16610418614c48565b63ffffffff168163ffffffff16106116595760405162461bcd60e51b8152600401610f69906148fc565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156116e0576116e0614fac565b60405190808252806020026020018201604052801561173257816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816116fe5790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610de35761176e816001614c30565b600854106117ec576008818154811061178957611789614f96565b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508282815181106117dc576117dc614f96565b602002602001018190525061185e565b60405180608001604052806000815260200161182d7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166125ba565b8152602001600081526020016000801b81525082828151811061185257611852614f96565b60200260200101819052505b8061186881614ed7565b915050611738565b6005546001600160a01b0316331461189a5760405162461bcd60e51b8152600401610f6990614a05565b600260045414156118bd5760405162461bcd60e51b8152600401610f6990614984565b60026004908155604051639215631160e01b8152908101859052309063921563119060240160206040518083038186803b1580156118fa57600080fd5b505afa15801561190e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119329190614211565b15611c0f5760008481526007602052604090205460ff166119bb5760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610f69565b6000848152600660205260409020546008805484929081106119df576119df614f96565b90600052602060002090600402016002015410611a3e5760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610f69565b600084815260066020526040902054600880549091908110611a6257611a62614f96565b90600052602060002090600402016002015462010000611a829190614c30565b8210611ae05760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610f69565b600084815260066020908152604091829020548251608081018452878152918201869052918101849052606081018390526008805483908110611b2557611b25614f96565b600091825260208083208451600490930201918255838101516001808401919091556040808601516002850155606090950151600390930192909255888352600a9052918120549091601e91611b839163ffffffff90911690614c48565b611b8d9190614f2a565b6000878152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902088905581518981529081018790529081018790529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050611dd4565b60085460ff7f00000000000000000000000000000000000000000000000000000000000000001611611c835760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610f69565b6000848152600760209081526040808320805460ff191660019081179091556008805483516080810185528a81528086018a81528186018a815260608084018b815296850186559489528251600485027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915591517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee582015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee6909401939093558986526006855283862081905560098552838620868052855283862089905583518a81529485018890529284018890529193909290917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b6000600080516020614fd88339815191528310611e3e5760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610f69565b600080516020614fd88339815191528210611ea55760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610f69565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611ee691906004016147dd565b60206040518083038186803b158015611efe57600080fd5b505afa158015611f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3691906145d0565b925050505b9392505050565b60026004541415611f655760405162461bcd60e51b8152600401610f6990614984565b6002600455611f743082613128565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611fe657600080fd5b505af1158015611ffa573d6000803e3d6000fd5b505060016004555050505050565b6002600454141561202b5760405162461bcd60e51b8152600401610f6990614984565b600260045561203a8282612c83565b6000816020015113156121145760208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd9161209b9133913091906004016146d7565b602060405180830381600087803b1580156120b557600080fd5b505af11580156120c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ed9190614211565b50601054816020015111156121145760405162461bcd60e51b8152600401610f69906149bb565b6000816020015112156121c25780516001600160a01b03166121785760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610f69565b600f54816020015161218990614f4d565b10156121a75760405162461bcd60e51b8152600401610f69906148b1565b6121c2816000015182602001516121bd90614f4d565b613128565b6060810151156121de576121de81604001518260600151612e88565b6121e88282612fcf565b50506001600455565b60606000826001600160401b0381111561220d5761220d614fac565b604051908082528060200260200182016040528015612236578160200160208202803683370190505b50905060005b838110156122b15761227585858381811061225957612259614f96565b905060200201356000908152600c602052604090205460ff1690565b1561229f57600182828151811061228e5761228e614f96565b911515602092830291909101909101525b806122a981614ed7565b91505061223c565b509392505050565b6005546001600160a01b031633146122e35760405162461bcd60e51b8152600401610f6990614a05565b6001600160a01b03821661232f5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610f69565b600b5463ffffffff808316600160a01b90920416106123805760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610f69565b600b5461239c90600160a01b900463ffffffff16610418614c48565b63ffffffff168163ffffffff16106123c65760405162461bcd60e51b8152600401610f69906148fc565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b031633146124515760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610f69565b61104b816131ff565b612463846123f8565b61246e83838361104e565b50505050565b61247d836123f8565b6111698282612008565b6005546001600160a01b031633146124b15760405162461bcd60e51b8152600401610f6990614a05565b61104b81601055565b600881815481106124ca57600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff168061250d575060005460ff16155b6125705760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610f69565b600054610100900460ff16158015612592576000805461ffff19166101011790555b61259b83600f55565b6125a482601055565b8015611169576000805461ff0019169055505050565b6000816125e857507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561261857507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561264857507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561267857507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156126a857507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156126d857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561270857507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561273857507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561276857507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561279857507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156127c857507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b14156127f857507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561282857507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561285857507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561288857507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156128b857507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156128e857507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011141561291757507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561294757507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561297757507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156129a757507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156129d757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612a0757507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612a3757507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612a6757507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612a9757507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612ac757507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612af757507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612b2757507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612b5757507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612b8757507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612bb757507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610f69565b919050565b612c02613c81565b612c0a613c9f565b612c12613c81565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612d2157612cc983604001518281518110612cac57612cac614f96565b60200260200101516000908152600c602052604090205460ff1690565b15612d0f5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610f69565b80612d1981614ed7565b915050612c86565b50600080516020614fd883398151915281604051602001612d429190614a3c565b6040516020818303038152906040528051906020012060001c612d659190614f16565b60a083015114612db75760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610f69565b612dc981602001518260600151610f2a565b826080015114612e135760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610f69565b612e1c8261324b565b60005b826040015151811015611169576001600c600085604001518481518110612e4857612e48614f96565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612e8090614ed7565b915050612e1f565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612eea57600080fd5b505afa158015612efe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f2291906145d0565b9050811561116957818110612f65576111696001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613505565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610e7a57600080fd5b60608201518051602090910151612fe69190613557565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd919061302d90600290640100000000900463ffffffff16614e2f565b836080015160405161304193929190614870565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461309490600190640100000000900463ffffffff16614e2f565b8360a001516040516130a893929190614870565b60405180910390a160005b826040015151811015611169577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106130f7576130f7614f96565b602002602001015160405161310e91815260200190565b60405180910390a18061312081614ed7565b9150506130b3565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561318a57600080fd5b505afa15801561319e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131c291906145d0565b9050818110612f65576111696001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613505565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e508260200151604051613240919061489e565b60405180910390a250565b806040015151600214156133aa5760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016132b5929190614aa9565b60006040518083038186803b1580156132cd57600080fd5b505af41580156132e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613309919081019061424c565b915091506133168161125c565b6133525760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610f69565b825161335e9083613685565b6111695760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610f69565b806040015151601014156134bd5760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401613414929190614aa9565b60006040518083038186803b15801561342c57600080fd5b505af4158015613440573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613468919081019061424c565b915091506134758161125c565b6134b15760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610f69565b825161335e90836137af565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610f69565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611169908490613837565b6000828152600d602052604081205460ff16156135865760405162461bcd60e51b8152600401610f6990614943565b6000828152600d602052604090205460ff16156135b55760405162461bcd60e51b8152600401610f6990614943565b60006135c18484613909565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5613661836001614c48565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b6000808380602001905181019061369c91906141b0565b905060008060006136ac84612bfa565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca539061370d908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600190600401614814565b60206040518083038186803b15801561372557600080fd5b505afa158015613739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061375d9190614211565b9450846137a55760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610f69565b5050505092915050565b600080838060200190518101906137c691906141b0565b905060008060006137d684612bfa565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca539061370d908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600090600401614814565b600061388c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613b769092919063ffffffff16565b80519091501561116957808060200190518101906138aa9190614211565b6111695760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610f69565b600354600090640100000000900463ffffffff166139487f00000000000000000000000000000000000000000000000000000000000000006002614cfd565b63ffffffff168163ffffffff1614156139bc5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610f69565b60006139c9600283614c95565b905060006139f87f00000000000000000000000000000000000000000000000000000000000000008787611ddf565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613ae257613a3f600286614f2a565b63ffffffff16613a7a57839250613a5b8163ffffffff166125ba565b63ffffffff821660009081526001602052604090208590559150613a96565b63ffffffff811660009081526001602052604090205492508391505b613ac17f00000000000000000000000000000000000000000000000000000000000000008484611ddf565b9350613ace600286614c95565b945080613ada81614ef2565b915050613a00565b50600354600090601e90613afd9063ffffffff166001614c48565b613b079190614f2a565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613b41908790614c48565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b6060611010848460008585843b613bcf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f69565b600080866001600160a01b03168587604051613beb91906146bb565b60006040518083038185875af1925050503d8060008114613c28576040519150601f19603f3d011682016040523d82523d6000602084013e613c2d565b606091505b5091509150613c3d828286613c48565b979650505050505050565b60608315613c57575081611f3b565b825115613c675782518084602001fd5b8160405162461bcd60e51b8152600401610f69919061489e565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613cb6613c81565b815260200190600190039081613cae5790505090565b8035612bf581614fc2565b600082601f830112613ce857600080fd5b604051604081018181106001600160401b0382111715613d0a57613d0a614fac565b8060405250808385604086011115613d2157600080fd5b60005b6002811015613d43578135835260209283019290910190600101613d24565b509195945050505050565b600082601f830112613d5f57600080fd5b81356020613d74613d6f83614be6565b614bb6565b80838252828201915082860187848660051b8901011115613d9457600080fd5b60005b85811015613db357813584529284019290840190600101613d97565b5090979650505050505050565b600082601f830112613dd157600080fd5b8135613ddf613d6f82614c09565b818152846020838601011115613df457600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613e2357600080fd5b604051604081016001600160401b038282108183111715613e4657613e46614fac565b8160405282935084359150613e5a82614fc2565b90825260208401359080821115613e7057600080fd5b50613e7d85828601613dc0565b6020830152505092915050565b600060c08284031215613e9c57600080fd5b613ea4614b6b565b9050613eaf82613ccc565b815260208201356020820152613ec760408301613ccc565b60408201526060820135606082015260808201356001600160401b0380821115613ef057600080fd5b613efc85838601613dc0565b608084015260a0840135915080821115613f1557600080fd5b50613f2284828501613dc0565b60a08301525092915050565b600060e08284031215613f4057600080fd5b613f48614b6b565b905081356001600160401b0380821115613f6157600080fd5b613f6d85838601613dc0565b83526020840135915080821115613f8357600080fd5b613f8f85838601613dc0565b60208401526040840135915080821115613fa857600080fd5b50613fb584828501613d4e565b604083015250613fc88360608401613cd7565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612bf557600080fd5b60008060006060848603121561401057600080fd5b833561401b81614fc2565b9250602084013561402b81614fc2565b929592945050506040919091013590565b6000806040838503121561404f57600080fd5b823561405a81614fc2565b946020939093013593505050565b6000806040838503121561407b57600080fd5b823561408681614fc2565b915061409460208401613fe7565b90509250929050565b600080602083850312156140b057600080fd5b82356001600160401b03808211156140c757600080fd5b818501915085601f8301126140db57600080fd5b8135818111156140ea57600080fd5b8660208260051b85010111156140ff57600080fd5b60209290920196919550909350505050565b60006020828403121561412357600080fd5b81356001600160401b0381111561413957600080fd5b61101084828501613d4e565b600061010080838503121561415957600080fd5b83601f84011261416857600080fd5b614170614b93565b808486848701111561418157600080fd5b600093505b60088410156141a657803583526001939093019260209283019201614186565b5095945050505050565b60006101008083850312156141c457600080fd5b83601f8401126141d357600080fd5b6141db614b93565b80848684870111156141ec57600080fd5b600093505b60088410156141a6578051835260019390930192602092830192016141f1565b60006020828403121561422357600080fd5b8151801515811461100e57600080fd5b60006020828403121561424557600080fd5b5035919050565b6000806040838503121561425f57600080fd5b82516001600160401b038082111561427657600080fd5b818501915085601f83011261428a57600080fd5b8151602061429a613d6f83614c09565b82815288828487010111156142ae57600080fd5b6142bd83838301848801614e8b565b878201519096509350828411156142d357600080fd5b838701935087601f8501126142e757600080fd5b835192506142f7613d6f84614be6565b8381528181019250848201600585901b860183018a101561431757600080fd5b600095505b8486101561433a57805184526001959095019492820192820161431c565b5080955050505050509250929050565b60008060006060848603121561435f57600080fd5b833561436a81614fc2565b95602085013595506040909401359392505050565b6000806040838503121561439257600080fd5b50508035926020909101359150565b6000602082840312156143b357600080fd5b81356001600160401b038111156143c957600080fd5b61101084828501613e11565b6000806000606084860312156143ea57600080fd5b83356001600160401b038082111561440157600080fd5b61440d87838801613e11565b9450602086013591508082111561442357600080fd5b61442f87838801613f2e565b9350604086013591508082111561444557600080fd5b5061445286828701613e8a565b9150509250925092565b6000806000806080858703121561447257600080fd5b84356001600160401b038082111561448957600080fd5b61449588838901613e11565b955060208701359150808211156144ab57600080fd5b6144b788838901613f2e565b945060408701359150808211156144cd57600080fd5b506144da87828801613e8a565b92505060608501356144eb81614fc2565b939692955090935050565b6000806040838503121561450957600080fd5b82356001600160401b038082111561452057600080fd5b61452c86838701613f2e565b9350602085013591508082111561454257600080fd5b5061454f85828601613e8a565b9150509250929050565b60008060006060848603121561456e57600080fd5b83356001600160401b038082111561458557600080fd5b61459187838801613f2e565b945060208601359150808211156145a757600080fd5b506145b486828701613e8a565b92505060408401356145c581614fc2565b809150509250925092565b6000602082840312156145e257600080fd5b5051919050565b600080600080608085870312156145ff57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561462e57600080fd5b8235915061409460208401613fe7565b8060005b600281101561246e5761465684835161466c565b6040939093019260209190910190600101614642565b8060005b600281101561246e578151845260209384019390910190600101614670565b600081518084526146a7816020860160208601614e8b565b601f01601f19169290920160200192915050565b600082516146cd818460208701614e8b565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b81811015614735578351151583529284019291840191600101614717565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156147355783518352928401929184019160010161475d565b602080825282518282018190526000919060409081850190868401855b828110156147d057815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101614796565b5091979650505050505050565b60408101610c89828461466c565b61010081016147fa828661466c565b614807604083018561463e565b61101060c083018461466c565b6000610160614823838a61466c565b614830604084018961463e565b61483d60c084018861466c565b806101008401526148508184018761468f565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614895606083018461468f565b95945050505050565b602081526000611f3b602083018461468f565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614a8c60e084018261468f565b905060a0840151601f198483030160c0850152614895828261468f565b604081526000835160e06040840152614ac661012084018261468f565b9050602080860151603f1980868503016060870152614ae5848361468f565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614b275784518252938301936001929092019190830190614b07565b5060608801519350614b3c60a087018561466c565b608088015160e087015260a088015161010087015260ff8716838701529350614b629050565b50509392505050565b60405160c081016001600160401b0381118282101715614b8d57614b8d614fac565b60405290565b60405161010081016001600160401b0381118282101715614b8d57614b8d614fac565b604051601f8201601f191681016001600160401b0381118282101715614bde57614bde614fac565b604052919050565b60006001600160401b03821115614bff57614bff614fac565b5060051b60200190565b60006001600160401b03821115614c2257614c22614fac565b50601f01601f191660200190565b60008219821115614c4357614c43614f6a565b500190565b600063ffffffff808316818516808303821115614c6757614c67614f6a565b01949350505050565b600060ff821660ff84168060ff03821115614c8d57614c8d614f6a565b019392505050565b600063ffffffff80841680614cac57614cac614f80565b92169190910492915050565b600181815b80851115614cf5578163ffffffff04821115614cdb57614cdb614f6a565b80851615614ce857918102915b93841c9390800290614cbd565b509250929050565b600063ffffffff611010818516828516600082614d1c57506001610c89565b81614d2957506000610c89565b8160018114614d3f5760028114614d4957614d7a565b6001915050610c89565b60ff841115614d5a57614d5a614f6a565b6001841b915063ffffffff821115614d7457614d74614f6a565b50610c89565b5060208310610133831016604e8410600b8410161715614db1575081810a63ffffffff811115614dac57614dac614f6a565b610c89565b614dbb8383614cb8565b8063ffffffff04821115614dd157614dd1614f6a565b029392505050565b60008083128015600160ff1b850184121615614df757614df7614f6a565b6001600160ff1b0384018313811615614e1257614e12614f6a565b50500390565b600082821015614e2a57614e2a614f6a565b500390565b600063ffffffff83811690831681811015614e4c57614e4c614f6a565b039392505050565b805160208201516001600160d01b03198082169291906006831015614e835780818460060360031b1b83161693505b505050919050565b60005b83811015614ea6578181015183820152602001614e8e565b8381111561246e5750506000910152565b600063ffffffff821680614ecd57614ecd614f6a565b6000190192915050565b6000600019821415614eeb57614eeb614f6a565b5060010190565b600063ffffffff80831681811415614f0c57614f0c614f6a565b6001019392505050565b600082614f2557614f25614f80565b500690565b600063ffffffff80841680614f4157614f41614f80565b92169190910692915050565b6000600160ff1b821415614f6357614f63614f6a565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461104b57600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122026910fe56d913a0d38d1fb05dae4a1357e59090401739153cc7ba738eae64ecd64736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
