/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, BigNumberish, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { VAnchor, VAnchorInterface } from '../VAnchor';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IAnchorVerifier',
        name: '_verifier',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_levels',
        type: 'uint32',
      },
      {
        internalType: 'contract IHasher',
        name: '_hasher',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_handler',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: '_maxEdges',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'chainID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'latestLeafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32',
      },
    ],
    name: 'EdgeAddition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'chainID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'latestLeafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32',
      },
    ],
    name: 'EdgeUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'commitment',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'leafIndex',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'Insertion',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'commitment',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedOutput',
        type: 'bytes',
      },
    ],
    name: 'NewCommitment',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'nullifier',
        type: 'bytes32',
      },
    ],
    name: 'NewNullifier',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'key',
        type: 'bytes',
      },
    ],
    name: 'PublicKey',
    type: 'event',
  },
  {
    inputs: [],
    name: 'EVM_CHAIN_ID_TYPE',
    outputs: [
      {
        internalType: 'bytes2',
        name: '',
        type: 'bytes2',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_EXT_AMOUNT',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROOT_HISTORY_SIZE',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ZERO_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_extAmount',
        type: 'uint256',
      },
    ],
    name: '_executeWrapping',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: '_extAmount',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: '_fee',
        type: 'uint256',
      },
    ],
    name: 'calculatePublicAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'commitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maximumDepositAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'configureMaximumDepositLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minimalWithdrawalAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'configureMinimalWithdrawalLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'currentNeighborRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'edgeExistsForChain',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'edgeIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'edgeList',
    outputs: [
      {
        internalType: 'uint256',
        name: 'chainID',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'latestLeafIndex',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'srcResourceID',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'filledSubtrees',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getChainId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getChainIdType',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastRoot',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLatestNeighborEdges',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'chainID',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'root',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'latestLeafIndex',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'srcResourceID',
            type: 'bytes32',
          },
        ],
        internalType: 'struct LinkableAnchor.Edge[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLatestNeighborRoots',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getProposalNonce',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'handler',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_chainID',
        type: 'uint256',
      },
    ],
    name: 'hasEdge',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IHasher',
        name: '_hasher',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_left',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_right',
        type: 'bytes32',
      },
    ],
    name: 'hashLeftRight',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher',
    outputs: [
      {
        internalType: 'contract IHasher',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minimalWithdrawalAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_maximumDepositAmount',
        type: 'uint256',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_neighborChainID',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
    ],
    name: 'isKnownNeighborRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_nullifierHash',
        type: 'bytes32',
      },
    ],
    name: 'isSpent',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: '_nullifierHashes',
        type: 'bytes32[]',
      },
    ],
    name: 'isSpentArray',
    outputs: [
      {
        internalType: 'bool[]',
        name: '',
        type: 'bool[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: '_roots',
        type: 'bytes32[]',
      },
    ],
    name: 'isValidRoots',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'levels',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxEdges',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maximumDepositAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minimalWithdrawalAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'neighborRoots',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nextIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'nullifierHashes',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_resourceId',
        type: 'bytes32',
      },
    ],
    name: 'parseChainIdFromResourceId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'keyData',
            type: 'bytes',
          },
        ],
        internalType: 'struct VAnchorBase.Account',
        name: '_account',
        type: 'tuple',
      },
    ],
    name: 'register',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'keyData',
            type: 'bytes',
          },
        ],
        internalType: 'struct VAnchorBase.Account',
        name: '_account',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'bytes',
            name: 'proof',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'roots',
            type: 'bytes',
          },
          {
            internalType: 'bytes32[]',
            name: 'inputNullifiers',
            type: 'bytes32[]',
          },
          {
            internalType: 'bytes32[2]',
            name: 'outputCommitments',
            type: 'bytes32[2]',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'extDataHash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct VAnchorEncodeInputs.Proof',
        name: '_proofArgs',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'extAmount',
            type: 'int256',
          },
          {
            internalType: 'address',
            name: 'relayer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'fee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'refund',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput1',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput2',
            type: 'bytes',
          },
        ],
        internalType: 'struct VAnchorBase.ExtData',
        name: '_extData',
        type: 'tuple',
      },
    ],
    name: 'registerAndTransact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'keyData',
            type: 'bytes',
          },
        ],
        internalType: 'struct VAnchorBase.Account',
        name: '_account',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'bytes',
            name: 'proof',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'roots',
            type: 'bytes',
          },
          {
            internalType: 'bytes32[]',
            name: 'inputNullifiers',
            type: 'bytes32[]',
          },
          {
            internalType: 'bytes32[2]',
            name: 'outputCommitments',
            type: 'bytes32[2]',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'extDataHash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct VAnchorEncodeInputs.Proof',
        name: '_proofArgs',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'extAmount',
            type: 'int256',
          },
          {
            internalType: 'address',
            name: 'relayer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'fee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'refund',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput1',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput2',
            type: 'bytes',
          },
        ],
        internalType: 'struct VAnchorBase.ExtData',
        name: '_extData',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'registerAndTransactWrap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'roots',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'latestLeafindex',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_handler',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'setHandler',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_verifier',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'setVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'proof',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'roots',
            type: 'bytes',
          },
          {
            internalType: 'bytes32[]',
            name: 'inputNullifiers',
            type: 'bytes32[]',
          },
          {
            internalType: 'bytes32[2]',
            name: 'outputCommitments',
            type: 'bytes32[2]',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'extDataHash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct VAnchorEncodeInputs.Proof',
        name: '_args',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'extAmount',
            type: 'int256',
          },
          {
            internalType: 'address',
            name: 'relayer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'fee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'refund',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput1',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput2',
            type: 'bytes',
          },
        ],
        internalType: 'struct VAnchorBase.ExtData',
        name: '_extData',
        type: 'tuple',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'proof',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'roots',
            type: 'bytes',
          },
          {
            internalType: 'bytes32[]',
            name: 'inputNullifiers',
            type: 'bytes32[]',
          },
          {
            internalType: 'bytes32[2]',
            name: 'outputCommitments',
            type: 'bytes32[2]',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'extDataHash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct VAnchorEncodeInputs.Proof',
        name: '_args',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'extAmount',
            type: 'int256',
          },
          {
            internalType: 'address',
            name: 'relayer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'fee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'refund',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput1',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'encryptedOutput2',
            type: 'bytes',
          },
        ],
        internalType: 'struct VAnchorBase.ExtData',
        name: '_extData',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'transactWrap',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[8]',
        name: '_proof',
        type: 'uint256[8]',
      },
    ],
    name: 'unpackProof',
    outputs: [
      {
        internalType: 'uint256[2]',
        name: '',
        type: 'uint256[2]',
      },
      {
        internalType: 'uint256[2][2]',
        name: '',
        type: 'uint256[2][2]',
      },
      {
        internalType: 'uint256[2]',
        name: '',
        type: 'uint256[2]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'unwrapIntoNative',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'unwrapIntoToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
      {
        internalType: 'uint32',
        name: '_leafIndex',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_srcResourceID',
        type: 'bytes32',
      },
    ],
    name: 'updateEdge',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'verifier',
    outputs: [
      {
        internalType: 'contract IAnchorVerifier',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_minusExtAmount',
        type: 'uint256',
      },
    ],
    name: 'withdrawAndUnwrap',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapNative',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'wrapToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60c06040526000805462010000600160501b03191690556005805463ffffffff191690553480156200003057600080fd5b50604051620053d9380380620053d98339810160408190526200005391620003d9565b8585858584818584868484838383818360008263ffffffff1611620000cb5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001235760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c2565b6000805463ffffffff60501b19166a010000000000000000000063ffffffff851602178155600280546001600160a01b0319166001600160a01b0384161790555b8263ffffffff168163ffffffff1610156200022957600254604051631d052ab160e31b815263ffffffff831660048201526001600160a01b039091169063e82955889060240160206040518083038186803b158015620001c357600080fd5b505afa158015620001d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001fe9190620003bf565b63ffffffff8216600090815260036020526040902055806200022081620004a2565b91505062000164565b506040805180820190915260025481906001600160a01b031663e8295588620002546001876200047a565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156200029257600080fd5b505afa158015620002a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002cd9190620003bf565b8152600060209182018190528052600180825282517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49559101517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a55600455505060058054600160201b600160c01b0319166401000000006001600160a01b039687160217905560f81b7fff00000000000000000000000000000000000000000000000000000000000000166080525050600b80546001600160a01b0319169590911694909417909355505050505060609590951b6001600160601b03191660a05250620004f8975050505050505050565b600060208284031215620003d257600080fd5b5051919050565b60008060008060008060c08789031215620003f357600080fd5b86516200040081620004df565b602088015190965063ffffffff811681146200041b57600080fd5b60408801519095506200042e81620004df565b60608801519094506200044181620004df565b60808801519093506200045481620004df565b60a088015190925060ff811681146200046c57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200049a576200049a620004c9565b039392505050565b600063ffffffff80831681811415620004bf57620004bf620004c9565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620004f557600080fd5b50565b60805160f81c60a05160601c614e0d620005cc60003960008181610be50152818161113301528181611207015281816115dd01528181611b4a01528181611c1a01528181611cb001528181611d4101528181611e2801528181612beb01528181612c8901528181612cd601528181612ea60152612f3e0152600081816106bb01528181610cde01528181610d48015281816112d00152818161145601528181611816015281816118a90152818161245301528181612fdf0152818161313e0152818161344801526135720152614e0d6000f3fe60806040526004361061038c5760003560e01c80638c832b13116101dc578063c2230d6e11610102578063e70ea87c116100a0578063f5ab0dd61161006f578063f5ab0dd614610b74578063fa73168714610ba3578063fc0c546a14610bd3578063fc7e9c6f14610c0757600080fd5b8063e70ea87c14610ac6578063ec73295914610af3578063ed33639f14610b27578063f178e47c14610b4757600080fd5b8063cd87a3b4116100dc578063cd87a3b414610a21578063dbc916b814610a36578063e4a3011614610a76578063e5285dcc14610a9657600080fd5b8063c2230d6e14610973578063c2b40ae4146109b1578063c80916d4146109fa57600080fd5b806399c0148c1161017a578063a0d192f511610149578063a0d192f514610905578063b2bc6e0f14610925578063ba70f75714610945578063bc063e1a1461072557600080fd5b806399c0148c146108a55780639fa12d0b146108c55780639ff80063146105ee578063a07b7e1d146108f257600080fd5b806390eeb02b116101b657806390eeb02b1461082c578063921563111461084f57806394eee0601461087f57806395c87d1a1461089257600080fd5b80638c832b13146107d65780638ea3099e146107f65780638f1c56bd1461081657600080fd5b80634ecf518b116102c157806371523c321161025f578063839df9451161022e578063839df9451461073d578063840b27911461076d5780638b7e8782146107835780638c0d34d8146107b457600080fd5b806371523c32146106a957806372c1ad03146106ef57806378abb49b1461070f5780637fe24ffe1461072557600080fd5b80635d2d766c1161029b5780635d2d766c1461062e578063616e0957146106615780636ad481f3146106815780636d9833e31461068957600080fd5b80634ecf518b146105ca5780634f401241146105ee5780635cc5e80b1461060e57600080fd5b806325db9a7d1161032e578063414a37ba11610308578063414a37ba1461051257806343e7119f14610546578063460b53e31461057e5780634c830cbd1461059e57600080fd5b806325db9a7d146104b45780632b7ac3f3146104c75780633408e470146104ff57600080fd5b806317cc915c1161036a57806317cc915c146104145780631e627617146104445780631f7f99f7146104665780632570b7b41461048657600080fd5b806308724aff146103915780630b27fb9a146103b357806311e4dcb9146103e4575b600080fd5b34801561039d57600080fd5b506103b16103ac3660046141f0565b610c2b565b005b3480156103bf57600080fd5b5060055463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103f057600080fd5b506104046103ff36600461419a565b610c43565b60405190151581526020016103db565b34801561042057600080fd5b5061040461042f366004614000565b600c6020526000908152604090205460ff1681565b34801561045057600080fd5b50610459610cd8565b6040516103db9190614511565b34801561047257600080fd5b506103b16104813660046143eb565b610ea9565b34801561049257600080fd5b506104a66104a136600461419a565b610f01565b6040519081526020016103db565b6103b16104c2366004614374565b610ffc565b3480156104d357600080fd5b50600b546104e7906001600160a01b031681565b6040516001600160a01b0390911681526020016103db565b34801561050b57600080fd5b50466104a6565b34801561051e57600080fd5b506104a67f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561055257600080fd5b506104a66105613660046143eb565b600960209081526000928352604080842090915290825290205481565b34801561058a57600080fd5b506103b1610599366004613e09565b61111c565b3480156105aa57600080fd5b506105b36111a2565b60405165ffffffffffff90911681526020016103db565b3480156105d657600080fd5b506000546103ca90600160501b900463ffffffff1681565b3480156105fa57600080fd5b506103b1610609366004613e09565b6111f0565b34801561061a57600080fd5b506103b1610629366004614277565b611240565b34801561063a57600080fd5b506103ca610649366004614000565b600a6020526000908152604090205463ffffffff1681565b34801561066d57600080fd5b5061040461067c366004613ede565b61125a565b6103b16115c6565b34801561069557600080fd5b506104046106a4366004614000565b61164d565b3480156106b557600080fd5b506106dd7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103db565b3480156106fb57600080fd5b506103b161070a366004613e35565b6116ce565b34801561071b57600080fd5b506104a660105481565b34801561073157600080fd5b506104a6600160f81b81565b34801561074957600080fd5b50610404610758366004614000565b600d6020526000908152604090205460ff1681565b34801561077957600080fd5b506104a6600f5481565b34801561078f57600080fd5b5061079b600160f81b81565b6040516001600160f01b031990911681526020016103db565b3480156107c057600080fd5b506107c9611810565b6040516103db9190614549565b3480156107e257600080fd5b506103b16107f13660046143eb565b611a56565b34801561080257600080fd5b506104a6610811366004614165565b611aa5565b34801561082257600080fd5b506104a6600e5481565b34801561083857600080fd5b506000546103ca9062010000900463ffffffff1681565b34801561085b57600080fd5b5061040461086a366004614000565b60009081526007602052604090205460ff1690565b6103b161088d366004613e09565b611b31565b6103b16108a0366004613dc8565b611ce1565b3480156108b157600080fd5b506103b16108c0366004614311565b611da7565b3480156108d157600080fd5b506108e56108e0366004613e6a565b611f91565b6040516103db91906144cb565b6103b1610900366004614032565b612059565b34801561091157600080fd5b506103b1610920366004613e35565b612629565b34801561093157600080fd5b506103b16109403660046141bc565b61276b565b34801561095157600080fd5b506000805462010000900463ffffffff168152600160205260409020546104a6565b34801561097f57600080fd5b5061099961098e366004614000565b65ffffffffffff1690565b6040516001600160401b0390911681526020016103db565b3480156109bd57600080fd5b506109e56109cc366004614000565b6001602081905260009182526040909120805491015482565b604080519283526020830191909152016103db565b348015610a0657600080fd5b506005546104e790600160201b90046001600160a01b031681565b348015610a2d57600080fd5b506103ca601e81565b348015610a4257600080fd5b50610a56610a51366004614000565b6127d0565b6040805194855260208501939093529183015260608201526080016103db565b348015610a8257600080fd5b506103b1610a9136600461419a565b61280a565b348015610aa257600080fd5b50610404610ab1366004614000565b6000908152600c602052604090205460ff1690565b348015610ad257600080fd5b506104a6610ae1366004614000565b60066020526000908152604090205481565b348015610aff57600080fd5b506104a67f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610b3357600080fd5b506002546104e7906001600160a01b031681565b348015610b5357600080fd5b506104a6610b62366004614000565b60036020526000908152604090205481565b348015610b8057600080fd5b50610b94610b8f366004613f12565b612933565b6040516103db939291906145ad565b348015610baf57600080fd5b50610404610bbe366004614000565b60076020526000908152604090205460ff1681565b348015610bdf57600080fd5b506104e77f000000000000000000000000000000000000000000000000000000000000000081565b348015610c1357600080fd5b506000546103ca90600160301b900463ffffffff1681565b610c348361276b565b610c3e8282611da7565b505050565b600081610c5257506000610cd2565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c9b57600192505050610cd2565b63ffffffff8116610caa5750601e5b80610cb481614cb7565b9150508163ffffffff168163ffffffff161415610c69576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610d1757610d17614dac565b604051908082528060200260200182016040528015610d40578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ea357610d7c816001614a30565b60085410610dcc5760088181548110610d9757610d97614d96565b906000526020600020906004020160010154828281518110610dbb57610dbb614d96565b602002602001018181525050610e91565b6002546000546001600160a01b039091169063e829558890610dfd90600190600160501b900463ffffffff16614c2f565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b158015610e3a57600080fd5b505afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e729190614019565b828281518110610e8457610e84614d96565b6020026020010181815250505b80610e9b81614cd7565b915050610d46565b50919050565b600554600160201b90046001600160a01b03163314610ee35760405162461bcd60e51b8152600401610eda906147c7565b60405180910390fd5b6005805463ffffffff191663ffffffff8316179055600f8290555050565b6000600160f81b8210610f445760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b6044820152606401610eda565b610f51600160f81b614d4d565b83138015610f625750600160f81b83125b610fa35760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610eda565b6000610faf8385614bd9565b90506000811215610ff257610fc381614d4d565b610fed907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001614c18565b610ff4565b805b949350505050565b61100683836129bc565b60008260200151131561104c57601054826020015111156110395760405162461bcd60e51b8152600401610eda9061477d565b611047818360200151611b31565b6110f6565b6000826020015112156110f65781516001600160a01b03166110b05760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610eda565b600f5482602001516110c190614d4d565b10156110df5760405162461bcd60e51b8152600401610eda90614673565b6110f681836000015184602001516108a090614d4d565b6060820151156111125761111282604001518360600151612bd3565b610c3e8383612d37565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889061116c903390869086906004016144a7565b600060405180830381600087803b15801561118657600080fd5b505af115801561119a573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b031981166022840152835180840360060181526026909301909352600092916111e581614c54565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b69061116c903390869086906004016144a7565b6112498461276b565b611254838383610ffc565b50505050565b600061127f8260008151811061127257611272614d96565b602002602001015161164d565b6112cb5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610eda565b6112f67f00000000000000000000000000000000000000000000000000000000000000006001614a70565b60ff168251146113485760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610eda565b600160005b60085481101561144f5760006008828154811061136c5761136c614d96565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506113e28160000151868460016113c59190614a30565b815181106113d5576113d5614d96565b6020026020010151610c43565b61142e5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610eda565b8261143881614cd7565b93505050808061144790614cd7565b91505061134d565b505b61147c7f00000000000000000000000000000000000000000000000000000000000000006001614a70565b60ff1681146115bd576002546000546001600160a01b039091169063e8295588906114b690600190600160501b900463ffffffff16614c2f565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156114f357600080fd5b505afa158015611507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152b9190614019565b83828151811061153d5761153d614d96565b6020026020010151146115ab5760405162461bcd60e51b815260206004820152603060248201527f6e6f6e2d6578697374656e742065646765206973206e6f742073657420746f2060448201526f1d1a1948191959985d5b1d081c9bdbdd60821b6064820152608401610eda565b806115b581614cd7565b915050611451565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890349061161990339060009081906004016144a7565b6000604051808303818588803b15801561163257600080fd5b505af1158015611646573d6000803e3d6000fd5b5050505050565b60008161165c57506000919050565b60005462010000900463ffffffff16805b63ffffffff8116600090815260016020526040902054841415611694575060019392505050565b63ffffffff81166116a35750601e5b806116ad81614cb7565b9150508163ffffffff168163ffffffff16141561166d575060009392505050565b600554600160201b90046001600160a01b031633146116ff5760405162461bcd60e51b8152600401610eda906147c7565b6001600160a01b03821661174b5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610eda565b60055463ffffffff8083169116106117955760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610eda565b6005546117aa9063ffffffff16610418614a48565b63ffffffff168163ffffffff16106117d45760405162461bcd60e51b8152600401610eda906146be565b600580546001600160c01b031916600160201b6001600160a01b03949094169390930263ffffffff19169290921763ffffffff91909116179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b0381111561184f5761184f614dac565b6040519080825280602002602001820160405280156118a157816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161186d5790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ea3576118dd816001614a30565b6008541061195b57600881815481106118f8576118f8614d96565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505082828151811061194b5761194b614d96565b6020026020010181905250611a44565b60408051608081019091526000808252600254905460208301916001600160a01b03169063e82955889061199e90600190600160501b900463ffffffff16614c2f565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156119db57600080fd5b505afa1580156119ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a139190614019565b8152602001600081526020016000801b815250828281518110611a3857611a38614d96565b60200260200101819052505b80611a4e81614cd7565b9150506118a7565b600554600160201b90046001600160a01b03163314611a875760405162461bcd60e51b8152600401610eda906147c7565b6005805463ffffffff191663ffffffff831617905560108290555050565b604051635bb9399560e01b815260048101839052602481018290526000906001600160a01b03851690635bb939959060440160206040518083038186803b158015611aef57600080fd5b505afa158015611b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b279190614019565b90505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b158015611b9457600080fd5b505afa158015611ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bcc9190614019565b90506001600160a01b038316611c7e57803414611be857600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b158015611c6057600080fd5b505af1158015611c74573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611c47565b60026004541415611d045760405162461bcd60e51b8152600401610eda90614746565b6002600455611d133082612e8e565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611d8557600080fd5b505af1158015611d99573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611dca5760405162461bcd60e51b8152600401610eda90614746565b6002600455611dd982826129bc565b600081602001511315611eb45760105481602001511115611e0c5760405162461bcd60e51b8152600401610eda9061477d565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91611e609133913091906004016144a7565b602060405180830381600087803b158015611e7a57600080fd5b505af1158015611e8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb29190613fde565b505b600081602001511215611f625780516001600160a01b0316611f185760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610eda565b600f548160200151611f2990614d4d565b1015611f475760405162461bcd60e51b8152600401610eda90614673565b611f6281600001518260200151611f5d90614d4d565b612e8e565b606081015115611f7e57611f7e81604001518260600151612bd3565b611f888282612d37565b50506001600455565b60606000826001600160401b03811115611fad57611fad614dac565b604051908082528060200260200182016040528015611fd6578160200160208202803683370190505b50905060005b8381101561205157612015858583818110611ff957611ff9614d96565b905060200201356000908152600c602052604090205460ff1690565b1561203f57600182828151811061202e5761202e614d96565b911515602092830291909101909101525b8061204981614cd7565b915050611fdc565b509392505050565b600554600160201b90046001600160a01b0316331461208a5760405162461bcd60e51b8152600401610eda906147c7565b600260045414156120ad5760405162461bcd60e51b8152600401610eda90614746565b6002600455600065ffffffffffff8216604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b1580156120ff57600080fd5b505afa158015612113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121379190613fde565b1561244c576001600160401b0381166000908152600660205260409020546008805463ffffffff86169290811061217057612170614d96565b906000526020600020906004020160020154106121cf5760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610eda565b600860066000836001600160401b0316815260200190815260200160002054815481106121fe576121fe614d96565b9060005260206000209060040201600201546201000061221e9190614a30565b8363ffffffff16106122825760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610eda565b600860066000836001600160401b0316815260200190815260200160002054815481106122b1576122b1614d96565b90600052602060002090600402016003015482146123115760405162461bcd60e51b815260206004820152601e60248201527f7372635265736f757263654944206d757374206265207468652073616d6500006044820152606401610eda565b6001600160401b0381166000908152600660205260409020546008805463ffffffff861691908390811061234757612347614d96565b906000526020600020906004020160020181905550846008828154811061237057612370614d96565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e916123b59163ffffffff90911690614a48565b6123bf9190614d2a565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff878116918217909255600984528285209085528352928190208b905580519384529189169083015281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a1505061261e565b60085460ff7f000000000000000000000000000000000000000000000000000000000000000016116124c05760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610eda565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c815263ffffffff8c1682870181815260608085018e81529786018755958a528351600486027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee583015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690910155878752600686528487208290556009865284872087805286528487208c9055845197885294870192909252918501899052939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b600554600160201b90046001600160a01b0316331461265a5760405162461bcd60e51b8152600401610eda906147c7565b6001600160a01b0382166126a65760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610eda565b60055463ffffffff8083169116106126f05760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610eda565b6005546127059063ffffffff16610418614a48565b63ffffffff168163ffffffff161061272f5760405162461bcd60e51b8152600401610eda906146be565b600b80546001600160a01b0319166001600160a01b0393909316929092179091556005805463ffffffff191663ffffffff909216919091179055565b80516001600160a01b031633146127c45760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610eda565b6127cd81612f65565b50565b600881815481106127e057600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff161580801561282a5750600054600160ff909116105b806128445750303b158015612844575060005460ff166001145b6128a75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610eda565b6000805460ff1916600117905580156128ca576000805461ff0019166101001790555b6005805463ffffffff191690556128e083600f55565b6128e982601055565b8015610c3e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b61293b613a2d565b612943613a4b565b61294b613a2d565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612a5a57612a02836040015182815181106129e5576129e5614d96565b60200260200101516000908152600c602052604090205460ff1690565b15612a485760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610eda565b80612a5281614cd7565b9150506129bf565b507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181604051602001612a8d91906147fe565b6040516020818303038152906040528051906020012060001c612ab09190614d16565b60a083015114612b025760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610eda565b612b1481602001518260600151610f01565b826080015114612b5e5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610eda565b612b6782612fb1565b60005b826040015151811015610c3e576001600c600085604001518481518110612b9357612b93614d96565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612bcb90614cd7565b915050612b6a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612c3557600080fd5b505afa158015612c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c6d9190614019565b90508115610c3e57818110612cb057610c3e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461326b565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015612d1a57600080fd5b505af1158015612d2e573d6000803e3d6000fd5b50505050505050565b60608201518051602090910151612d4e91906132bd565b506060820151516000547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9190612d9490600290600160301b900463ffffffff16614c2f565b8360c00151604051612da893929190614632565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9060016020020151600054612dfa90600190600160301b900463ffffffff16614c2f565b8360e00151604051612e0e93929190614632565b60405180910390a160005b826040015151811015610c3e577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce83604001518281518110612e5d57612e5d614d96565b6020026020010151604051612e7491815260200190565b60405180910390a180612e8681614cd7565b915050612e19565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612ef057600080fd5b505afa158015612f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f289190614019565b9050818110612cb057610c3e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461326b565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e508260200151604051612fa69190614660565b60405180910390a250565b806040015151600214156131105760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161301b9291906148a9565b60006040518083038186803b15801561303357600080fd5b505af4158015613047573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261306f9190810190614067565b9150915061307c8161125a565b6130b85760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610eda565b82516130c490836133eb565b610c3e5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610eda565b806040015151601014156132235760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161317a9291906148a9565b60006040518083038186803b15801561319257600080fd5b505af41580156131a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526131ce9190810190614067565b915091506131db8161125a565b6132175760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610eda565b82516130c49083613515565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610eda565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c3e90849061359d565b6000828152600d602052604081205460ff16156132ec5760405162461bcd60e51b8152600401610eda90614705565b6000828152600d602052604090205460ff161561331b5760405162461bcd60e51b8152600401610eda90614705565b6000613327848461366f565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b56133c7836001614a48565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906134029190613f7d565b9050600080600061341284612933565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613473908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906001906004016145d6565b60206040518083038186803b15801561348b57600080fd5b505afa15801561349f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c39190613fde565b94508461350b5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610eda565b5050505092915050565b6000808380602001905181019061352c9190613f7d565b9050600080600061353c84612933565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613473908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906000906004016145d6565b60006135f2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166139199092919063ffffffff16565b805190915015610c3e57808060200190518101906136109190613fde565b610c3e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610eda565b6000805463ffffffff600160301b820481169161369691600160501b909104166002614afd565b63ffffffff168163ffffffff16141561370a5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610eda565b6000613717600283614a95565b600254909150600090613734906001600160a01b03168787611aa5565b905060008060015b60005463ffffffff600160501b9091048116908216101561386357613762600286614d2a565b63ffffffff1661380f57600254604051631d052ab160e31b815263ffffffff831660048201528594506001600160a01b039091169063e82955889060240160206040518083038186803b1580156137b857600080fd5b505afa1580156137cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137f09190614019565b63ffffffff82166000908152600360205260409020859055915061382b565b63ffffffff811660009081526003602052604090205492508391505b600254613842906001600160a01b03168484611aa5565b935061384f600286614a95565b94508061385b81614cf2565b91505061373c565b5060008054601e906138829062010000900463ffffffff166001614a48565b61388c9190614d2a565b6000805465ffffffff000019166201000063ffffffff84160217905590506138b5866002614a48565b6000805469ffffffff0000000000001916600160301b63ffffffff9384168102919091178083556040805180820182529889529190048316602080890191825294909316825260019384905290209451855551930192909255509195945050505050565b6060611b278484600085856001600160a01b0385163b61397b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610eda565b600080866001600160a01b03168587604051613997919061448b565b60006040518083038185875af1925050503d80600081146139d4576040519150601f19603f3d011682016040523d82523d6000602084013e6139d9565b606091505b50915091506139e98282866139f4565b979650505050505050565b60608315613a03575081611b2a565b825115613a135782518084602001fd5b8160405162461bcd60e51b8152600401610eda9190614660565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613a62613a2d565b815260200190600190039081613a5a5790505090565b8035613a8381614dc2565b919050565b600082601f830112613a9957600080fd5b604051604081018181106001600160401b0382111715613abb57613abb614dac565b8060405250808385604086011115613ad257600080fd5b60005b6002811015613af4578135835260209283019290910190600101613ad5565b509195945050505050565b600082601f830112613b1057600080fd5b81356020613b25613b20836149e6565b6149b6565b80838252828201915082860187848660051b8901011115613b4557600080fd5b60005b85811015613b6457813584529284019290840190600101613b48565b5090979650505050505050565b600082601f830112613b8257600080fd5b8135613b90613b2082614a09565b818152846020838601011115613ba557600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613bd457600080fd5b604051604081016001600160401b038282108183111715613bf757613bf7614dac565b8160405282935084359150613c0b82614dc2565b90825260208401359080821115613c2157600080fd5b50613c2e85828601613b71565b6020830152505092915050565b60006101008284031215613c4e57600080fd5b613c5661496b565b9050613c6182613a78565b815260208201356020820152613c7960408301613a78565b60408201526060820135606082015260808201356080820152613c9e60a08301613a78565b60a082015260c08201356001600160401b0380821115613cbd57600080fd5b613cc985838601613b71565b60c084015260e0840135915080821115613ce257600080fd5b50613cef84828501613b71565b60e08301525092915050565b600060e08284031215613d0d57600080fd5b613d15614994565b905081356001600160401b0380821115613d2e57600080fd5b613d3a85838601613b71565b83526020840135915080821115613d5057600080fd5b613d5c85838601613b71565b60208401526040840135915080821115613d7557600080fd5b50613d8284828501613aff565b604083015250613d958360608401613a88565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114613a8357600080fd5b600080600060608486031215613ddd57600080fd5b8335613de881614dc2565b92506020840135613df881614dc2565b929592945050506040919091013590565b60008060408385031215613e1c57600080fd5b8235613e2781614dc2565b946020939093013593505050565b60008060408385031215613e4857600080fd5b8235613e5381614dc2565b9150613e6160208401613db4565b90509250929050565b60008060208385031215613e7d57600080fd5b82356001600160401b0380821115613e9457600080fd5b818501915085601f830112613ea857600080fd5b813581811115613eb757600080fd5b8660208260051b8501011115613ecc57600080fd5b60209290920196919550909350505050565b600060208284031215613ef057600080fd5b81356001600160401b03811115613f0657600080fd5b610ff484828501613aff565b6000610100808385031215613f2657600080fd5b83601f840112613f3557600080fd5b613f3d61496b565b8084868487011115613f4e57600080fd5b600093505b6008841015613f7357803583526001939093019260209283019201613f53565b5095945050505050565b6000610100808385031215613f9157600080fd5b83601f840112613fa057600080fd5b613fa861496b565b8084868487011115613fb957600080fd5b600093505b6008841015613f7357805183526001939093019260209283019201613fbe565b600060208284031215613ff057600080fd5b81518015158114610ff257600080fd5b60006020828403121561401257600080fd5b5035919050565b60006020828403121561402b57600080fd5b5051919050565b60008060006060848603121561404757600080fd5b8335925061405760208501613db4565b9150604084013590509250925092565b6000806040838503121561407a57600080fd5b82516001600160401b038082111561409157600080fd5b818501915085601f8301126140a557600080fd5b815160206140b5613b2083614a09565b82815288828487010111156140c957600080fd5b6140d883838301848801614c8b565b878201519096509350828411156140ee57600080fd5b838701935087601f85011261410257600080fd5b83519250614112613b20846149e6565b8381528181019250848201600585901b860183018a101561413257600080fd5b600095505b84861015614155578051845260019590950194928201928201614137565b5080955050505050509250929050565b60008060006060848603121561417a57600080fd5b833561418581614dc2565b95602085013595506040909401359392505050565b600080604083850312156141ad57600080fd5b50508035926020909101359150565b6000602082840312156141ce57600080fd5b81356001600160401b038111156141e457600080fd5b610ff484828501613bc2565b60008060006060848603121561420557600080fd5b83356001600160401b038082111561421c57600080fd5b61422887838801613bc2565b9450602086013591508082111561423e57600080fd5b61424a87838801613cfb565b9350604086013591508082111561426057600080fd5b5061426d86828701613c3b565b9150509250925092565b6000806000806080858703121561428d57600080fd5b84356001600160401b03808211156142a457600080fd5b6142b088838901613bc2565b955060208701359150808211156142c657600080fd5b6142d288838901613cfb565b945060408701359150808211156142e857600080fd5b506142f587828801613c3b565b925050606085013561430681614dc2565b939692955090935050565b6000806040838503121561432457600080fd5b82356001600160401b038082111561433b57600080fd5b61434786838701613cfb565b9350602085013591508082111561435d57600080fd5b5061436a85828601613c3b565b9150509250929050565b60008060006060848603121561438957600080fd5b83356001600160401b03808211156143a057600080fd5b6143ac87838801613cfb565b945060208601359150808211156143c257600080fd5b506143cf86828701613c3b565b92505060408401356143e081614dc2565b809150509250925092565b600080604083850312156143fe57600080fd5b82359150613e6160208401613db4565b8060005b60028110156112545761442684835161443c565b6040939093019260209190910190600101614412565b8060005b6002811015611254578151845260209384019390910190600101614440565b60008151808452614477816020860160208601614c8b565b601f01601f19169290920160200192915050565b6000825161449d818460208701614c8b565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156145055783511515835292840192918401916001016144e7565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156145055783518352928401929184019160010161452d565b602080825282518282018190526000919060409081850190868401855b828110156145a057815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101614566565b5091979650505050505050565b61010081016145bc828661443c565b6145c9604083018561440e565b610ff460c083018461443c565b60006101606145e5838a61443c565b6145f2604084018961440e565b6145ff60c084018861443c565b806101008401526146128184018761445f565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614657606083018461445f565b95945050505050565b602081526000611b2a602083018461445f565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b6020815260018060a01b038251166020820152602082015160408201526000604083015161483760608401826001600160a01b03169052565b5060608301516080830152608083015160a083015260a083015161486660c08401826001600160a01b03169052565b5060c08301516101008060e085015261488361012085018361445f565b915060e0850151601f19858403018286015261489f838261445f565b9695505050505050565b604081526000835160e060408401526148c661012084018261445f565b9050602080860151603f19808685030160608701526148e5848361445f565b6040890151878203909201608088015281518082529184019450600092508301905b808310156149275784518252938301936001929092019190830190614907565b506060880151935061493c60a087018561443c565b608088015160e087015260a088015161010087015260ff87168387015293506149629050565b50509392505050565b60405161010081016001600160401b038111828210171561498e5761498e614dac565b60405290565b60405160c081016001600160401b038111828210171561498e5761498e614dac565b604051601f8201601f191681016001600160401b03811182821017156149de576149de614dac565b604052919050565b60006001600160401b038211156149ff576149ff614dac565b5060051b60200190565b60006001600160401b03821115614a2257614a22614dac565b50601f01601f191660200190565b60008219821115614a4357614a43614d6a565b500190565b600063ffffffff808316818516808303821115614a6757614a67614d6a565b01949350505050565b600060ff821660ff84168060ff03821115614a8d57614a8d614d6a565b019392505050565b600063ffffffff80841680614aac57614aac614d80565b92169190910492915050565b600181815b80851115614af5578163ffffffff04821115614adb57614adb614d6a565b80851615614ae857918102915b93841c9390800290614abd565b509250929050565b600063ffffffff610ff4818516828516600082614b1c57506001610cd2565b81614b2957506000610cd2565b8160018114614b3f5760028114614b4957614b7a565b6001915050610cd2565b60ff841115614b5a57614b5a614d6a565b6001841b915063ffffffff821115614b7457614b74614d6a565b50610cd2565b5060208310610133831016604e8410600b8410161715614bb1575081810a63ffffffff811115614bac57614bac614d6a565b610cd2565b614bbb8383614ab8565b8063ffffffff04821115614bd157614bd1614d6a565b029392505050565b60008083128015600160ff1b850184121615614bf757614bf7614d6a565b6001600160ff1b0384018313811615614c1257614c12614d6a565b50500390565b600082821015614c2a57614c2a614d6a565b500390565b600063ffffffff83811690831681811015614c4c57614c4c614d6a565b039392505050565b805160208201516001600160d01b03198082169291906006831015614c835780818460060360031b1b83161693505b505050919050565b60005b83811015614ca6578181015183820152602001614c8e565b838111156112545750506000910152565b600063ffffffff821680614ccd57614ccd614d6a565b6000190192915050565b6000600019821415614ceb57614ceb614d6a565b5060010190565b600063ffffffff80831681811415614d0c57614d0c614d6a565b6001019392505050565b600082614d2557614d25614d80565b500690565b600063ffffffff80841680614d4157614d41614d80565b92169190910692915050565b6000600160ff1b821415614d6357614d63614d6a565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146127cd57600080fdfea2646970667358221220cb467d608f8a027596b15bfb805b8b307e5a810969a58180ea7a0bcd74d3ba5464736f6c63430008050033';

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VAnchorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$c855d983235a063579a323068f4c8734f9\\$__', 'g'),
      linkLibraryAddresses['contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(_verifier, _levels, _hasher, _handler, _token, _maxEdges, overrides || {}) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, _levels, _hasher, _handler, _token, _maxEdges, overrides || {});
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ['contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs']: string;
}
