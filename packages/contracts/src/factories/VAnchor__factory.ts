/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "srcResourceID",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "srcResourceID",
            type: "bytes32",
          },
        ],
        internalType: "struct LinkableAnchor.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_resourceId",
        type: "bytes32",
      },
    ],
    name: "parseChainIdFromResourceId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafindex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_leafIndex",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_srcResourceID",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000805462010000600160501b03191690556005805463ffffffff191690553480156200003057600080fd5b506040516200538a3803806200538a8339810160408190526200005391620003d7565b85858585848183858383838383818360008263ffffffff1611620000ca5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001225760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c1565b6000805463ffffffff60501b19166a010000000000000000000063ffffffff851602178155600280546001600160a01b0319166001600160a01b0384161790555b8263ffffffff168163ffffffff1610156200022857600254604051631d052ab160e31b815263ffffffff831660048201526001600160a01b039091169063e82955889060240160206040518083038186803b158015620001c257600080fd5b505afa158015620001d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001fd9190620003bd565b63ffffffff8216600090815260036020526040902055806200021f81620004a0565b91505062000163565b506040805180820190915260025481906001600160a01b031663e82955886200025360018762000478565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156200029157600080fd5b505afa158015620002a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002cc9190620003bd565b8152600060209182018190528052600180825282517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49559101517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a55600455505060058054600160201b600160c01b0319166401000000006001600160a01b039687160217905560f81b7fff00000000000000000000000000000000000000000000000000000000000000166080525050601080546001600160a01b0319169a90911699909917909855505050505060609490941b6001600160601b03191660a05250620004f69650505050505050565b600060208284031215620003d057600080fd5b5051919050565b60008060008060008060c08789031215620003f157600080fd5b8651620003fe81620004dd565b602088015190965063ffffffff811681146200041957600080fd5b60408801519095506200042c81620004dd565b60608801519094506200043f81620004dd565b60808801519093506200045281620004dd565b60a088015190925060ff811681146200046a57600080fd5b809150509295509295509295565b600063ffffffff83811690831681811015620004985762000498620004c7565b039392505050565b600063ffffffff80831681811415620004bd57620004bd620004c7565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620004f357600080fd5b50565b60805160f81c60a05160601c614dc0620005ca60003960008181610be50152818161113301528181611207015281816115dd01528181611b4a01528181611c1a01528181611cb001528181611d4101528181611e2801528181612beb01528181612c8901528181612cd601528181612ea60152612f3e0152600081816106bb01528181610cde01528181610d48015281816112d00152818161145601528181611816015281816118a90152818161245301528181612fdf015281816130c30152818161316101526132450152614dc06000f3fe60806040526004361061038c5760003560e01c80638c832b13116101dc578063c2230d6e11610102578063e70ea87c116100a0578063f5ab0dd61161006f578063f5ab0dd614610b74578063fa73168714610ba3578063fc0c546a14610bd3578063fc7e9c6f14610c0757600080fd5b8063e70ea87c14610ac6578063ec73295914610af3578063ed33639f14610b27578063f178e47c14610b4757600080fd5b8063cd87a3b4116100dc578063cd87a3b414610a21578063dbc916b814610a36578063e4a3011614610a76578063e5285dcc14610a9657600080fd5b8063c2230d6e14610973578063c2b40ae4146109b1578063c80916d4146109fa57600080fd5b806399c0148c1161017a578063a0d192f511610149578063a0d192f514610905578063b2bc6e0f14610925578063ba70f75714610945578063bc063e1a1461072557600080fd5b806399c0148c146108a55780639fa12d0b146108c55780639ff80063146105ee578063a07b7e1d146108f257600080fd5b806390eeb02b116101b657806390eeb02b1461082c578063921563111461084f57806394eee0601461087f57806395c87d1a1461089257600080fd5b80638c832b13146107d65780638ea3099e146107f65780638f1c56bd1461081657600080fd5b80634ecf518b116102c157806371523c321161025f578063839df9451161022e578063839df9451461073d578063840b27911461076d5780638b7e8782146107835780638c0d34d8146107b457600080fd5b806371523c32146106a957806372c1ad03146106ef57806378abb49b1461070f5780637fe24ffe1461072557600080fd5b80635d2d766c1161029b5780635d2d766c1461062e578063616e0957146106615780636ad481f3146106815780636d9833e31461068957600080fd5b80634ecf518b146105ca5780634f401241146105ee5780635cc5e80b1461060e57600080fd5b806325db9a7d1161032e578063414a37ba11610308578063414a37ba1461051257806343e7119f14610546578063460b53e31461057e5780634c830cbd1461059e57600080fd5b806325db9a7d146104b45780632b7ac3f3146104c75780633408e470146104ff57600080fd5b806317cc915c1161036a57806317cc915c146104145780631e627617146104445780631f7f99f7146104665780632570b7b41461048657600080fd5b806308724aff146103915780630b27fb9a146103b357806311e4dcb9146103e4575b600080fd5b34801561039d57600080fd5b506103b16103ac3660046141a3565b610c2b565b005b3480156103bf57600080fd5b5060055463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103f057600080fd5b506104046103ff36600461414d565b610c43565b60405190151581526020016103db565b34801561042057600080fd5b5061040461042f366004613fb3565b600b6020526000908152604090205460ff1681565b34801561045057600080fd5b50610459610cd8565b6040516103db91906144c4565b34801561047257600080fd5b506103b161048136600461439e565b610ea9565b34801561049257600080fd5b506104a66104a136600461414d565b610f01565b6040519081526020016103db565b6103b16104c2366004614327565b610ffc565b3480156104d357600080fd5b506010546104e7906001600160a01b031681565b6040516001600160a01b0390911681526020016103db565b34801561050b57600080fd5b50466104a6565b34801561051e57600080fd5b506104a67f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561055257600080fd5b506104a661056136600461439e565b600960209081526000928352604080842090915290825290205481565b34801561058a57600080fd5b506103b1610599366004613dbc565b61111c565b3480156105aa57600080fd5b506105b36111a2565b60405165ffffffffffff90911681526020016103db565b3480156105d657600080fd5b506000546103ca90600160501b900463ffffffff1681565b3480156105fa57600080fd5b506103b1610609366004613dbc565b6111f0565b34801561061a57600080fd5b506103b161062936600461422a565b611240565b34801561063a57600080fd5b506103ca610649366004613fb3565b600a6020526000908152604090205463ffffffff1681565b34801561066d57600080fd5b5061040461067c366004613e91565b61125a565b6103b16115c6565b34801561069557600080fd5b506104046106a4366004613fb3565b61164d565b3480156106b557600080fd5b506106dd7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103db565b3480156106fb57600080fd5b506103b161070a366004613de8565b6116ce565b34801561071b57600080fd5b506104a6600f5481565b34801561073157600080fd5b506104a6600160f81b81565b34801561074957600080fd5b50610404610758366004613fb3565b600c6020526000908152604090205460ff1681565b34801561077957600080fd5b506104a6600e5481565b34801561078f57600080fd5b5061079b600160f81b81565b6040516001600160f01b031990911681526020016103db565b3480156107c057600080fd5b506107c9611810565b6040516103db91906144fc565b3480156107e257600080fd5b506103b16107f136600461439e565b611a56565b34801561080257600080fd5b506104a6610811366004614118565b611aa5565b34801561082257600080fd5b506104a6600d5481565b34801561083857600080fd5b506000546103ca9062010000900463ffffffff1681565b34801561085b57600080fd5b5061040461086a366004613fb3565b60009081526007602052604090205460ff1690565b6103b161088d366004613dbc565b611b31565b6103b16108a0366004613d7b565b611ce1565b3480156108b157600080fd5b506103b16108c03660046142c4565b611da7565b3480156108d157600080fd5b506108e56108e0366004613e1d565b611f91565b6040516103db919061447e565b6103b1610900366004613fe5565b612059565b34801561091157600080fd5b506103b1610920366004613de8565b612629565b34801561093157600080fd5b506103b161094036600461416f565b61276b565b34801561095157600080fd5b506000805462010000900463ffffffff168152600160205260409020546104a6565b34801561097f57600080fd5b5061099961098e366004613fb3565b65ffffffffffff1690565b6040516001600160401b0390911681526020016103db565b3480156109bd57600080fd5b506109e56109cc366004613fb3565b6001602081905260009182526040909120805491015482565b604080519283526020830191909152016103db565b348015610a0657600080fd5b506005546104e790600160201b90046001600160a01b031681565b348015610a2d57600080fd5b506103ca601e81565b348015610a4257600080fd5b50610a56610a51366004613fb3565b6127d0565b6040805194855260208501939093529183015260608201526080016103db565b348015610a8257600080fd5b506103b1610a9136600461414d565b61280a565b348015610aa257600080fd5b50610404610ab1366004613fb3565b6000908152600b602052604090205460ff1690565b348015610ad257600080fd5b506104a6610ae1366004613fb3565b60066020526000908152604090205481565b348015610aff57600080fd5b506104a67f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610b3357600080fd5b506002546104e7906001600160a01b031681565b348015610b5357600080fd5b506104a6610b62366004613fb3565b60036020526000908152604090205481565b348015610b8057600080fd5b50610b94610b8f366004613ec5565b612933565b6040516103db93929190614560565b348015610baf57600080fd5b50610404610bbe366004613fb3565b60076020526000908152604090205460ff1681565b348015610bdf57600080fd5b506104e77f000000000000000000000000000000000000000000000000000000000000000081565b348015610c1357600080fd5b506000546103ca90600160301b900463ffffffff1681565b610c348361276b565b610c3e8282611da7565b505050565b600081610c5257506000610cd2565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c9b57600192505050610cd2565b63ffffffff8116610caa5750601e5b80610cb481614c6a565b9150508163ffffffff168163ffffffff161415610c69576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610d1757610d17614d5f565b604051908082528060200260200182016040528015610d40578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ea357610d7c8160016149e3565b60085410610dcc5760088181548110610d9757610d97614d49565b906000526020600020906004020160010154828281518110610dbb57610dbb614d49565b602002602001018181525050610e91565b6002546000546001600160a01b039091169063e829558890610dfd90600190600160501b900463ffffffff16614be2565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b158015610e3a57600080fd5b505afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e729190613fcc565b828281518110610e8457610e84614d49565b6020026020010181815250505b80610e9b81614c8a565b915050610d46565b50919050565b600554600160201b90046001600160a01b03163314610ee35760405162461bcd60e51b8152600401610eda9061477a565b60405180910390fd5b6005805463ffffffff191663ffffffff8316179055600e8290555050565b6000600160f81b8210610f445760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b6044820152606401610eda565b610f51600160f81b614d00565b83138015610f625750600160f81b83125b610fa35760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610eda565b6000610faf8385614b8c565b90506000811215610ff257610fc381614d00565b610fed907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001614bcb565b610ff4565b805b949350505050565b61100683836129bc565b60008260200151131561104c57600f54826020015111156110395760405162461bcd60e51b8152600401610eda90614730565b611047818360200151611b31565b6110f6565b6000826020015112156110f65781516001600160a01b03166110b05760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610eda565b600e5482602001516110c190614d00565b10156110df5760405162461bcd60e51b8152600401610eda90614626565b6110f681836000015184602001516108a090614d00565b6060820151156111125761111282604001518360600151612bd3565b610c3e8383612d37565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889061116c9033908690869060040161445a565b600060405180830381600087803b15801561118657600080fd5b505af115801561119a573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b031981166022840152835180840360060181526026909301909352600092916111e581614c07565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b69061116c9033908690869060040161445a565b6112498461276b565b611254838383610ffc565b50505050565b600061127f8260008151811061127257611272614d49565b602002602001015161164d565b6112cb5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610eda565b6112f67f00000000000000000000000000000000000000000000000000000000000000006001614a23565b60ff168251146113485760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610eda565b600160005b60085481101561144f5760006008828154811061136c5761136c614d49565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506113e28160000151868460016113c591906149e3565b815181106113d5576113d5614d49565b6020026020010151610c43565b61142e5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610eda565b8261143881614c8a565b93505050808061144790614c8a565b91505061134d565b505b61147c7f00000000000000000000000000000000000000000000000000000000000000006001614a23565b60ff1681146115bd576002546000546001600160a01b039091169063e8295588906114b690600190600160501b900463ffffffff16614be2565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156114f357600080fd5b505afa158015611507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152b9190613fcc565b83828151811061153d5761153d614d49565b6020026020010151146115ab5760405162461bcd60e51b815260206004820152603060248201527f6e6f6e2d6578697374656e742065646765206973206e6f742073657420746f2060448201526f1d1a1948191959985d5b1d081c9bdbdd60821b6064820152608401610eda565b806115b581614c8a565b915050611451565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca69388903490611619903390600090819060040161445a565b6000604051808303818588803b15801561163257600080fd5b505af1158015611646573d6000803e3d6000fd5b5050505050565b60008161165c57506000919050565b60005462010000900463ffffffff16805b63ffffffff8116600090815260016020526040902054841415611694575060019392505050565b63ffffffff81166116a35750601e5b806116ad81614c6a565b9150508163ffffffff168163ffffffff16141561166d575060009392505050565b600554600160201b90046001600160a01b031633146116ff5760405162461bcd60e51b8152600401610eda9061477a565b6001600160a01b03821661174b5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610eda565b60055463ffffffff8083169116106117955760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610eda565b6005546117aa9063ffffffff166104186149fb565b63ffffffff168163ffffffff16106117d45760405162461bcd60e51b8152600401610eda90614671565b600580546001600160c01b031916600160201b6001600160a01b03949094169390930263ffffffff19169290921763ffffffff91909116179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b0381111561184f5761184f614d5f565b6040519080825280602002602001820160405280156118a157816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161186d5790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ea3576118dd8160016149e3565b6008541061195b57600881815481106118f8576118f8614d49565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505082828151811061194b5761194b614d49565b6020026020010181905250611a44565b60408051608081019091526000808252600254905460208301916001600160a01b03169063e82955889061199e90600190600160501b900463ffffffff16614be2565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156119db57600080fd5b505afa1580156119ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a139190613fcc565b8152602001600081526020016000801b815250828281518110611a3857611a38614d49565b60200260200101819052505b80611a4e81614c8a565b9150506118a7565b600554600160201b90046001600160a01b03163314611a875760405162461bcd60e51b8152600401610eda9061477a565b6005805463ffffffff191663ffffffff8316179055600f8290555050565b604051635bb9399560e01b815260048101839052602481018290526000906001600160a01b03851690635bb939959060440160206040518083038186803b158015611aef57600080fd5b505afa158015611b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b279190613fcc565b90505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b158015611b9457600080fd5b505afa158015611ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bcc9190613fcc565b90506001600160a01b038316611c7e57803414611be857600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b158015611c6057600080fd5b505af1158015611c74573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611c47565b60026004541415611d045760405162461bcd60e51b8152600401610eda906146f9565b6002600455611d133082612e8e565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611d8557600080fd5b505af1158015611d99573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611dca5760405162461bcd60e51b8152600401610eda906146f9565b6002600455611dd982826129bc565b600081602001511315611eb457600f5481602001511115611e0c5760405162461bcd60e51b8152600401610eda90614730565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91611e6091339130919060040161445a565b602060405180830381600087803b158015611e7a57600080fd5b505af1158015611e8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb29190613f91565b505b600081602001511215611f625780516001600160a01b0316611f185760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610eda565b600e548160200151611f2990614d00565b1015611f475760405162461bcd60e51b8152600401610eda90614626565b611f6281600001518260200151611f5d90614d00565b612e8e565b606081015115611f7e57611f7e81604001518260600151612bd3565b611f888282612d37565b50506001600455565b60606000826001600160401b03811115611fad57611fad614d5f565b604051908082528060200260200182016040528015611fd6578160200160208202803683370190505b50905060005b8381101561205157612015858583818110611ff957611ff9614d49565b905060200201356000908152600b602052604090205460ff1690565b1561203f57600182828151811061202e5761202e614d49565b911515602092830291909101909101525b8061204981614c8a565b915050611fdc565b509392505050565b600554600160201b90046001600160a01b0316331461208a5760405162461bcd60e51b8152600401610eda9061477a565b600260045414156120ad5760405162461bcd60e51b8152600401610eda906146f9565b6002600455600065ffffffffffff8216604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b1580156120ff57600080fd5b505afa158015612113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121379190613f91565b1561244c576001600160401b0381166000908152600660205260409020546008805463ffffffff86169290811061217057612170614d49565b906000526020600020906004020160020154106121cf5760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610eda565b600860066000836001600160401b0316815260200190815260200160002054815481106121fe576121fe614d49565b9060005260206000209060040201600201546201000061221e91906149e3565b8363ffffffff16106122825760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610eda565b600860066000836001600160401b0316815260200190815260200160002054815481106122b1576122b1614d49565b90600052602060002090600402016003015482146123115760405162461bcd60e51b815260206004820152601e60248201527f7372635265736f757263654944206d757374206265207468652073616d6500006044820152606401610eda565b6001600160401b0381166000908152600660205260409020546008805463ffffffff861691908390811061234757612347614d49565b906000526020600020906004020160020181905550846008828154811061237057612370614d49565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e916123b59163ffffffff909116906149fb565b6123bf9190614cdd565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff878116918217909255600984528285209085528352928190208b905580519384529189169083015281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a1505061261e565b60085460ff7f000000000000000000000000000000000000000000000000000000000000000016116124c05760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610eda565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c815263ffffffff8c1682870181815260608085018e81529786018755958a528351600486027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee583015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690910155878752600686528487208290556009865284872087805286528487208c9055845197885294870192909252918501899052939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b600554600160201b90046001600160a01b0316331461265a5760405162461bcd60e51b8152600401610eda9061477a565b6001600160a01b0382166126a65760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610eda565b60055463ffffffff8083169116106126f05760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610eda565b6005546127059063ffffffff166104186149fb565b63ffffffff168163ffffffff161061272f5760405162461bcd60e51b8152600401610eda90614671565b601080546001600160a01b0319166001600160a01b0393909316929092179091556005805463ffffffff191663ffffffff909216919091179055565b80516001600160a01b031633146127c45760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610eda565b6127cd81612f65565b50565b600881815481106127e057600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff161580801561282a5750600054600160ff909116105b806128445750303b158015612844575060005460ff166001145b6128a75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610eda565b6000805460ff1916600117905580156128ca576000805461ff0019166101001790555b6005805463ffffffff191690556128e083600e55565b6128e982600f55565b8015610c3e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b61293b6139e0565b6129436139fe565b61294b6139e0565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612a5a57612a02836040015182815181106129e5576129e5614d49565b60200260200101516000908152600b602052604090205460ff1690565b15612a485760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610eda565b80612a5281614c8a565b9150506129bf565b507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181604051602001612a8d91906147b1565b6040516020818303038152906040528051906020012060001c612ab09190614cc9565b60a083015114612b025760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610eda565b612b1481602001518260600151610f01565b826080015114612b5e5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610eda565b612b6782612fb1565b60005b826040015151811015610c3e576001600b600085604001518481518110612b9357612b93614d49565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612bcb90614c8a565b915050612b6a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612c3557600080fd5b505afa158015612c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c6d9190613fcc565b90508115610c3e57818110612cb057610c3e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846132b1565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015612d1a57600080fd5b505af1158015612d2e573d6000803e3d6000fd5b50505050505050565b60608201518051602090910151612d4e9190613303565b506060820151516000547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9190612d9490600290600160301b900463ffffffff16614be2565b8360c00151604051612da8939291906145e5565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9060016020020151600054612dfa90600190600160301b900463ffffffff16614be2565b8360e00151604051612e0e939291906145e5565b60405180910390a160005b826040015151811015610c3e577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce83604001518281518110612e5d57612e5d614d49565b6020026020010151604051612e7491815260200190565b60405180910390a180612e8681614c8a565b915050612e19565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612ef057600080fd5b505afa158015612f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f289190613fcc565b9050818110612cb057610c3e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846132b1565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e508260200151604051612fa69190614613565b60405180910390a250565b806040015151600214156131335760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161301b92919061485c565b60006040518083038186803b15801561303357600080fd5b505af4158015613047573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261306f919081019061401a565b9150915061307c8161125a565b6130b85760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610eda565b82516130e7908360017f0000000000000000000000000000000000000000000000000000000000000000613431565b610c3e5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610eda565b806040015151601014156132695760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161319d92919061485c565b60006040518083038186803b1580156131b557600080fd5b505af41580156131c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526131f1919081019061401a565b915091506131fe8161125a565b61323a5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610eda565b82516130e7908360007f0000000000000000000000000000000000000000000000000000000000000000613431565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610eda565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c3e908490613550565b6000828152600c602052604081205460ff16156133325760405162461bcd60e51b8152600401610eda906146b8565b6000828152600c602052604090205460ff16156133615760405162461bcd60e51b8152600401610eda906146b8565b600061336d8484613622565b6000858152600c602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b561340d8360016149fb565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080858060200190518101906134489190613f30565b9050600080600061345884612933565b9250925092506000601060009054906101000a90046001600160a01b03166001600160a01b0316638041ca538585858d8c8e6040518763ffffffff1660e01b81526004016134ab96959493929190614589565b60206040518083038186803b1580156134c357600080fd5b505afa1580156134d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134fb9190613f91565b9050806135435760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610eda565b9998505050505050505050565b60006135a5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166138cc9092919063ffffffff16565b805190915015610c3e57808060200190518101906135c39190613f91565b610c3e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610eda565b6000805463ffffffff600160301b820481169161364991600160501b909104166002614ab0565b63ffffffff168163ffffffff1614156136bd5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610eda565b60006136ca600283614a48565b6002549091506000906136e7906001600160a01b03168787611aa5565b905060008060015b60005463ffffffff600160501b9091048116908216101561381657613715600286614cdd565b63ffffffff166137c257600254604051631d052ab160e31b815263ffffffff831660048201528594506001600160a01b039091169063e82955889060240160206040518083038186803b15801561376b57600080fd5b505afa15801561377f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137a39190613fcc565b63ffffffff8216600090815260036020526040902085905591506137de565b63ffffffff811660009081526003602052604090205492508391505b6002546137f5906001600160a01b03168484611aa5565b9350613802600286614a48565b94508061380e81614ca5565b9150506136ef565b5060008054601e906138359062010000900463ffffffff1660016149fb565b61383f9190614cdd565b6000805465ffffffff000019166201000063ffffffff84160217905590506138688660026149fb565b6000805469ffffffff0000000000001916600160301b63ffffffff9384168102919091178083556040805180820182529889529190048316602080890191825294909316825260019384905290209451855551930192909255509195945050505050565b6060611b278484600085856001600160a01b0385163b61392e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610eda565b600080866001600160a01b0316858760405161394a919061443e565b60006040518083038185875af1925050503d8060008114613987576040519150601f19603f3d011682016040523d82523d6000602084013e61398c565b606091505b509150915061399c8282866139a7565b979650505050505050565b606083156139b6575081611b2a565b8251156139c65782518084602001fd5b8160405162461bcd60e51b8152600401610eda9190614613565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613a156139e0565b815260200190600190039081613a0d5790505090565b8035613a3681614d75565b919050565b600082601f830112613a4c57600080fd5b604051604081018181106001600160401b0382111715613a6e57613a6e614d5f565b8060405250808385604086011115613a8557600080fd5b60005b6002811015613aa7578135835260209283019290910190600101613a88565b509195945050505050565b600082601f830112613ac357600080fd5b81356020613ad8613ad383614999565b614969565b80838252828201915082860187848660051b8901011115613af857600080fd5b60005b85811015613b1757813584529284019290840190600101613afb565b5090979650505050505050565b600082601f830112613b3557600080fd5b8135613b43613ad3826149bc565b818152846020838601011115613b5857600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613b8757600080fd5b604051604081016001600160401b038282108183111715613baa57613baa614d5f565b8160405282935084359150613bbe82614d75565b90825260208401359080821115613bd457600080fd5b50613be185828601613b24565b6020830152505092915050565b60006101008284031215613c0157600080fd5b613c0961491e565b9050613c1482613a2b565b815260208201356020820152613c2c60408301613a2b565b60408201526060820135606082015260808201356080820152613c5160a08301613a2b565b60a082015260c08201356001600160401b0380821115613c7057600080fd5b613c7c85838601613b24565b60c084015260e0840135915080821115613c9557600080fd5b50613ca284828501613b24565b60e08301525092915050565b600060e08284031215613cc057600080fd5b613cc8614947565b905081356001600160401b0380821115613ce157600080fd5b613ced85838601613b24565b83526020840135915080821115613d0357600080fd5b613d0f85838601613b24565b60208401526040840135915080821115613d2857600080fd5b50613d3584828501613ab2565b604083015250613d488360608401613a3b565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114613a3657600080fd5b600080600060608486031215613d9057600080fd5b8335613d9b81614d75565b92506020840135613dab81614d75565b929592945050506040919091013590565b60008060408385031215613dcf57600080fd5b8235613dda81614d75565b946020939093013593505050565b60008060408385031215613dfb57600080fd5b8235613e0681614d75565b9150613e1460208401613d67565b90509250929050565b60008060208385031215613e3057600080fd5b82356001600160401b0380821115613e4757600080fd5b818501915085601f830112613e5b57600080fd5b813581811115613e6a57600080fd5b8660208260051b8501011115613e7f57600080fd5b60209290920196919550909350505050565b600060208284031215613ea357600080fd5b81356001600160401b03811115613eb957600080fd5b610ff484828501613ab2565b6000610100808385031215613ed957600080fd5b83601f840112613ee857600080fd5b613ef061491e565b8084868487011115613f0157600080fd5b600093505b6008841015613f2657803583526001939093019260209283019201613f06565b5095945050505050565b6000610100808385031215613f4457600080fd5b83601f840112613f5357600080fd5b613f5b61491e565b8084868487011115613f6c57600080fd5b600093505b6008841015613f2657805183526001939093019260209283019201613f71565b600060208284031215613fa357600080fd5b81518015158114610ff257600080fd5b600060208284031215613fc557600080fd5b5035919050565b600060208284031215613fde57600080fd5b5051919050565b600080600060608486031215613ffa57600080fd5b8335925061400a60208501613d67565b9150604084013590509250925092565b6000806040838503121561402d57600080fd5b82516001600160401b038082111561404457600080fd5b818501915085601f83011261405857600080fd5b81516020614068613ad3836149bc565b828152888284870101111561407c57600080fd5b61408b83838301848801614c3e565b878201519096509350828411156140a157600080fd5b838701935087601f8501126140b557600080fd5b835192506140c5613ad384614999565b8381528181019250848201600585901b860183018a10156140e557600080fd5b600095505b848610156141085780518452600195909501949282019282016140ea565b5080955050505050509250929050565b60008060006060848603121561412d57600080fd5b833561413881614d75565b95602085013595506040909401359392505050565b6000806040838503121561416057600080fd5b50508035926020909101359150565b60006020828403121561418157600080fd5b81356001600160401b0381111561419757600080fd5b610ff484828501613b75565b6000806000606084860312156141b857600080fd5b83356001600160401b03808211156141cf57600080fd5b6141db87838801613b75565b945060208601359150808211156141f157600080fd5b6141fd87838801613cae565b9350604086013591508082111561421357600080fd5b5061422086828701613bee565b9150509250925092565b6000806000806080858703121561424057600080fd5b84356001600160401b038082111561425757600080fd5b61426388838901613b75565b9550602087013591508082111561427957600080fd5b61428588838901613cae565b9450604087013591508082111561429b57600080fd5b506142a887828801613bee565b92505060608501356142b981614d75565b939692955090935050565b600080604083850312156142d757600080fd5b82356001600160401b03808211156142ee57600080fd5b6142fa86838701613cae565b9350602085013591508082111561431057600080fd5b5061431d85828601613bee565b9150509250929050565b60008060006060848603121561433c57600080fd5b83356001600160401b038082111561435357600080fd5b61435f87838801613cae565b9450602086013591508082111561437557600080fd5b5061438286828701613bee565b925050604084013561439381614d75565b809150509250925092565b600080604083850312156143b157600080fd5b82359150613e1460208401613d67565b8060005b6002811015611254576143d98483516143ef565b60409390930192602091909101906001016143c5565b8060005b60028110156112545781518452602093840193909101906001016143f3565b6000815180845261442a816020860160208601614c3e565b601f01601f19169290920160200192915050565b60008251614450818460208701614c3e565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156144b857835115158352928401929184019160010161449a565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156144b8578351835292840192918401916001016144e0565b602080825282518282018190526000919060409081850190868401855b8281101561455357815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101614519565b5091979650505050505050565b610100810161456f82866143ef565b61457c60408301856143c1565b610ff460c08301846143ef565b6000610160614598838a6143ef565b6145a560408401896143c1565b6145b260c08401886143ef565b806101008401526145c581840187614412565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff8316602082015260606040820152600061460a6060830184614412565b95945050505050565b602081526000611b2a6020830184614412565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b6020815260018060a01b03825116602082015260208201516040820152600060408301516147ea60608401826001600160a01b03169052565b5060608301516080830152608083015160a083015260a083015161481960c08401826001600160a01b03169052565b5060c08301516101008060e0850152614836610120850183614412565b915060e0850151601f1985840301828601526148528382614412565b9695505050505050565b604081526000835160e06040840152614879610120840182614412565b9050602080860151603f19808685030160608701526148988483614412565b6040890151878203909201608088015281518082529184019450600092508301905b808310156148da57845182529383019360019290920191908301906148ba565b50606088015193506148ef60a08701856143ef565b608088015160e087015260a088015161010087015260ff87168387015293506149159050565b50509392505050565b60405161010081016001600160401b038111828210171561494157614941614d5f565b60405290565b60405160c081016001600160401b038111828210171561494157614941614d5f565b604051601f8201601f191681016001600160401b038111828210171561499157614991614d5f565b604052919050565b60006001600160401b038211156149b2576149b2614d5f565b5060051b60200190565b60006001600160401b038211156149d5576149d5614d5f565b50601f01601f191660200190565b600082198211156149f6576149f6614d1d565b500190565b600063ffffffff808316818516808303821115614a1a57614a1a614d1d565b01949350505050565b600060ff821660ff84168060ff03821115614a4057614a40614d1d565b019392505050565b600063ffffffff80841680614a5f57614a5f614d33565b92169190910492915050565b600181815b80851115614aa8578163ffffffff04821115614a8e57614a8e614d1d565b80851615614a9b57918102915b93841c9390800290614a70565b509250929050565b600063ffffffff610ff4818516828516600082614acf57506001610cd2565b81614adc57506000610cd2565b8160018114614af25760028114614afc57614b2d565b6001915050610cd2565b60ff841115614b0d57614b0d614d1d565b6001841b915063ffffffff821115614b2757614b27614d1d565b50610cd2565b5060208310610133831016604e8410600b8410161715614b64575081810a63ffffffff811115614b5f57614b5f614d1d565b610cd2565b614b6e8383614a6b565b8063ffffffff04821115614b8457614b84614d1d565b029392505050565b60008083128015600160ff1b850184121615614baa57614baa614d1d565b6001600160ff1b0384018313811615614bc557614bc5614d1d565b50500390565b600082821015614bdd57614bdd614d1d565b500390565b600063ffffffff83811690831681811015614bff57614bff614d1d565b039392505050565b805160208201516001600160d01b03198082169291906006831015614c365780818460060360031b1b83161693505b505050919050565b60005b83811015614c59578181015183820152602001614c41565b838111156112545750506000910152565b600063ffffffff821680614c8057614c80614d1d565b6000190192915050565b6000600019821415614c9e57614c9e614d1d565b5060010190565b600063ffffffff80831681811415614cbf57614cbf614d1d565b6001019392505050565b600082614cd857614cd8614d33565b500690565b600063ffffffff80841680614cf457614cf4614d33565b92169190910692915050565b6000600160ff1b821415614d1657614d16614d1d565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146127cd57600080fdfea26469706673582212204b17e9ab4e3047b5dd3f6c261d91b24927ad6cd2faf9462e6ec45abfd502f7c364736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
