/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "address",
            name: "handler",
            type: "address",
          },
        ],
        internalType: "struct VAnchorBase.PermissionedAccounts",
        name: "_permissions",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "addEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct VAnchorBase.Edge[]",
        name: "edges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissions",
    outputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "handler",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "setBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b03191690553480156200002257600080fd5b50604051620057fd380380620057fd833981016040819052620000459162000884565b85858584848484848484838360008263ffffffff1611620000835760405162461bcd60e51b81526004016200007a90620009c2565b60405180910390fd5b60208263ffffffff1610620000ac5760405162461bcd60e51b81526004016200007a906200098b565b6001600160e01b031960e083901b1660a0526001600160601b0319606082901b1660805260005b8263ffffffff168163ffffffff1610156200012457620000f963ffffffff821662000216565b63ffffffff8216600090815260016020526040902055806200011b8162000a3c565b915050620000d3565b506200013663ffffffff831662000216565b60008052600260209081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b919091556001600455600d80546001600160a01b03199081166001600160a01b039a8b161790915560f89490941b7fff000000000000000000000000000000000000000000000000000000000000001660c0528951600580548616918a16919091179055890151600680548516918916919091179055505060409096015160078054909716941693909317909455505050505060609490941b6001600160601b03191660e0525062000a8695505050505050565b6000816200024657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6200086d565b81600114156200027857507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f86200086d565b8160021415620002aa57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc6227656200086d565b8160031415620002dc57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee6200086d565b81600414156200030e57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa50135876200086d565b81600514156200034057507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc6200086d565b81600614156200037257507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f6200086d565b8160071415620003a457507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef9992196200086d565b8160081415620003d657507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d6200086d565b81600914156200040857507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce6200086d565b81600a14156200043a57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad76200086d565b81600b14156200046c57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b476200086d565b81600c14156200049e57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b6200086d565b81600d1415620004d057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d3666200086d565b81600e14156200050257507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef6200086d565b81600f14156200053457507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca6200086d565b81601014156200056657507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec6200086d565b81601114156200059757507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b6200086d565b8160121415620005c957507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f6200086d565b8160131415620005fb57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b636200086d565b81601414156200062d57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb6200086d565b81601514156200065f57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b132796200086d565b81601614156200069157507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff6200086d565b8160171415620006c357507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d99626200086d565b8160181415620006f557507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc106200086d565b81601914156200072757507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a0136200086d565b81601a14156200075957507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac146200086d565b81601b14156200078b57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc06200086d565b81601c1415620007bd57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d506200086d565b81601d1415620007ef57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f1876200086d565b81601e14156200082157507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa06200086d565b81601f14156200085357507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad066200086d565b60405162461bcd60e51b81526004016200007a9062000a05565b919050565b805160ff811681146200086d57600080fd5b6000806000806000808688036101008112156200089f578283fd5b8751620008ac8162000a6d565b602089015190975063ffffffff81168114620008c6578384fd5b6040890151909650620008d98162000a6d565b6060890151909550620008ec8162000a6d565b93506060607f198201121562000900578283fd5b50604051606081016001600160401b03811182821017156200093057634e487b7160e01b84526041600452602484fd5b6040526080880151620009438162000a6d565b815260a0880151620009558162000a6d565b602082015260c08801516200096a8162000a6d565b604082015291506200097f60e0880162000872565b90509295509295509295565b6020808252601e908201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604082015260600190565b60208082526023908201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60408201526265726f60e81b606082015260800190565b60208082526013908201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604082015260600190565b600063ffffffff8083168181141562000a6357634e487b7160e01b83526011600452602483fd5b6001019392505050565b6001600160a01b038116811462000a8357600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614c7b62000b8260003960008181610956015281816109e20152818161162b0152818161169f0152818161188701528181611c44015281816125dc015281816127b4015281816128550152818161289801528181612b0b01528181612ba60152612c02015260008181610c7501528181610f2a015281816110400152818161174401528181611975015281816119af01528181611a370152818161266e0152818161276f01528181612de30152612ef901526000818161166601528181611b120152818161291e0152612994015260008181610b8f01526125080152614c7b6000f3fe6080604052600436106102e45760003560e01c80638f1c56bd11610190578063cd87a3b4116100dc578063ec73295911610095578063f5ab0dd61161006f578063f5ab0dd614610802578063fa73168714610831578063fc0c546a14610851578063fc7e9c6f14610866576102e4565b8063ec732959146107b8578063ed33639f146107cd578063f178e47c146107e2576102e4565b8063cd87a3b4146106f4578063dbc916b814610709578063e4a3011614610738578063e5285dcc14610758578063e70ea87c14610778578063e829558814610798576102e4565b8063ab8c71c011610149578063bac426d011610123578063bac426d014610694578063bc063e1a14610552578063c2b40ae4146106b4578063c9be7250146106d4576102e4565b8063ab8c71c01461063b578063b2bc6e0f1461065f578063ba70f7571461067f576102e4565b80638f1c56bd146105be57806390eeb02b146105d357806392156311146105e857806395c87d1a146106085780639bbca3a91461061b5780639ff8006314610493576102e4565b8063460b53e31161024f5780636d9833e3116102085780637fe24ffe116101e25780637fe24ffe14610552578063840b2791146105675780638c0d34d81461057c5780638dd148021461059e576102e4565b80636d9833e3146104fb57806371523c321461051b57806378abb49b1461053d576102e4565b8063460b53e3146104515780634ecf518b146104715780634f401241146104935780635d2d766c146104b3578063616e0957146104d35780636ad481f3146104f3576102e4565b80633b9e44de116102a15780633b9e44de146103c3578063414a37ba146103d65780634167bb1e146103eb57806342d90711146103fe57806343e7119f1461041e57806344347ba91461043e576102e4565b806311e4dcb9146102e957806317cc915c1461031f5780632063e3d31461033f5780632570b7b4146103545780632b7ac3f31461038157806338bf282e146103a3575b600080fd5b3480156102f557600080fd5b506103096103043660046139df565b61087b565b6040516103169190613f4c565b60405180910390f35b34801561032b57600080fd5b5061030961033a3660046139af565b610910565b61035261034d366004613837565b610925565b005b34801561036057600080fd5b5061037461036f3660046139df565b610a54565b6040516103169190613f57565b34801561038d57600080fd5b50610396610b03565b6040516103169190613d7b565b3480156103af57600080fd5b506103746103be3660046139df565b610b12565b6103526103d1366004613c79565b610c1c565b3480156103e257600080fd5b50610374610ddd565b6103526103f9366004613c09565b610def565b34801561040a57600080fd5b506103526104193660046139df565b6113b5565b34801561042a57600080fd5b50610374610439366004613ca4565b6113e9565b61035261044c366004613c79565b611406565b34801561045d57600080fd5b5061035261046c366004613837565b611614565b34801561047d57600080fd5b50610486611664565b6040516103169190614837565b34801561049f57600080fd5b506103526104ae366004613837565b611688565b3480156104bf57600080fd5b506104866104ce3660046139af565b6116d8565b3480156104df57600080fd5b506103096104ee366004613860565b6116f0565b610352611870565b34801561050757600080fd5b506103096105163660046139af565b6118f7565b34801561052757600080fd5b50610530611973565b6040516103169190614848565b34801561054957600080fd5b50610374611997565b34801561055e57600080fd5b5061037461199d565b34801561057357600080fd5b506103746119a5565b34801561058857600080fd5b506105916119ab565b6040516103169190613e6e565b3480156105aa57600080fd5b506103526105b93660046137e2565b611b88565b3480156105ca57600080fd5b50610374611bd4565b3480156105df57600080fd5b50610486611bda565b3480156105f457600080fd5b506103096106033660046139af565b611be6565b6103526106163660046137fc565b611bfb565b34801561062757600080fd5b50610352610636366004613ba9565b611cb9565b34801561064757600080fd5b50610650611d03565b60405161031693929190613d8f565b34801561066b57600080fd5b5061035261067a366004613af4565b611d20565b34801561068b57600080fd5b50610374611d55565b3480156106a057600080fd5b506103526106af3660046137e2565b611d70565b3480156106c057600080fd5b506103746106cf3660046139af565b611dbc565b3480156106e057600080fd5b506103526106ef366004613b26565b611dce565b34801561070057600080fd5b50610486611de6565b34801561071557600080fd5b506107296107243660046139af565b611deb565b60405161031693929190614821565b34801561074457600080fd5b506103526107533660046139df565b611e1e565b34801561076457600080fd5b506103096107733660046139af565b611ea6565b34801561078457600080fd5b506103746107933660046139af565b611ebb565b3480156107a457600080fd5b506103746107b33660046139af565b611ecd565b3480156107c457600080fd5b506103746124e2565b3480156107d957600080fd5b50610396612506565b3480156107ee57600080fd5b506103746107fd3660046139af565b61252a565b34801561080e57600080fd5b5061082261081d366004613892565b61253c565b60405161031693929190613ec7565b34801561083d57600080fd5b5061030961084c3660046139af565b6125c5565b34801561085d57600080fd5b506103966125da565b34801561087257600080fd5b506104866125fe565b60008161088a5750600061090a565b6000838152600c602052604090205463ffffffff16805b6000858152600b6020908152604080832063ffffffff851684529091529020548414156108d35760019250505061090a565b63ffffffff81166108e25750601e5b806108ec81614b13565b9150508163ffffffff168163ffffffff1614156108a1576000925050505b92915050565b60116020526000908152604090205460ff1681565b6001600160a01b0382166109cb5780341461093f57600080fd5b604051633d97186b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d690349061099490339087906000903090600401613dd6565b6000604051808303818588803b1580156109ad57600080fd5b505af11580156109c1573d6000803e3d6000fd5b5050505050610a50565b604051633d97186b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d690610a1d903390869086903090600401613dd6565b600060405180830381600087803b158015610a3757600080fd5b505af1158015610a4b573d6000803e3d6000fd5b505050505b5050565b6000600160f81b8210610a825760405162461bcd60e51b8152600401610a7990614396565b60405180910390fd5b610a8f600160f81b614ba9565b83138015610aa05750600160f81b83125b610abc5760405162461bcd60e51b8152600401610a7990614109565b6000610ac88385614a6c565b90506000811215610af957610adc81614ba9565b610af490600080516020614c26833981519152614aab565b610afb565b805b949350505050565b600d546001600160a01b031681565b6000600080516020614c268339815191528310610b415760405162461bcd60e51b8152600401610a799061416c565b600080516020614c268339815191528210610b6e5760405162461bcd60e51b8152600401610a79906142a0565b610b7661345d565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e566090610bcc908490600401613e3d565b60206040518083038186803b158015610be457600080fd5b505afa158015610bf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afb91906139c7565b6007546001600160a01b03163314610c465760405162461bcd60e51b8152600401610a79906146bd565b60026004541415610c695760405162461bcd60e51b8152600401610a7990614605565b6002600455600a5460ff7f00000000000000000000000000000000000000000000000000000000000000001611610cb25760405162461bcd60e51b8152600401610a7990613fa1565b6000838152600960209081526040808320805460ff19166001908117909155600a8054835160608101855289815280860189815281860189815294830184559287528051600383027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a881019190915592517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a984015592517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa9092019190915587855260088452828520819055600b84528285208580529093528184208690559051919290917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b305490610dc890889087908990614821565b60405180910390a15050600160045550505050565b600080516020614c2683398151915281565b60005b836040015151811015610e6257610e3384604001518281518110610e2657634e487b7160e01b600052603260045260246000fd5b6020026020010151611ea6565b15610e505760405162461bcd60e51b8152600401610a799061450e565b80610e5a81614b33565b915050610df2565b50600080516020614c2683398151915282604051602001610e8391906146f4565b6040516020818303038152906040528051906020012060001c610ea69190614b72565b60a084015114610ec85760405162461bcd60e51b8152600401610a7990614135565b610eda82602001518360600151610a54565b836080015114610efc5760405162461bcd60e51b8152600401610a799061406c565b826040015151600214156110125760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610f66929190614761565b60006040518083038186803b158015610f7e57600080fd5b505af4158015610f92573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fba9190810190613a00565b91509150610fc7816116f0565b610fe35760405162461bcd60e51b8152600401610a79906143bb565b8451610fef9083612611565b61100b5760405162461bcd60e51b8152600401610a79906144a0565b505061111d565b826040015151601014156111055760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161107c929190614761565b60006040518083038186803b15801561109457600080fd5b505af41580156110a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110d09190810190613a00565b915091506110dd816116f0565b6110f95760405162461bcd60e51b8152600401610a79906143bb565b8451610fef9083612712565b60405162461bcd60e51b8152600401610a799061463c565b60005b836040015151811015611197576001601160008660400151848151811061115757634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061118f90614b33565b915050611120565b506000826020015113156111d957601054826020015111156111cb5760405162461bcd60e51b8152600401610a7990614673565b6111d9818360200151610925565b6000826020015112156112535781516001600160a01b031661120d5760405162461bcd60e51b8152600401610a79906141a1565b600f54826020015161121e90614ba9565b101561123c5760405162461bcd60e51b8152600401610a799061421e565b611253818360000151846020015161061690614ba9565b60608201511561126f5761126f8260400151836060015161279a565b606083015180516112879160015b6020020151612906565b50606083015151600354600080516020614c0683398151915291906112bb90600290600160201b900463ffffffff16614ac2565b84608001516040516112cf93929190613f60565b60405180910390a16060830151600080516020614c06833981519152906001602002015160035461130f90600190600160201b900463ffffffff16614ac2565b8460a0015160405161132393929190613f60565b60405180910390a160005b8360400151518110156113af577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8460400151828151811061138057634e487b7160e01b600052603260045260246000fd5b60200260200101516040516113959190613f57565b60405180910390a1806113a781614b33565b91505061132e565b50505050565b6006546001600160a01b031633146113df5760405162461bcd60e51b8152600401610a7990614311565b610a508282612ae6565b600b60209081526000928352604080842090915290825290205481565b6007546001600160a01b031633146114305760405162461bcd60e51b8152600401610a79906146bd565b600260045414156114535760405162461bcd60e51b8152600401610a7990614605565b600260045560008381526009602052604090205460ff166114865760405162461bcd60e51b8152600401610a799061400f565b600083815260086020526040902054600a805483929081106114b857634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020154106114e75760405162461bcd60e51b8152600401610a7990614269565b600083815260086020908152604091829020548251606081018452868152918201859052918101839052600a80548390811061153357634e487b7160e01b600052603260045260246000fd5b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600c9052918120549091601e916115869163ffffffff909116906148e1565b6115909190614b86565b6000868152600c60209081526040808320805463ffffffff191663ffffffff8616908117909155600b835281842090845290915290819020869055519091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9061160090879086908890614821565b60405180910390a150506001600455505050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610a1d90339086908690600401613db2565b7f000000000000000000000000000000000000000000000000000000000000000081565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610a1d90339086908690600401613db2565b600c6020526000908152604090205463ffffffff1681565b60006117238260008151811061171657634e487b7160e01b600052603260045260246000fd5b60200260200101516118f7565b61173f5760405162461bcd60e51b8152600401610a799061409b565b61176a7f00000000000000000000000000000000000000000000000000000000000000006001614909565b60ff1682511461178c5760405162461bcd60e51b8152600401610a79906143e2565b60005b600a54811015611865576000600a82815481106117bc57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050905061183681600001518584600161180b91906148c9565b8151811061182957634e487b7160e01b600052603260045260246000fd5b602002602001015161087b565b6118525760405162461bcd60e51b8152600401610a7990614419565b508061185d81614b33565b91505061178f565b50600190505b919050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906118c39033906000908190600401613db2565b6000604051808303818588803b1580156118dc57600080fd5b505af11580156118f0573d6000803e3d6000fd5b5050505050565b6000816119065750600061186b565b60035463ffffffff16805b63ffffffff81166000908152600260205260409020548414156119395760019250505061186b565b63ffffffff81166119485750601e5b8061195281614b13565b9150508163ffffffff168163ffffffff161415611911575060009392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60105481565b600160f81b81565b600f5481565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156119f657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611a2f57816020015b611a1c61347b565b815260200190600190039081611a145790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015611b8457611a6b8160016148c9565b600a5410611afb57600a8181548110611a9457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050828281518110611aeb57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250611b72565b604051806060016040528060008152602001611b3c7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16611ecd565b81526020016000815250828281518110611b6657634e487b7160e01b600052603260045260246000fd5b60200260200101819052505b80611b7c81614b33565b915050611a35565b5090565b6006546001600160a01b03163314611bb25760405162461bcd60e51b8152600401610a7990614311565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600e5481565b60035463ffffffff1681565b60009081526009602052604090205460ff1690565b60026004541415611c1e5760405162461bcd60e51b8152600401610a7990614605565b6002600455611c2d3082612af1565b604051632404142f60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634808285e90611c7d90869085908790600401613e1a565b600060405180830381600087803b158015611c9757600080fd5b505af1158015611cab573d6000803e3d6000fd5b505060016004555050505050565b600081602001511315611cf957611cd38160200151612bcd565b60105481602001511115611cf95760405162461bcd60e51b8152600401610a7990614673565b610a508282612c8d565b6005546006546007546001600160a01b0392831692918216911683565b80516001600160a01b03163314611d495760405162461bcd60e51b8152600401610a7990613fd8565b611d5281613217565b50565b60035463ffffffff1660009081526002602052604090205490565b6005546001600160a01b03163314611d9a5760405162461bcd60e51b8152600401610a79906140d2565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60026020526000908152604090205481565b611dd783611d20565b611de18282611cb9565b505050565b601e81565b600a8181548110611dfb57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff1680611e37575060005460ff16155b611e535760405162461bcd60e51b8152600401610a7990614348565b600054610100900460ff16158015611e7e576000805460ff1961ff0019909116610100171660011790555b611e888383612ae6565b611e90613263565b8015611de1576000805461ff0019169055505050565b60009081526011602052604090205460ff1690565b60086020526000908152604090205481565b600081611efb57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c61186b565b8160011415611f2b57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f861186b565b8160021415611f5b57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc62276561186b565b8160031415611f8b57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee61186b565b8160041415611fbb57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa501358761186b565b8160051415611feb57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc61186b565b816006141561201b57507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f61186b565b816007141561204b57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef99921961186b565b816008141561207b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d61186b565b81600914156120ab57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce61186b565b81600a14156120db57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad761186b565b81600b141561210b57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b4761186b565b81600c141561213b57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b61186b565b81600d141561216b57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d36661186b565b81600e141561219b57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef61186b565b81600f14156121cb57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca61186b565b81601014156121fb57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec61186b565b816011141561222a57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b61186b565b816012141561225a57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f61186b565b816013141561228a57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b6361186b565b81601414156122ba57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb61186b565b81601514156122ea57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b1327961186b565b816016141561231a57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff61186b565b816017141561234a57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d996261186b565b816018141561237a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc1061186b565b81601914156123aa57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a01361186b565b81601a14156123da57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac1461186b565b81601b141561240a57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc061186b565b81601c141561243a57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d5061186b565b81601d141561246a57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f18761186b565b81601e141561249a57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa061186b565b81601f14156124ca57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad0661186b565b60405162461bcd60e51b8152600401610a799061453e565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205481565b61254461345d565b61254c61349f565b61255461345d565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60096020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600354600160201b900463ffffffff1681565b600080838060200190518101906126289190613916565b905060008060006126388461253c565b600d54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390612699908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600190600401613ef0565b60206040518083038186803b1580156126b157600080fd5b505afa1580156126c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e9919061398f565b9450846127085760405162461bcd60e51b8152600401610a79906142e1565b5050505092915050565b600080838060200190518101906127299190613916565b905060008060006127398461253c565b600d54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390612699908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600090600401613ef0565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906127e9903090600401613d7b565b60206040518083038186803b15801561280157600080fd5b505afa158015612815573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283991906139c7565b90508115611de1578181106128815761287c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613265565b611de1565b6040516340c10f1960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f19906128cf9086908690600401613e01565b600060405180830381600087803b1580156128e957600080fd5b505af11580156128fd573d6000803e3d6000fd5b50505050505050565b600354600090600160201b900463ffffffff166129447f00000000000000000000000000000000000000000000000000000000000000006002614997565b63ffffffff168163ffffffff16141561296f5760405162461bcd60e51b8152600401610a79906145b5565b600061297c60028361492e565b9050600061298a8686610b12565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015612a53576129d1600286614b86565b63ffffffff16612a0c578392506129ed8163ffffffff16611ecd565b63ffffffff821660009081526001602052604090208590559150612a28565b63ffffffff811660009081526001602052604090205492508391505b612a328383610b12565b9350612a3f60028661492e565b945080612a4b81614b4e565b915050612992565b50600354600090601e90612a6e9063ffffffff1660016148e1565b612a789190614b86565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150612ab29087906148e1565b6003805463ffffffff92909216600160201b0267ffffffff0000000019909216919091179055509394505050505092915050565b600f91909155601055565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190612b40903090600401613d7b565b60206040518083038186803b158015612b5857600080fd5b505afa158015612b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9091906139c7565b90508181106128815761287c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613265565b3415612beb5760405162461bcd60e51b8152600401610a7990614450565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90612c3b90339030908690600401613db2565b602060405180830381600087803b158015612c5557600080fd5b505af1158015612c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a50919061398f565b60026004541415612cb05760405162461bcd60e51b8152600401610a7990614605565b600260045560005b826040015151811015612d1b57612cec83604001518281518110610e2657634e487b7160e01b600052603260045260246000fd5b15612d095760405162461bcd60e51b8152600401610a799061450e565b80612d1381614b33565b915050612cb8565b50600080516020614c2683398151915281604051602001612d3c91906146f4565b6040516020818303038152906040528051906020012060001c612d5f9190614b72565b60a083015114612d815760405162461bcd60e51b8152600401610a7990614135565b612d9381602001518260600151610a54565b826080015114612db55760405162461bcd60e51b8152600401610a799061406c565b81604001515160021415612ecb5760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401612e1f929190614761565b60006040518083038186803b158015612e3757600080fd5b505af4158015612e4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612e739190810190613a00565b91509150612e80816116f0565b612e9c5760405162461bcd60e51b8152600401610a79906143bb565b8351612ea89083612611565b612ec45760405162461bcd60e51b8152600401610a79906144a0565b5050612fbe565b816040015151601014156111055760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401612f35929190614761565b60006040518083038186803b158015612f4d57600080fd5b505af4158015612f61573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612f899190810190613a00565b91509150612f96816116f0565b612fb25760405162461bcd60e51b8152600401610a79906143bb565b8351612ea89083612712565b60005b8260400151518110156130385760016011600085604001518481518110612ff857634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061303090614b33565b915050612fc1565b506000816020015112156130b75780516001600160a01b031661306d5760405162461bcd60e51b8152600401610a79906141a1565b600f54816020015161307e90614ba9565b101561309c5760405162461bcd60e51b8152600401610a799061421e565b6130b7816000015182602001516130b290614ba9565b612af1565b6060810151156130d3576130d38160400151826060015161279a565b606082015180516130e591600161127d565b50606082015151600354600080516020614c06833981519152919061311990600290600160201b900463ffffffff16614ac2565b836080015160405161312d93929190613f60565b60405180910390a16060820151600080516020614c06833981519152906001602002015160035461316d90600190600160201b900463ffffffff16614ac2565b8360a0015160405161318193929190613f60565b60405180910390a160005b82604001515181101561320d577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106131de57634e487b7160e01b600052603260045260246000fd5b60200260200101516040516131f39190613f57565b60405180910390a18061320581614b33565b91505061318c565b5050600160045550565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516132589190613f8e565b60405180910390a250565b565b611de18363a9059cbb60e01b8484604051602401613284929190613e01565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600061330b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166133459092919063ffffffff16565b805190915015611de15780806020019051810190613329919061398f565b611de15760405162461bcd60e51b8152600401610a799061456b565b6060613354848460008561335e565b90505b9392505050565b6060824710156133805760405162461bcd60e51b8152600401610a79906141d8565b6133898561341e565b6133a55760405162461bcd60e51b8152600401610a79906144d7565b600080866001600160a01b031685876040516133c19190613d5f565b60006040518083038185875af1925050503d80600081146133fe576040519150601f19603f3d011682016040523d82523d6000602084013e613403565b606091505b5091509150613413828286613424565b979650505050505050565b3b151590565b60608315613433575081613357565b8251156134435782518084602001fd5b8160405162461bcd60e51b8152600401610a799190613f8e565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806000815260200160008019168152602001600081525090565b60405180604001604052806002905b6134b661345d565b8152602001906001900390816134ae5790505090565b80356001600160a01b038116811461186b57600080fd5b600082601f8301126134f3578081fd5b604051604081018181106001600160401b038211171561351557613515614bef565b806040525080838560408601111561352b578384fd5b835b600281101561354c57813583526020928301929091019060010161352d565b509195945050505050565b600082601f830112613567578081fd5b8135602061357c6135778361487f565b614856565b8281528181019085830183850287018401881015613598578586fd5b855b858110156135b65781358452928401929084019060010161359a565b5090979650505050505050565b600082601f8301126135d3578081fd5b81356135e1613577826148a2565b8181528460208386010111156135f5578283fd5b816020850160208301379081016020019190915292915050565b600060408284031215613620578081fd5b604051604081016001600160401b03828210818311171561364357613643614bef565b81604052829350613653856134cc565b8352602085013591508082111561366957600080fd5b50613676858286016135c3565b6020830152505092915050565b600060c08284031215613694578081fd5b61369e60c0614856565b90506136a9826134cc565b8152602082013560208201526136c1604083016134cc565b60408201526060820135606082015260808201356001600160401b03808211156136ea57600080fd5b6136f6858386016135c3565b608084015260a084013591508082111561370f57600080fd5b5061371c848285016135c3565b60a08301525092915050565b600060e08284031215613739578081fd5b61374360c0614856565b905081356001600160401b038082111561375c57600080fd5b613768858386016135c3565b8352602084013591508082111561377e57600080fd5b61378a858386016135c3565b602084015260408401359150808211156137a357600080fd5b506137b084828501613557565b6040830152506137c383606084016134e3565b606082015260a0820135608082015260c082013560a082015292915050565b6000602082840312156137f3578081fd5b613357826134cc565b600080600060608486031215613810578182fd5b613819846134cc565b9250613827602085016134cc565b9150604084013590509250925092565b60008060408385031215613849578182fd5b613852836134cc565b946020939093013593505050565b600060208284031215613871578081fd5b81356001600160401b03811115613886578182fd5b610afb84828501613557565b60006101008083850312156138a5578182fd5b83601f8401126138b3578182fd5b6040518181018181106001600160401b03821117156138d4576138d4614bef565b60405280848381018710156138e7578485fd5b8493505b600884101561390b578035825260019390930192602091820191016138eb565b509095945050505050565b6000610100808385031215613929578182fd5b83601f840112613937578182fd5b6040518181018181106001600160401b038211171561395857613958614bef565b604052808483810187101561396b578485fd5b8493505b600884101561390b5780518252600193909301926020918201910161396f565b6000602082840312156139a0578081fd5b81518015158114610af9578182fd5b6000602082840312156139c0578081fd5b5035919050565b6000602082840312156139d8578081fd5b5051919050565b600080604083850312156139f1578182fd5b50508035926020909101359150565b60008060408385031215613a12578182fd5b82516001600160401b0380821115613a28578384fd5b818501915085601f830112613a3b578384fd5b81516020613a4b613577836148a2565b8281528882848701011115613a5e578687fd5b613a6d83838301848801614ae7565b87820151909650935082841115613a82578485fd5b838701935087601f850112613a95578485fd5b83519250613aa56135778461487f565b8381528181019250848201828502860183018a1015613ac2578687fd5b8695505b84861015613ae4578051845260019590950194928201928201613ac6565b5080955050505050509250929050565b600060208284031215613b05578081fd5b81356001600160401b03811115613b1a578182fd5b610afb8482850161360f565b600080600060608486031215613b3a578081fd5b83356001600160401b0380821115613b50578283fd5b613b5c8783880161360f565b94506020860135915080821115613b71578283fd5b613b7d87838801613728565b93506040860135915080821115613b92578283fd5b50613b9f86828701613683565b9150509250925092565b60008060408385031215613bbb578182fd5b82356001600160401b0380821115613bd1578384fd5b613bdd86838701613728565b93506020850135915080821115613bf2578283fd5b50613bff85828601613683565b9150509250929050565b600080600060608486031215613c1d578081fd5b83356001600160401b0380821115613c33578283fd5b613c3f87838801613728565b94506020860135915080821115613c54578283fd5b50613c6186828701613683565b925050613c70604085016134cc565b90509250925092565b600080600060608486031215613c8d578081fd5b505081359360208301359350604090920135919050565b60008060408385031215613cb6578182fd5b82359150602083013563ffffffff81168114613cd0578182fd5b809150509250929050565b8060005b60028110156113af57613cf3848351613d09565b6040939093019260209190910190600101613cdf565b8060005b60028110156113af578151845260209384019390910190600101613d0d565b60008151808452613d44816020860160208601614ae7565b601f01601f19169290920160200192915050565b60ff169052565b60008251613d71818460208701614ae7565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03948516815292841660208401526040830191909152909116606082015260800190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b60408101818360005b6002811015613e65578151835260209283019290910190600101613e46565b50505092915050565b602080825282518282018190526000919060409081850190868401855b82811015613eba5781518051855286810151878601528501518585015260609093019290850190600101613e8b565b5091979650505050505050565b6101008101613ed68286613d09565b613ee36040830185613cdb565b610afb60c0830184613d09565b6000610160613eff838a613d09565b613f0c6040840189613cdb565b613f1960c0840188613d09565b80610100840152613f2c81840187613d2c565b60ff95909516610120840152505090151561014090910152949350505050565b901515815260200190565b90815260200190565b600084825263ffffffff8416602083015260606040830152613f856060830184613d2c565b95945050505050565b6000602082526133576020830184613d2c565b6020808252601a908201527f5468697320416e63686f72206973206174206361706163697479000000000000604082015260600190565b6020808252601c908201527f6f6e6c79206f776e65722063616e206265207265676973746572656400000000604082015260600190565b60208082526037908201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860408201527f6520627269646765206265666f72652075706461746573000000000000000000606082015260800190565b602080825260159082015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b604082015260600190565b6020808252601c908201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604082015260600190565b60208082526018908201527f73656e646572206973206e6f7420746865206272696467650000000000000000604082015260600190565b602080825260129082015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b604082015260600190565b6020808252601c908201527f496e636f72726563742065787465726e616c2064617461206861736800000000604082015260600190565b6020808252818101527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604082015260600190565b6020808252601e908201527f43616e277420776974686472617720746f207a65726f20616464726573730000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b6020808252601e908201527f4e6577206c65616620696e646578206d75737420626520677265617465720000604082015260600190565b60208082526021908201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6040820152601960fa1b606082015260800190565b60208082526016908201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604082015260600190565b60208082526017908201527f73656e646572206973206e6f74207468652061646d696e000000000000000000604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600b908201526a496e76616c69642066656560a81b604082015260600190565b6020808252600d908201526c496e76616c696420726f6f747360981b604082015260600190565b6020808252601b908201527f496e636f727265637420726f6f74206172726179206c656e6774680000000000604082015260600190565b60208082526017908201527f4e65696768626f7220726f6f74206e6f7420666f756e64000000000000000000604082015260600190565b60208082526030908201527f4554482076616c756520697320737570706f73656420746f206265203020666f60408201526f7220455243323020696e7374616e636560801b606082015260800190565b60208082526019908201527f496e76616c6964207472616e73616374696f6e2070726f6f6600000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260169082015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b604082015260600190565b602080825260139082015272496e646578206f7574206f6620626f756e647360681b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526030908201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160408201526f1d995cc818d85b88189948185919195960821b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526017908201527f756e737570706f7274656420696e70757420636f756e74000000000000000000604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60006020825260018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a084015261474460e0840182613d2c565b905060a0840151601f198483030160c0850152613f858282613d2c565b600060408252835160e0604084015261477e610120840182613d2c565b9050602080860151603f198086850301606087015261479d8483613d2c565b60408901518782039092016080880152815180825291840194508592508301905b808310156147de57845182529383019360019290920191908301906147be565b50606088015193506147f360a0870185613d09565b608088015160e087015260a08801516101008701529350614818905081850186613d58565b50509392505050565b9283526020830191909152604082015260600190565b63ffffffff91909116815260200190565b60ff91909116815260200190565b6040518181016001600160401b038111828210171561487757614877614bef565b604052919050565b60006001600160401b0382111561489857614898614bef565b5060209081020190565b60006001600160401b038211156148bb576148bb614bef565b50601f01601f191660200190565b600082198211156148dc576148dc614bc3565b500190565b600063ffffffff80831681851680830382111561490057614900614bc3565b01949350505050565b600060ff821660ff84168060ff0382111561492657614926614bc3565b019392505050565b600063ffffffff8084168061494557614945614bd9565b92169190910492915050565b80825b6001808611614963575061498e565b81870482111561497557614975614bc3565b8086161561498257918102915b9490941c938002614954565b94509492505050565b600063ffffffff610afb818286168386166000826149b757506001613357565b816149c457506000613357565b81600181146149da57600281146149e457614a11565b6001915050613357565b60ff8411156149f5576149f5614bc3565b6001841b915084821115614a0b57614a0b614bc3565b50613357565b5060208310610133831016604e8410600b8410161715614a44575081810a83811115614a3f57614a3f614bc3565b613357565b614a518484846001614951565b808604821115614a6357614a63614bc3565b02949350505050565b60008083128015600160ff1b850184121615614a8a57614a8a614bc3565b6001600160ff1b0384018313811615614aa557614aa5614bc3565b50500390565b600082821015614abd57614abd614bc3565b500390565b600063ffffffff83811690831681811015614adf57614adf614bc3565b039392505050565b60005b83811015614b02578181015183820152602001614aea565b838111156113af5750506000910152565b600063ffffffff821680614b2957614b29614bc3565b6000190192915050565b6000600019821415614b4757614b47614bc3565b5060010190565b600063ffffffff80831681811415614b6857614b68614bc3565b6001019392505050565b600082614b8157614b81614bd9565b500690565b600063ffffffff80841680614b9d57614b9d614bd9565b92169190910692915050565b6000600160ff1b821415614bbf57614bbf614bc3565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfef3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212203a41446c8ba0b664f0ebb3046068efb7c29722d17eaf7ca9524288eabc705a9064736f6c63430008000033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _permissions: { bridge: string; admin: string; handler: string },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _token,
      _permissions,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _permissions: { bridge: string; admin: string; handler: string },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _token,
      _permissions,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
