/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "target",
            type: "bytes32",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_target",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005b3b38038062005b3b8339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c61503862000b0360003960008181610bb301528181610e3f01528181610ed30152818161118f0152818161122d0152818161146b01528181611fac0152818161209301528181612eab01528181612f4901528181612f960152818161314b01526131e301526000818161069301528181610c9501528181610cff015281816112dc015281816116b10152818161174401528181611c2001528181613284015281816133e3015281816136ed01526138170152600081816105c401528181610d8d0152818161180d0152818161392d0152613a0d015260008181610af3015281816139dd0152613aa601526150386000f3fe60806040526004361061038c5760003560e01c80638ea3099e116101dc578063c9be725011610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b42578063fa73168714610b71578063fc0c546a14610ba1578063fc7e9c6f14610bd557600080fd5b8063e829558814610a8d578063ec73295914610aad578063ed33639f14610ae1578063f178e47c14610b1557600080fd5b8063dbc916b8116100dc578063dbc916b8146109d0578063e4a3011614610a10578063e5285dcc14610a30578063e70ea87c14610a6057600080fd5b8063c9be72501461097b578063cd87a3b41461099b578063dad878a5146109b057600080fd5b80639ff800631161017a578063ba70f75711610149578063ba70f75714610904578063bc063e1a146106fd578063c2b40ae41461092e578063c80916d41461095b57600080fd5b80639ff80063146105e6578063a0d192f5146108a4578063b2bc6e0f146108c4578063b7566a67146108e457600080fd5b806392156311116101b6578063921563111461081457806395c87d1a146108445780639bbca3a9146108575780639fa12d0b1461087757600080fd5b80638ea3099e146107c15780638f1c56bd146107e157806390eeb02b146107f757600080fd5b80634ecf518b116102c157806372c1ad031161025f578063840b27911161022e578063840b2791146107455780638b7e87821461075b5780638c0d34d81461078c5780638d09169d146107ae57600080fd5b806372c1ad03146106c757806378abb49b146106e75780637fe24ffe146106fd578063839df9451461071557600080fd5b8063616e09571161029b578063616e0957146106395780636ad481f3146106595780636d9833e31461066157806371523c321461068157600080fd5b80634ecf518b146105b25780634f401241146105e65780635d2d766c1461060657600080fd5b80632d48470c1161032e5780634167bb1e116103085780634167bb1e1461051b57806343e7119f1461052e578063460b53e3146105665780634c830cbd1461058657600080fd5b80632d48470c146104c65780633408e470146104e6578063414a37ba146104f957600080fd5b80631e6276171161036a5780631e627617146104295780632063e3d31461044b5780632570b7b4146104605780632b7ac3f31461048e57600080fd5b80630b27fb9a1461039157806311e4dcb9146103c957806317cc915c146103f9575b600080fd5b34801561039d57600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103d557600080fd5b506103e96103e436600461438a565b610bfa565b60405190151581526020016103c0565b34801561040557600080fd5b506103e961041436600461423e565b600c6020526000908152604090205460ff1681565b34801561043557600080fd5b5061043e610c8f565b6040516103c0919061474c565b61045e610459366004614047565b610df3565b005b34801561046c57600080fd5b5061048061047b36600461438a565b610f34565b6040519081526020016103c0565b34801561049a57600080fd5b50600b546104ae906001600160a01b031681565b6040516001600160a01b0390911681526020016103c0565b3480156104d257600080fd5b5061045e6104e136600461423e565b611022565b3480156104f257600080fd5b5046610480565b34801561050557600080fd5b50610480600080516020614fe383398151915281565b61045e610529366004614564565b611058565b34801561053a57600080fd5b50610480610549366004614626565b600960209081526000928352604080842090915290825290205481565b34801561057257600080fd5b5061045e610581366004614047565b611178565b34801561059257600080fd5b5061059b6111c8565b60405165ffffffffffff90911681526020016103c0565b3480156105be57600080fd5b506103af7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105f257600080fd5b5061045e610601366004614047565b611216565b34801561061257600080fd5b506103af61062136600461423e565b600a6020526000908152604090205463ffffffff1681565b34801561064557600080fd5b506103e961065436600461411c565b611266565b61045e611454565b34801561066d57600080fd5b506103e961067c36600461423e565b6114db565b34801561068d57600080fd5b506106b57f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103c0565b3480156106d357600080fd5b5061045e6106e2366004614073565b611556565b3480156106f357600080fd5b5061048060105481565b34801561070957600080fd5b50610480600160f81b81565b34801561072157600080fd5b506103e961073036600461423e565b600d6020526000908152604090205460ff1681565b34801561075157600080fd5b50610480600f5481565b34801561076757600080fd5b50610773600160f81b81565b6040516001600160f01b031990911681526020016103c0565b34801561079857600080fd5b506107a16116ab565b6040516103c09190614784565b61045e6107bc3660046145f4565b61187a565b3480156107cd57600080fd5b506104806107dc366004614355565b611de9565b3480156107ed57600080fd5b50610480600e5481565b34801561080357600080fd5b506003546103af9063ffffffff1681565b34801561082057600080fd5b506103e961082f36600461423e565b60009081526007602052604090205460ff1690565b61045e610852366004614006565b611f4c565b34801561086357600080fd5b5061045e610872366004614501565b612012565b34801561088357600080fd5b506108976108923660046140a8565b6121fc565b6040516103c09190614706565b3480156108b057600080fd5b5061045e6108bf366004614073565b6122c4565b3480156108d057600080fd5b5061045e6108df3660046143ac565b612403565b3480156108f057600080fd5b5061045e6108ff366004614467565b612465565b34801561091057600080fd5b5060035463ffffffff16600090815260026020526040902054610480565b34801561093a57600080fd5b5061048061094936600461423e565b60026020526000908152604090205481565b34801561096757600080fd5b506005546104ae906001600160a01b031681565b34801561098757600080fd5b5061045e6109963660046143e0565b61247f565b3480156109a757600080fd5b506103af601e81565b3480156109bc57600080fd5b5061045e6109cb36600461423e565b612492565b3480156109dc57600080fd5b506109f06109eb36600461423e565b6124c5565b6040805194855260208501939093529183015260608201526080016103c0565b348015610a1c57600080fd5b5061045e610a2b36600461438a565b6124ff565b348015610a3c57600080fd5b506103e9610a4b36600461423e565b6000908152600c602052604090205460ff1690565b348015610a6c57600080fd5b50610480610a7b36600461423e565b60066020526000908152604090205481565b348015610a9957600080fd5b50610480610aa836600461423e565b6125c5565b348015610ab957600080fd5b506104807f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610aed57600080fd5b506104ae7f000000000000000000000000000000000000000000000000000000000000000081565b348015610b2157600080fd5b50610480610b3036600461423e565b60016020526000908152604090205481565b348015610b4e57600080fd5b50610b62610b5d366004614150565b612c05565b6040516103c0939291906147f6565b348015610b7d57600080fd5b506103e9610b8c36600461423e565b60076020526000908152604090205460ff1681565b348015610bad57600080fd5b506104ae7f000000000000000000000000000000000000000000000000000000000000000081565b348015610be157600080fd5b506003546103af90640100000000900463ffffffff1681565b600081610c0957506000610c89565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c5257600192505050610c89565b63ffffffff8116610c615750601e5b80610c6b81614ec2565b9150508163ffffffff168163ffffffff161415610c20576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610cce57610cce614fb7565b604051908082528060200260200182016040528015610cf7578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ded57610d33816001614c3b565b60085410610d835760088181548110610d4e57610d4e614fa1565b906000526020600020906004020160010154828281518110610d7257610d72614fa1565b602002602001018181525050610ddb565b610dbc610db160017f0000000000000000000000000000000000000000000000000000000000000000614e3a565b63ffffffff166125c5565b828281518110610dce57610dce614fa1565b6020026020010181815250505b80610de581614ee2565b915050610cfd565b50919050565b6001600160a01b038216610ea157803414610e0d57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610e8457600080fd5b505af1158015610e98573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610f1857600080fd5b505af1158015610f2c573d6000803e3d6000fd5b505050505050565b6000600160f81b8210610f7c5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610f89600160f81b614f58565b83138015610f9a5750600160f81b83125b610fdb5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610f73565b6000610fe78385614de4565b9050600081121561101857610ffb81614f58565b61101390600080516020614fe3833981519152614e23565b61101a565b805b949350505050565b6005546001600160a01b0316331461104c5760405162461bcd60e51b8152600401610f7390614a10565b61105581600f55565b50565b6110628383612c8e565b6000826020015113156110a357601054826020015111156110955760405162461bcd60e51b8152600401610f73906149c6565b6110a3818360200151610df3565b60008260200151121561114d5781516001600160a01b03166111075760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610f73565b600f54826020015161111890614f58565b10156111365760405162461bcd60e51b8152600401610f73906148bc565b61114d818360000151846020015161085290614f58565b6060820151156111695761116982604001518360600151612e93565b6111738383612fda565b505050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610efe903390869086906004016146e2565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161120b81614e5f565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610efe903390869086906004016146e2565b600061128b8260008151811061127e5761127e614fa1565b60200260200101516114db565b6112d75760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610f73565b6113027f00000000000000000000000000000000000000000000000000000000000000006001614c7b565b60ff168251146113545760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610f73565b60005b60085481101561144b5760006008828154811061137657611376614fa1565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506113ec8160000151858460016113cf9190614c3b565b815181106113df576113df614fa1565b6020026020010151610bfa565b6114385760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610f73565b508061144381614ee2565b915050611357565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906114a790339060009081906004016146e2565b6000604051808303818588803b1580156114c057600080fd5b505af11580156114d4573d6000803e3d6000fd5b5050505050565b6000816114ea57506000919050565b60035463ffffffff16805b63ffffffff811660009081526002602052604090205484141561151c575060019392505050565b63ffffffff811661152b5750601e5b8061153581614ec2565b9150508163ffffffff168163ffffffff1614156114f5575060009392505050565b6005546001600160a01b031633146115805760405162461bcd60e51b8152600401610f7390614a10565b6001600160a01b0382166115cc5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610f73565b600b5463ffffffff808316600160a01b909204161061161d5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610f73565b600b5461163990600160a01b900463ffffffff16610418614c53565b63ffffffff168163ffffffff16106116635760405162461bcd60e51b8152600401610f7390614907565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156116ea576116ea614fb7565b60405190808252806020026020018201604052801561173c57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816117085790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ded57611778816001614c3b565b600854106117f6576008818154811061179357611793614fa1565b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508282815181106117e6576117e6614fa1565b6020026020010181905250611868565b6040518060800160405280600081526020016118377f000000000000000000000000000000000000000000000000000000000000000063ffffffff166125c5565b8152602001600081526020016000801b81525082828151811061185c5761185c614fa1565b60200260200101819052505b8061187281614ee2565b915050611742565b6005546001600160a01b031633146118a45760405162461bcd60e51b8152600401610f7390614a10565b600260045414156118c75760405162461bcd60e51b8152600401610f739061498f565b60026004908155604051639215631160e01b8152908101859052309063921563119060240160206040518083038186803b15801561190457600080fd5b505afa158015611918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193c919061421c565b15611c195760008481526007602052604090205460ff166119c55760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610f73565b6000848152600660205260409020546008805484929081106119e9576119e9614fa1565b90600052602060002090600402016002015410611a485760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610f73565b600084815260066020526040902054600880549091908110611a6c57611a6c614fa1565b90600052602060002090600402016002015462010000611a8c9190614c3b565b8210611aea5760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610f73565b600084815260066020908152604091829020548251608081018452878152918201869052918101849052606081018390526008805483908110611b2f57611b2f614fa1565b600091825260208083208451600490930201918255838101516001808401919091556040808601516002850155606090950151600390930192909255888352600a9052918120549091601e91611b8d9163ffffffff90911690614c53565b611b979190614f35565b6000878152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902088905581518981529081018790529081018790529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050611dde565b60085460ff7f00000000000000000000000000000000000000000000000000000000000000001611611c8d5760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610f73565b6000848152600760209081526040808320805460ff191660019081179091556008805483516080810185528a81528086018a81528186018a815260608084018b815296850186559489528251600485027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915591517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee582015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee6909401939093558986526006855283862081905560098552838620868052855283862089905583518a81529485018890529284018890529193909290917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b6000600080516020614fe38339815191528310611e485760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610f73565b600080516020614fe38339815191528210611eaf5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610f73565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611ef091906004016147e8565b60206040518083038186803b158015611f0857600080fd5b505afa158015611f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4091906145db565b925050505b9392505050565b60026004541415611f6f5760405162461bcd60e51b8152600401610f739061498f565b6002600455611f7e3082613133565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611ff057600080fd5b505af1158015612004573d6000803e3d6000fd5b505060016004555050505050565b600260045414156120355760405162461bcd60e51b8152600401610f739061498f565b60026004556120448282612c8e565b60008160200151131561211f57601054816020015111156120775760405162461bcd60e51b8152600401610f73906149c6565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916120cb9133913091906004016146e2565b602060405180830381600087803b1580156120e557600080fd5b505af11580156120f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211d919061421c565b505b6000816020015112156121cd5780516001600160a01b03166121835760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610f73565b600f54816020015161219490614f58565b10156121b25760405162461bcd60e51b8152600401610f73906148bc565b6121cd816000015182602001516121c890614f58565b613133565b6060810151156121e9576121e981604001518260600151612e93565b6121f38282612fda565b50506001600455565b60606000826001600160401b0381111561221857612218614fb7565b604051908082528060200260200182016040528015612241578160200160208202803683370190505b50905060005b838110156122bc5761228085858381811061226457612264614fa1565b905060200201356000908152600c602052604090205460ff1690565b156122aa57600182828151811061229957612299614fa1565b911515602092830291909101909101525b806122b481614ee2565b915050612247565b509392505050565b6005546001600160a01b031633146122ee5760405162461bcd60e51b8152600401610f7390614a10565b6001600160a01b03821661233a5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610f73565b600b5463ffffffff808316600160a01b909204161061238b5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610f73565b600b546123a790600160a01b900463ffffffff16610418614c53565b63ffffffff168163ffffffff16106123d15760405162461bcd60e51b8152600401610f7390614907565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b0316331461245c5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610f73565b6110558161320a565b61246e84612403565b612479838383611058565b50505050565b61248883612403565b6111738282612012565b6005546001600160a01b031633146124bc5760405162461bcd60e51b8152600401610f7390614a10565b61105581601055565b600881815481106124d557600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff1680612518575060005460ff16155b61257b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610f73565b600054610100900460ff1615801561259d576000805461ffff19166101011790555b6125a683600f55565b6125af82601055565b8015611173576000805461ff0019169055505050565b6000816125f357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561262357507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561265357507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561268357507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156126b357507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156126e357507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561271357507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561274357507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561277357507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156127a357507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156127d357507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b141561280357507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561283357507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561286357507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561289357507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156128c357507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156128f357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011141561292257507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561295257507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561298257507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156129b257507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156129e257507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612a1257507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612a4257507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612a7257507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612aa257507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612ad257507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612b0257507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612b3257507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612b6257507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612b9257507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612bc257507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610f73565b919050565b612c0d613c8c565b612c15613caa565b612c1d613c8c565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612d2c57612cd483604001518281518110612cb757612cb7614fa1565b60200260200101516000908152600c602052604090205460ff1690565b15612d1a5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610f73565b80612d2481614ee2565b915050612c91565b50600080516020614fe383398151915281604051602001612d4d9190614a47565b6040516020818303038152906040528051906020012060001c612d709190614f21565b60a083015114612dc25760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610f73565b612dd481602001518260600151610f34565b826080015114612e1e5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610f73565b612e2782613256565b60005b826040015151811015611173576001600c600085604001518481518110612e5357612e53614fa1565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612e8b90614ee2565b915050612e2a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612ef557600080fd5b505afa158015612f09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f2d91906145db565b9050811561117357818110612f70576111736001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613510565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610e8457600080fd5b60608201518051602090910151612ff19190613562565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd919061303890600290640100000000900463ffffffff16614e3a565b836080015160405161304c9392919061487b565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461309f90600190640100000000900463ffffffff16614e3a565b8360a001516040516130b39392919061487b565b60405180910390a160005b826040015151811015611173577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8360400151828151811061310257613102614fa1565b602002602001015160405161311991815260200190565b60405180910390a18061312b81614ee2565b9150506130be565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561319557600080fd5b505afa1580156131a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131cd91906145db565b9050818110612f70576111736001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613510565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e50826020015160405161324b91906148a9565b60405180910390a250565b806040015151600214156133b55760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016132c0929190614ab4565b60006040518083038186803b1580156132d857600080fd5b505af41580156132ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133149190810190614257565b9150915061332181611266565b61335d5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610f73565b82516133699083613690565b6111735760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610f73565b806040015151601014156134c85760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161341f929190614ab4565b60006040518083038186803b15801561343757600080fd5b505af415801561344b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134739190810190614257565b9150915061348081611266565b6134bc5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610f73565b825161336990836137ba565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610f73565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611173908490613842565b6000828152600d602052604081205460ff16156135915760405162461bcd60e51b8152600401610f739061494e565b6000828152600d602052604090205460ff16156135c05760405162461bcd60e51b8152600401610f739061494e565b60006135cc8484613914565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b561366c836001614c53565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906136a791906141bb565b905060008060006136b784612c05565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613718908690869086908c907f00000000000000000000000000000000000000000000000000000000000000009060019060040161481f565b60206040518083038186803b15801561373057600080fd5b505afa158015613744573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613768919061421c565b9450846137b05760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610f73565b5050505092915050565b600080838060200190518101906137d191906141bb565b905060008060006137e184612c05565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613718908690869086908c907f00000000000000000000000000000000000000000000000000000000000000009060009060040161481f565b6000613897826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613b819092919063ffffffff16565b80519091501561117357808060200190518101906138b5919061421c565b6111735760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610f73565b600354600090640100000000900463ffffffff166139537f00000000000000000000000000000000000000000000000000000000000000006002614d08565b63ffffffff168163ffffffff1614156139c75760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610f73565b60006139d4600283614ca0565b90506000613a037f00000000000000000000000000000000000000000000000000000000000000008787611de9565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613aed57613a4a600286614f35565b63ffffffff16613a8557839250613a668163ffffffff166125c5565b63ffffffff821660009081526001602052604090208590559150613aa1565b63ffffffff811660009081526001602052604090205492508391505b613acc7f00000000000000000000000000000000000000000000000000000000000000008484611de9565b9350613ad9600286614ca0565b945080613ae581614efd565b915050613a0b565b50600354600090601e90613b089063ffffffff166001614c53565b613b129190614f35565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613b4c908790614c53565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b606061101a848460008585843b613bda5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f73565b600080866001600160a01b03168587604051613bf691906146c6565b60006040518083038185875af1925050503d8060008114613c33576040519150601f19603f3d011682016040523d82523d6000602084013e613c38565b606091505b5091509150613c48828286613c53565b979650505050505050565b60608315613c62575081611f45565b825115613c725782518084602001fd5b8160405162461bcd60e51b8152600401610f7391906148a9565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613cc1613c8c565b815260200190600190039081613cb95790505090565b8035612c0081614fcd565b600082601f830112613cf357600080fd5b604051604081018181106001600160401b0382111715613d1557613d15614fb7565b8060405250808385604086011115613d2c57600080fd5b60005b6002811015613d4e578135835260209283019290910190600101613d2f565b509195945050505050565b600082601f830112613d6a57600080fd5b81356020613d7f613d7a83614bf1565b614bc1565b80838252828201915082860187848660051b8901011115613d9f57600080fd5b60005b85811015613dbe57813584529284019290840190600101613da2565b5090979650505050505050565b600082601f830112613ddc57600080fd5b8135613dea613d7a82614c14565b818152846020838601011115613dff57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613e2e57600080fd5b604051604081016001600160401b038282108183111715613e5157613e51614fb7565b8160405282935084359150613e6582614fcd565b90825260208401359080821115613e7b57600080fd5b50613e8885828601613dcb565b6020830152505092915050565b600060c08284031215613ea757600080fd5b613eaf614b76565b9050613eba82613cd7565b815260208201356020820152613ed260408301613cd7565b60408201526060820135606082015260808201356001600160401b0380821115613efb57600080fd5b613f0785838601613dcb565b608084015260a0840135915080821115613f2057600080fd5b50613f2d84828501613dcb565b60a08301525092915050565b600060e08284031215613f4b57600080fd5b613f53614b76565b905081356001600160401b0380821115613f6c57600080fd5b613f7885838601613dcb565b83526020840135915080821115613f8e57600080fd5b613f9a85838601613dcb565b60208401526040840135915080821115613fb357600080fd5b50613fc084828501613d59565b604083015250613fd38360608401613ce2565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612c0057600080fd5b60008060006060848603121561401b57600080fd5b833561402681614fcd565b9250602084013561403681614fcd565b929592945050506040919091013590565b6000806040838503121561405a57600080fd5b823561406581614fcd565b946020939093013593505050565b6000806040838503121561408657600080fd5b823561409181614fcd565b915061409f60208401613ff2565b90509250929050565b600080602083850312156140bb57600080fd5b82356001600160401b03808211156140d257600080fd5b818501915085601f8301126140e657600080fd5b8135818111156140f557600080fd5b8660208260051b850101111561410a57600080fd5b60209290920196919550909350505050565b60006020828403121561412e57600080fd5b81356001600160401b0381111561414457600080fd5b61101a84828501613d59565b600061010080838503121561416457600080fd5b83601f84011261417357600080fd5b61417b614b9e565b808486848701111561418c57600080fd5b600093505b60088410156141b157803583526001939093019260209283019201614191565b5095945050505050565b60006101008083850312156141cf57600080fd5b83601f8401126141de57600080fd5b6141e6614b9e565b80848684870111156141f757600080fd5b600093505b60088410156141b1578051835260019390930192602092830192016141fc565b60006020828403121561422e57600080fd5b8151801515811461101857600080fd5b60006020828403121561425057600080fd5b5035919050565b6000806040838503121561426a57600080fd5b82516001600160401b038082111561428157600080fd5b818501915085601f83011261429557600080fd5b815160206142a5613d7a83614c14565b82815288828487010111156142b957600080fd5b6142c883838301848801614e96565b878201519096509350828411156142de57600080fd5b838701935087601f8501126142f257600080fd5b83519250614302613d7a84614bf1565b8381528181019250848201600585901b860183018a101561432257600080fd5b600095505b84861015614345578051845260019590950194928201928201614327565b5080955050505050509250929050565b60008060006060848603121561436a57600080fd5b833561437581614fcd565b95602085013595506040909401359392505050565b6000806040838503121561439d57600080fd5b50508035926020909101359150565b6000602082840312156143be57600080fd5b81356001600160401b038111156143d457600080fd5b61101a84828501613e1c565b6000806000606084860312156143f557600080fd5b83356001600160401b038082111561440c57600080fd5b61441887838801613e1c565b9450602086013591508082111561442e57600080fd5b61443a87838801613f39565b9350604086013591508082111561445057600080fd5b5061445d86828701613e95565b9150509250925092565b6000806000806080858703121561447d57600080fd5b84356001600160401b038082111561449457600080fd5b6144a088838901613e1c565b955060208701359150808211156144b657600080fd5b6144c288838901613f39565b945060408701359150808211156144d857600080fd5b506144e587828801613e95565b92505060608501356144f681614fcd565b939692955090935050565b6000806040838503121561451457600080fd5b82356001600160401b038082111561452b57600080fd5b61453786838701613f39565b9350602085013591508082111561454d57600080fd5b5061455a85828601613e95565b9150509250929050565b60008060006060848603121561457957600080fd5b83356001600160401b038082111561459057600080fd5b61459c87838801613f39565b945060208601359150808211156145b257600080fd5b506145bf86828701613e95565b92505060408401356145d081614fcd565b809150509250925092565b6000602082840312156145ed57600080fd5b5051919050565b6000806000806080858703121561460a57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561463957600080fd5b8235915061409f60208401613ff2565b8060005b600281101561247957614661848351614677565b604093909301926020919091019060010161464d565b8060005b600281101561247957815184526020938401939091019060010161467b565b600081518084526146b2816020860160208601614e96565b601f01601f19169290920160200192915050565b600082516146d8818460208701614e96565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b81811015614740578351151583529284019291840191600101614722565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561474057835183529284019291840191600101614768565b602080825282518282018190526000919060409081850190868401855b828110156147db578151805185528681015187860152858101518686015260609081015190850152608090930192908501906001016147a1565b5091979650505050505050565b60408101610c898284614677565b61010081016148058286614677565b6148126040830185614649565b61101a60c0830184614677565b600061016061482e838a614677565b61483b6040840189614649565b61484860c0840188614677565b8061010084015261485b8184018761469a565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff831660208201526060604082015260006148a0606083018461469a565b95945050505050565b602081526000611f45602083018461469a565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614a9760e084018261469a565b905060a0840151601f198483030160c08501526148a0828261469a565b604081526000835160e06040840152614ad161012084018261469a565b9050602080860151603f1980868503016060870152614af0848361469a565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614b325784518252938301936001929092019190830190614b12565b5060608801519350614b4760a0870185614677565b608088015160e087015260a088015161010087015260ff8716838701529350614b6d9050565b50509392505050565b60405160c081016001600160401b0381118282101715614b9857614b98614fb7565b60405290565b60405161010081016001600160401b0381118282101715614b9857614b98614fb7565b604051601f8201601f191681016001600160401b0381118282101715614be957614be9614fb7565b604052919050565b60006001600160401b03821115614c0a57614c0a614fb7565b5060051b60200190565b60006001600160401b03821115614c2d57614c2d614fb7565b50601f01601f191660200190565b60008219821115614c4e57614c4e614f75565b500190565b600063ffffffff808316818516808303821115614c7257614c72614f75565b01949350505050565b600060ff821660ff84168060ff03821115614c9857614c98614f75565b019392505050565b600063ffffffff80841680614cb757614cb7614f8b565b92169190910492915050565b600181815b80851115614d00578163ffffffff04821115614ce657614ce6614f75565b80851615614cf357918102915b93841c9390800290614cc8565b509250929050565b600063ffffffff61101a818516828516600082614d2757506001610c89565b81614d3457506000610c89565b8160018114614d4a5760028114614d5457614d85565b6001915050610c89565b60ff841115614d6557614d65614f75565b6001841b915063ffffffff821115614d7f57614d7f614f75565b50610c89565b5060208310610133831016604e8410600b8410161715614dbc575081810a63ffffffff811115614db757614db7614f75565b610c89565b614dc68383614cc3565b8063ffffffff04821115614ddc57614ddc614f75565b029392505050565b60008083128015600160ff1b850184121615614e0257614e02614f75565b6001600160ff1b0384018313811615614e1d57614e1d614f75565b50500390565b600082821015614e3557614e35614f75565b500390565b600063ffffffff83811690831681811015614e5757614e57614f75565b039392505050565b805160208201516001600160d01b03198082169291906006831015614e8e5780818460060360031b1b83161693505b505050919050565b60005b83811015614eb1578181015183820152602001614e99565b838111156124795750506000910152565b600063ffffffff821680614ed857614ed8614f75565b6000190192915050565b6000600019821415614ef657614ef6614f75565b5060010190565b600063ffffffff80831681811415614f1757614f17614f75565b6001019392505050565b600082614f3057614f30614f8b565b500690565b600063ffffffff80841680614f4c57614f4c614f8b565b92169190910692915050565b6000600160ff1b821415614f6e57614f6e614f75565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461105557600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122012695d28e466c738d0a4514d0a668edfa98ad69bf95b2c4eefed34a83970a74c64736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
