/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "edges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005a5238038062005a528339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614f4f62000b0360003960008181610b8301528181610e0101528181610e950152818161167e0152818161171c0152818161195001528181611f3201528181611ff301528181612e1a01528181612eb801528181612f05015281816130ba015261315201526000818161069b01528181610c6301528181610ccd015281816114cd015281816117cb01528181611bc001528181611c4c015281816131f3015281816133520152818161365c01526137860152600081816105cc01528181610d5601528181611d0b0152818161389c015261397c015260008181610ac30152818161394c0152613a150152614f4f6000f3fe6080604052600436106103815760003560e01c80638ea3099e116101d1578063c80916d411610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b12578063fa73168714610b41578063fc0c546a14610b71578063fc7e9c6f14610ba557600080fd5b8063e829558814610a5d578063ec73295914610a7d578063ed33639f14610ab1578063f178e47c14610ae557600080fd5b8063dbc916b8116100dc578063dbc916b8146109a5578063e4a30116146109e0578063e5285dcc14610a00578063e70ea87c14610a3057600080fd5b8063c80916d414610950578063c9be725014610970578063cd87a3b41461099057600080fd5b80639ff800631161016f578063b7566a6711610149578063b7566a67146108d9578063ba70f757146108f9578063bc063e1a14610705578063c2b40ae41461092357600080fd5b80639ff80063146105ee578063a0d192f514610899578063b2bc6e0f146108b957600080fd5b806392156311116101ab578063921563111461080957806395c87d1a146108395780639bbca3a91461084c5780639fa12d0b1461086c57600080fd5b80638ea3099e146107b65780638f1c56bd146107d657806390eeb02b146107ec57600080fd5b80634c830cbd116102b657806371523c3211610254578063839df94511610223578063839df9451461071d578063840b27911461074d5780638b7e8782146107635780638c0d34d81461079457600080fd5b806371523c321461068957806372c1ad03146106cf57806378abb49b146106ef5780637fe24ffe1461070557600080fd5b80635d2d766c116102905780635d2d766c1461060e578063616e0957146106415780636ad481f3146106615780636d9833e31461066957600080fd5b80634c830cbd1461058e5780634ecf518b146105ba5780634f401241146105ee57600080fd5b80633408e4701161032357806342d90711116102fd57806342d907111461050357806343e7119f1461052357806344347ba91461055b578063460b53e31461056e57600080fd5b80633408e470146104bb578063414a37ba146104ce5780634167bb1e146104f057600080fd5b80631e6276171161035f5780631e6276171461041e5780632063e3d3146104405780632570b7b4146104555780632b7ac3f31461048357600080fd5b80630b27fb9a1461038657806311e4dcb9146103be57806317cc915c146103ee575b600080fd5b34801561039257600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103ca57600080fd5b506103de6103d93660046142f9565b610bca565b60405190151581526020016103b5565b3480156103fa57600080fd5b506103de6104093660046141ad565b600c6020526000908152604090205460ff1681565b34801561042a57600080fd5b50610433610c5f565b6040516103b591906146b5565b61045361044e366004613fb6565b610db5565b005b34801561046157600080fd5b506104756104703660046142f9565b610ef6565b6040519081526020016103b5565b34801561048f57600080fd5b50600b546104a3906001600160a01b031681565b6040516001600160a01b0390911681526020016103b5565b3480156104c757600080fd5b5046610475565b3480156104da57600080fd5b50610475600080516020614efa83398151915281565b6104536104fe3660046144d3565b610fe4565b34801561050f57600080fd5b5061045361051e3660046142f9565b611104565b34801561052f57600080fd5b5061047561053e36600461458f565b600960209081526000928352604080842090915290825290205481565b610453610569366004614563565b611139565b34801561057a57600080fd5b50610453610589366004613fb6565b611667565b34801561059a57600080fd5b506105a36116b7565b60405165ffffffffffff90911681526020016103b5565b3480156105c657600080fd5b506103a47f000000000000000000000000000000000000000000000000000000000000000081565b3480156105fa57600080fd5b50610453610609366004613fb6565b611705565b34801561061a57600080fd5b506103a46106293660046141ad565b600a6020526000908152604090205463ffffffff1681565b34801561064d57600080fd5b506103de61065c36600461408b565b611755565b610453611939565b34801561067557600080fd5b506103de6106843660046141ad565b6119c0565b34801561069557600080fd5b506106bd7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103b5565b3480156106db57600080fd5b506104536106ea366004613fe2565b611a3b565b3480156106fb57600080fd5b5061047560105481565b34801561071157600080fd5b50610475600160f81b81565b34801561072957600080fd5b506103de6107383660046141ad565b600d6020526000908152604090205460ff1681565b34801561075957600080fd5b50610475600f5481565b34801561076f57600080fd5b5061077b600160f81b81565b6040516001600160f01b031990911681526020016103b5565b3480156107a057600080fd5b506107a9611bbc565b6040516103b591906146ed565b3480156107c257600080fd5b506104756107d13660046142c4565b611d6f565b3480156107e257600080fd5b50610475600e5481565b3480156107f857600080fd5b506003546103a49063ffffffff1681565b34801561081557600080fd5b506103de6108243660046141ad565b60009081526007602052604090205460ff1690565b610453610847366004613f75565b611ed2565b34801561085857600080fd5b50610453610867366004614470565b611f98565b34801561087857600080fd5b5061088c610887366004614017565b612181565b6040516103b5919061466f565b3480156108a557600080fd5b506104536108b4366004613fe2565b612246565b3480156108c557600080fd5b506104536108d436600461431b565b6123b1565b3480156108e557600080fd5b506104536108f43660046143d6565b612416565b34801561090557600080fd5b5060035463ffffffff16600090815260026020526040902054610475565b34801561092f57600080fd5b5061047561093e3660046141ad565b60026020526000908152604090205481565b34801561095c57600080fd5b506005546104a3906001600160a01b031681565b34801561097c57600080fd5b5061045361098b36600461434f565b612430565b34801561099c57600080fd5b506103a4601e81565b3480156109b157600080fd5b506109c56109c03660046141ad565b612443565b604080519384526020840192909252908201526060016103b5565b3480156109ec57600080fd5b506104536109fb3660046142f9565b612476565b348015610a0c57600080fd5b506103de610a1b3660046141ad565b6000908152600c602052604090205460ff1690565b348015610a3c57600080fd5b50610475610a4b3660046141ad565b60066020526000908152604090205481565b348015610a6957600080fd5b50610475610a783660046141ad565b612534565b348015610a8957600080fd5b506104757f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610abd57600080fd5b506104a37f000000000000000000000000000000000000000000000000000000000000000081565b348015610af157600080fd5b50610475610b003660046141ad565b60016020526000908152604090205481565b348015610b1e57600080fd5b50610b32610b2d3660046140bf565b612b74565b6040516103b593929190614754565b348015610b4d57600080fd5b506103de610b5c3660046141ad565b60076020526000908152604090205460ff1681565b348015610b7d57600080fd5b506104a37f000000000000000000000000000000000000000000000000000000000000000081565b348015610bb157600080fd5b506003546103a490640100000000900463ffffffff1681565b600081610bd957506000610c59565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c2257600192505050610c59565b63ffffffff8116610c315750601e5b80610c3b81614dd9565b9150508163ffffffff168163ffffffff161415610bf0576000925050505b92915050565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610c9c57610c9c614ece565b604051908082528060200260200182016040528015610cc5578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610db157610d01816001614b52565b60085410610d515760088181548110610d1c57610d1c614eb8565b906000526020600020906003020160010154828281518110610d4057610d40614eb8565b602002602001018181525050610d9f565b610d807f000000000000000000000000000000000000000000000000000000000000000063ffffffff16612534565b828281518110610d9257610d92614eb8565b6020026020010181815250505b80610da981614df9565b915050610ccb565b5090565b6001600160a01b038216610e6357803414610dcf57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610e4657600080fd5b505af1158015610e5a573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610eda57600080fd5b505af1158015610eee573d6000803e3d6000fd5b505050505050565b6000600160f81b8210610f3e5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610f4b600160f81b614e6f565b83138015610f5c5750600160f81b83125b610f9d5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610f35565b6000610fa98385614cfb565b90506000811215610fda57610fbd81614e6f565b610fd590600080516020614efa833981519152614d3a565b610fdc565b805b949350505050565b610fee8383612bfd565b60008260200151131561102f57601054826020015111156110215760405162461bcd60e51b8152600401610f35906148dd565b61102f818360200151610db5565b6000826020015112156110d95781516001600160a01b03166110935760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610f35565b600f5482602001516110a490614e6f565b10156110c25760405162461bcd60e51b8152600401610f359061481a565b6110d9818360000151846020015161084790614e6f565b6060820151156110f5576110f582604001518360600151612e02565b6110ff8383612f49565b505050565b6005546001600160a01b0316331461112e5760405162461bcd60e51b8152600401610f3590614927565b600f91909155601055565b6005546001600160a01b031633146111635760405162461bcd60e51b8152600401610f3590614927565b600260045414156111865760405162461bcd60e51b8152600401610f35906148a6565b60026004908155604051639215631160e01b8152908101849052309063921563119060240160206040518083038186803b1580156111c357600080fd5b505afa1580156111d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fb919061418b565b156114c65760008381526007602052604090205460ff166112845760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610f35565b6000838152600660205260409020546008805483929081106112a8576112a8614eb8565b906000526020600020906003020160020154106113075760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610f35565b60008381526006602052604090205460088054909190811061132b5761132b614eb8565b9060005260206000209060030201600201546201000061134b9190614b52565b81106113a95760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610f35565b60008381526006602090815260409182902054825160608101845286815291820185905291810183905260088054839081106113e7576113e7614eb8565b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600a9052918120549091601e9161143a9163ffffffff90911690614b6a565b6114449190614e4c565b6000868152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902087905581518881529081018690529081018690529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a1505061165d565b60085460ff7f0000000000000000000000000000000000000000000000000000000000000000161161153a5760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610f35565b6000838152600760209081526040808320805460ff19166001908117909155600880548351606080820186528a82528187018a81528287018a815295840185559388528151600384027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee485015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee590930192909255888652600685528386208190556009855283862086805285528386208890558351898152948501879052928401879052919391927fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b5050600160045550565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610ec09033908690869060040161464b565b60408051600160f81b602082018190524660e01b6001600160e01b031981166022840152835180840360060181526026909301909352600092916116fa81614d76565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610ec09033908690869060040161464b565b600061177a8260008151811061176d5761176d614eb8565b60200260200101516119c0565b6117c65760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610f35565b6117f17f00000000000000000000000000000000000000000000000000000000000000006001614b92565b60ff168251146118435760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610f35565b60005b6008548110156119305760006008828154811061186557611865614eb8565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090506118d18160000151858460016118b49190614b52565b815181106118c4576118c4614eb8565b6020026020010151610bca565b61191d5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610f35565b508061192881614df9565b915050611846565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890349061198c903390600090819060040161464b565b6000604051808303818588803b1580156119a557600080fd5b505af11580156119b9573d6000803e3d6000fd5b5050505050565b6000816119cf57506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611a01575060019392505050565b63ffffffff8116611a105750601e5b80611a1a81614dd9565b9150508163ffffffff168163ffffffff1614156119da575060009392505050565b6005546001600160a01b03163314611a655760405162461bcd60e51b8152600401610f3590614927565b6001600160a01b038216611ab15760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610f35565b600b5463ffffffff808316600160a01b9092041610611b025760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610f35565b600b54611b1d90600160a01b900463ffffffff166001614b6a565b63ffffffff168163ffffffff161115611b745760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b6044820152606401610f35565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611bf957611bf9614ece565b604051908082528060200260200182016040528015611c4457816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611c175790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610db157611c80816001614b52565b60085410611cf45760088181548110611c9b57611c9b614eb8565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050828281518110611ce457611ce4614eb8565b6020026020010181905250611d5d565b604051806060016040528060008152602001611d357f000000000000000000000000000000000000000000000000000000000000000063ffffffff16612534565b81526020016000815250828281518110611d5157611d51614eb8565b60200260200101819052505b80611d6781614df9565b915050611c4a565b6000600080516020614efa8339815191528310611dce5760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610f35565b600080516020614efa8339815191528210611e355760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610f35565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611e769190600401614746565b60206040518083038186803b158015611e8e57600080fd5b505afa158015611ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec6919061454a565b925050505b9392505050565b60026004541415611ef55760405162461bcd60e51b8152600401610f35906148a6565b6002600455611f0430826130a2565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611f7657600080fd5b505af1158015611f8a573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611fbb5760405162461bcd60e51b8152600401610f35906148a6565b6002600455611fca8282612bfd565b6000816020015113156120a45760208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd9161202b91339130919060040161464b565b602060405180830381600087803b15801561204557600080fd5b505af1158015612059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207d919061418b565b50601054816020015111156120a45760405162461bcd60e51b8152600401610f35906148dd565b6000816020015112156121525780516001600160a01b03166121085760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610f35565b600f54816020015161211990614e6f565b10156121375760405162461bcd60e51b8152600401610f359061481a565b6121528160000151826020015161214d90614e6f565b6130a2565b60608101511561216e5761216e81604001518260600151612e02565b6121788282612f49565b50506001600455565b6060816001600160401b0381111561219b5761219b614ece565b6040519080825280602002602001820160405280156121c4578160200160208202803683370190505b50905060005b8281101561223f576122038484838181106121e7576121e7614eb8565b905060200201356000908152600c602052604090205460ff1690565b1561222d57600182828151811061221c5761221c614eb8565b911515602092830291909101909101525b8061223781614df9565b9150506121ca565b5092915050565b6005546001600160a01b031633146122705760405162461bcd60e51b8152600401610f3590614927565b6001600160a01b0382166122bc5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610f35565b600b5463ffffffff808316600160a01b909204161061230d5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610f35565b600b5461232890600160a01b900463ffffffff166001614b6a565b63ffffffff168163ffffffff16111561237f5760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b6044820152606401610f35565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b0316331461240a5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610f35565b61241381613179565b50565b61241f846123b1565b61242a838383610fe4565b50505050565b612439836123b1565b6110ff8282611f98565b6008818154811061245357600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff168061248f575060005460ff16155b6124f25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610f35565b600054610100900460ff16158015612514576000805461ffff19166101011790555b600f839055601082905580156110ff576000805461ff0019169055505050565b60008161256257507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561259257507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156125c257507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156125f257507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004141561262257507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b816005141561265257507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561268257507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600714156126b257507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156126e257507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561271257507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a141561274257507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b141561277257507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c14156127a257507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156127d257507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561280257507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f141561283257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b816010141561286257507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011141561289157507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156128c157507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156128f157507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014141561292157507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b816015141561295157507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b816016141561298157507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156129b157507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156129e157507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612a1157507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612a4157507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612a7157507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612aa157507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612ad157507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612b0157507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612b3157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610f35565b919050565b612b7c613bfb565b612b84613c19565b612b8c613bfb565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612c9b57612c4383604001518281518110612c2657612c26614eb8565b60200260200101516000908152600c602052604090205460ff1690565b15612c895760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610f35565b80612c9381614df9565b915050612c00565b50600080516020614efa83398151915281604051602001612cbc919061495e565b6040516020818303038152906040528051906020012060001c612cdf9190614e38565b60a083015114612d315760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610f35565b612d4381602001518260600151610ef6565b826080015114612d8d5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610f35565b612d96826131c5565b60005b8260400151518110156110ff576001600c600085604001518481518110612dc257612dc2614eb8565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612dfa90614df9565b915050612d99565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612e6457600080fd5b505afa158015612e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9c919061454a565b905081156110ff57818110612edf576110ff6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461347f565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610e4657600080fd5b60608201518051602090910151612f6091906134d1565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9190612fa790600290640100000000900463ffffffff16614d51565b8360800151604051612fbb939291906147d9565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461300e90600190640100000000900463ffffffff16614d51565b8360a00151604051613022939291906147d9565b60405180910390a160005b8260400151518110156110ff577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8360400151828151811061307157613071614eb8565b602002602001015160405161308891815260200190565b60405180910390a18061309a81614df9565b91505061302d565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561310457600080fd5b505afa158015613118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061313c919061454a565b9050818110612edf576110ff6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461347f565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516131ba9190614807565b60405180910390a250565b806040015151600214156133245760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161322f9291906149cb565b60006040518083038186803b15801561324757600080fd5b505af415801561325b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261328391908101906141c6565b9150915061329081611755565b6132cc5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610f35565b82516132d890836135ff565b6110ff5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610f35565b806040015151601014156134375760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161338e9291906149cb565b60006040518083038186803b1580156133a657600080fd5b505af41580156133ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133e291908101906141c6565b915091506133ef81611755565b61342b5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610f35565b82516132d89083613729565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610f35565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526110ff9084906137b1565b6000828152600d602052604081205460ff16156135005760405162461bcd60e51b8152600401610f3590614865565b6000828152600d602052604090205460ff161561352f5760405162461bcd60e51b8152600401610f3590614865565b600061353b8484613883565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b56135db836001614b6a565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b60008083806020019051810190613616919061412a565b9050600080600061362684612b74565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613687908690869086908c907f00000000000000000000000000000000000000000000000000000000000000009060019060040161477d565b60206040518083038186803b15801561369f57600080fd5b505afa1580156136b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136d7919061418b565b94508461371f5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610f35565b5050505092915050565b60008083806020019051810190613740919061412a565b9050600080600061375084612b74565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613687908690869086908c907f00000000000000000000000000000000000000000000000000000000000000009060009060040161477d565b6000613806826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613af09092919063ffffffff16565b8051909150156110ff5780806020019051810190613824919061418b565b6110ff5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610f35565b600354600090640100000000900463ffffffff166138c27f00000000000000000000000000000000000000000000000000000000000000006002614c1f565b63ffffffff168163ffffffff1614156139365760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610f35565b6000613943600283614bb7565b905060006139727f00000000000000000000000000000000000000000000000000000000000000008787611d6f565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613a5c576139b9600286614e4c565b63ffffffff166139f4578392506139d58163ffffffff16612534565b63ffffffff821660009081526001602052604090208590559150613a10565b63ffffffff811660009081526001602052604090205492508391505b613a3b7f00000000000000000000000000000000000000000000000000000000000000008484611d6f565b9350613a48600286614bb7565b945080613a5481614e14565b91505061397a565b50600354600090601e90613a779063ffffffff166001614b6a565b613a819190614e4c565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613abb908790614b6a565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b6060610fdc848460008585843b613b495760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f35565b600080866001600160a01b03168587604051613b65919061462f565b60006040518083038185875af1925050503d8060008114613ba2576040519150601f19603f3d011682016040523d82523d6000602084013e613ba7565b606091505b5091509150613bb7828286613bc2565b979650505050505050565b60608315613bd1575081611ecb565b825115613be15782518084602001fd5b8160405162461bcd60e51b8152600401610f359190614807565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613c30613bfb565b815260200190600190039081613c285790505090565b8035612b6f81614ee4565b600082601f830112613c6257600080fd5b604051604081018181106001600160401b0382111715613c8457613c84614ece565b8060405250808385604086011115613c9b57600080fd5b60005b6002811015613cbd578135835260209283019290910190600101613c9e565b509195945050505050565b600082601f830112613cd957600080fd5b81356020613cee613ce983614b08565b614ad8565b80838252828201915082860187848660051b8901011115613d0e57600080fd5b60005b85811015613d2d57813584529284019290840190600101613d11565b5090979650505050505050565b600082601f830112613d4b57600080fd5b8135613d59613ce982614b2b565b818152846020838601011115613d6e57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613d9d57600080fd5b604051604081016001600160401b038282108183111715613dc057613dc0614ece565b8160405282935084359150613dd482614ee4565b90825260208401359080821115613dea57600080fd5b50613df785828601613d3a565b6020830152505092915050565b600060c08284031215613e1657600080fd5b613e1e614a8d565b9050613e2982613c46565b815260208201356020820152613e4160408301613c46565b60408201526060820135606082015260808201356001600160401b0380821115613e6a57600080fd5b613e7685838601613d3a565b608084015260a0840135915080821115613e8f57600080fd5b50613e9c84828501613d3a565b60a08301525092915050565b600060e08284031215613eba57600080fd5b613ec2614a8d565b905081356001600160401b0380821115613edb57600080fd5b613ee785838601613d3a565b83526020840135915080821115613efd57600080fd5b613f0985838601613d3a565b60208401526040840135915080821115613f2257600080fd5b50613f2f84828501613cc8565b604083015250613f428360608401613c51565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612b6f57600080fd5b600080600060608486031215613f8a57600080fd5b8335613f9581614ee4565b92506020840135613fa581614ee4565b929592945050506040919091013590565b60008060408385031215613fc957600080fd5b8235613fd481614ee4565b946020939093013593505050565b60008060408385031215613ff557600080fd5b823561400081614ee4565b915061400e60208401613f61565b90509250929050565b6000806020838503121561402a57600080fd5b82356001600160401b038082111561404157600080fd5b818501915085601f83011261405557600080fd5b81358181111561406457600080fd5b8660208260051b850101111561407957600080fd5b60209290920196919550909350505050565b60006020828403121561409d57600080fd5b81356001600160401b038111156140b357600080fd5b610fdc84828501613cc8565b60006101008083850312156140d357600080fd5b83601f8401126140e257600080fd5b6140ea614ab5565b80848684870111156140fb57600080fd5b600093505b600884101561412057803583526001939093019260209283019201614100565b5095945050505050565b600061010080838503121561413e57600080fd5b83601f84011261414d57600080fd5b614155614ab5565b808486848701111561416657600080fd5b600093505b60088410156141205780518352600193909301926020928301920161416b565b60006020828403121561419d57600080fd5b81518015158114610fda57600080fd5b6000602082840312156141bf57600080fd5b5035919050565b600080604083850312156141d957600080fd5b82516001600160401b03808211156141f057600080fd5b818501915085601f83011261420457600080fd5b81516020614214613ce983614b2b565b828152888284870101111561422857600080fd5b61423783838301848801614dad565b8782015190965093508284111561424d57600080fd5b838701935087601f85011261426157600080fd5b83519250614271613ce984614b08565b8381528181019250848201600585901b860183018a101561429157600080fd5b600095505b848610156142b4578051845260019590950194928201928201614296565b5080955050505050509250929050565b6000806000606084860312156142d957600080fd5b83356142e481614ee4565b95602085013595506040909401359392505050565b6000806040838503121561430c57600080fd5b50508035926020909101359150565b60006020828403121561432d57600080fd5b81356001600160401b0381111561434357600080fd5b610fdc84828501613d8b565b60008060006060848603121561436457600080fd5b83356001600160401b038082111561437b57600080fd5b61438787838801613d8b565b9450602086013591508082111561439d57600080fd5b6143a987838801613ea8565b935060408601359150808211156143bf57600080fd5b506143cc86828701613e04565b9150509250925092565b600080600080608085870312156143ec57600080fd5b84356001600160401b038082111561440357600080fd5b61440f88838901613d8b565b9550602087013591508082111561442557600080fd5b61443188838901613ea8565b9450604087013591508082111561444757600080fd5b5061445487828801613e04565b925050606085013561446581614ee4565b939692955090935050565b6000806040838503121561448357600080fd5b82356001600160401b038082111561449a57600080fd5b6144a686838701613ea8565b935060208501359150808211156144bc57600080fd5b506144c985828601613e04565b9150509250929050565b6000806000606084860312156144e857600080fd5b83356001600160401b03808211156144ff57600080fd5b61450b87838801613ea8565b9450602086013591508082111561452157600080fd5b5061452e86828701613e04565b925050604084013561453f81614ee4565b809150509250925092565b60006020828403121561455c57600080fd5b5051919050565b60008060006060848603121561457857600080fd5b505081359360208301359350604090920135919050565b600080604083850312156145a257600080fd5b8235915061400e60208401613f61565b8060005b600281101561242a576145ca8483516145e0565b60409390930192602091909101906001016145b6565b8060005b600281101561242a5781518452602093840193909101906001016145e4565b6000815180845261461b816020860160208601614dad565b601f01601f19169290920160200192915050565b60008251614641818460208701614dad565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156146a957835115158352928401929184019160010161468b565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156146a9578351835292840192918401916001016146d1565b602080825282518282018190526000919060409081850190868401855b82811015614739578151805185528681015187860152850151858501526060909301929085019060010161470a565b5091979650505050505050565b60408101610c5982846145e0565b610100810161476382866145e0565b61477060408301856145b2565b610fdc60c08301846145e0565b600061016061478c838a6145e0565b61479960408401896145b2565b6147a660c08401886145e0565b806101008401526147b981840187614603565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff831660208201526060604082015260006147fe6060830184614603565b95945050505050565b602081526000611ecb6020830184614603565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a08401526149ae60e0840182614603565b905060a0840151601f198483030160c08501526147fe8282614603565b604081526000835160e060408401526149e8610120840182614603565b9050602080860151603f1980868503016060870152614a078483614603565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614a495784518252938301936001929092019190830190614a29565b5060608801519350614a5e60a08701856145e0565b608088015160e087015260a088015161010087015260ff8716838701529350614a849050565b50509392505050565b60405160c081016001600160401b0381118282101715614aaf57614aaf614ece565b60405290565b60405161010081016001600160401b0381118282101715614aaf57614aaf614ece565b604051601f8201601f191681016001600160401b0381118282101715614b0057614b00614ece565b604052919050565b60006001600160401b03821115614b2157614b21614ece565b5060051b60200190565b60006001600160401b03821115614b4457614b44614ece565b50601f01601f191660200190565b60008219821115614b6557614b65614e8c565b500190565b600063ffffffff808316818516808303821115614b8957614b89614e8c565b01949350505050565b600060ff821660ff84168060ff03821115614baf57614baf614e8c565b019392505050565b600063ffffffff80841680614bce57614bce614ea2565b92169190910492915050565b600181815b80851115614c17578163ffffffff04821115614bfd57614bfd614e8c565b80851615614c0a57918102915b93841c9390800290614bdf565b509250929050565b600063ffffffff610fdc818516828516600082614c3e57506001610c59565b81614c4b57506000610c59565b8160018114614c615760028114614c6b57614c9c565b6001915050610c59565b60ff841115614c7c57614c7c614e8c565b6001841b915063ffffffff821115614c9657614c96614e8c565b50610c59565b5060208310610133831016604e8410600b8410161715614cd3575081810a63ffffffff811115614cce57614cce614e8c565b610c59565b614cdd8383614bda565b8063ffffffff04821115614cf357614cf3614e8c565b029392505050565b60008083128015600160ff1b850184121615614d1957614d19614e8c565b6001600160ff1b0384018313811615614d3457614d34614e8c565b50500390565b600082821015614d4c57614d4c614e8c565b500390565b600063ffffffff83811690831681811015614d6e57614d6e614e8c565b039392505050565b805160208201516001600160d01b03198082169291906006831015614da55780818460060360031b1b83161693505b505050919050565b60005b83811015614dc8578181015183820152602001614db0565b8381111561242a5750506000910152565b600063ffffffff821680614def57614def614e8c565b6000190192915050565b6000600019821415614e0d57614e0d614e8c565b5060010190565b600063ffffffff80831681811415614e2e57614e2e614e8c565b6001019392505050565b600082614e4757614e47614ea2565b500690565b600063ffffffff80841680614e6357614e63614ea2565b92169190910692915050565b6000600160ff1b821415614e8557614e85614e8c565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461241357600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212204fc8bb8fbe4a6180511c555fb50945c51d46905392782489123980074f5f213364736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
