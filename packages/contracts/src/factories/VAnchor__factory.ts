/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "target",
            type: "bytes32",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_resourceId",
        type: "bytes32",
      },
    ],
    name: "parseChainIdFromResourceId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_target",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005cf538038062005cf58339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c6151eb62000b0a60003960008181610bfb01528181611654015281816117280152818161196601528181611ef201528181611fc201528181612058015281816120e9015281816121d00152818161303e015281816130dc01528181613129015281816132fb015261339301526000818161069e0152818161102e0152818161129b01528181611305015281816117d701528181611bac01528181611c3f01528181613434015281816135930152818161389d01526139c70152600081816105cf0152818161139301528181611d0a01528181613add0152613bbd015260008181610b3b01528181613b8d0152613c5601526151eb6000f3fe6080604052600436106103975760003560e01c806390eeb02b116101dc578063c9be725011610102578063e8295588116100a0578063f5ab0dd61161006f578063f5ab0dd614610b8a578063fa73168714610bb9578063fc0c546a14610be9578063fc7e9c6f14610c1d57600080fd5b8063e829558814610ad5578063ec73295914610af5578063ed33639f14610b29578063f178e47c14610b5d57600080fd5b8063dbc916b8116100dc578063dbc916b814610a18578063e4a3011614610a58578063e5285dcc14610a78578063e70ea87c14610aa857600080fd5b8063c9be7250146109c3578063cd87a3b4146109e3578063dad878a5146109f857600080fd5b8063a0d192f51161017a578063bc063e1a11610149578063bc063e1a14610708578063c2230d6e14610939578063c2b40ae414610976578063c80916d4146109a357600080fd5b8063a0d192f5146108af578063b2bc6e0f146108cf578063b7566a67146108ef578063ba70f7571461090f57600080fd5b806395c87d1a116101b657806395c87d1a1461084f5780639bbca3a9146108625780639fa12d0b146108825780639ff80063146105f157600080fd5b806390eeb02b146107ef578063921563111461080c57806394eee0601461083c57600080fd5b80634f401241116102c157806378abb49b1161025f5780638b7e87821161022e5780638b7e8782146107665780638c0d34d8146107975780638ea3099e146107b95780638f1c56bd146107d957600080fd5b806378abb49b146106f25780637fe24ffe14610708578063839df94514610720578063840b27911461075057600080fd5b80636ad481f31161029b5780636ad481f3146106645780636d9833e31461066c57806371523c321461068c57806372c1ad03146106d257600080fd5b80634f401241146105f15780635d2d766c14610611578063616e09571461064457600080fd5b80632d48470c1161033957806343e7119f1161030857806343e7119f14610539578063460b53e3146105715780634c830cbd146105915780634ecf518b146105bd57600080fd5b80632d48470c146104d15780633408e470146104f1578063414a37ba146105045780634167bb1e1461052657600080fd5b806317cc915c1161037557806317cc915c146104195780631e627617146104495780632570b7b41461046b5780632b7ac3f31461049957600080fd5b80630b27fb9a1461039c5780630b6e09f8146103d457806311e4dcb9146103e9575b600080fd5b3480156103a857600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b6103e76103e2366004614410565b610c42565b005b3480156103f557600080fd5b5061040961040436600461456f565b611200565b60405190151581526020016103cb565b34801561042557600080fd5b506104096104343660046143f7565b600c6020526000908152604090205460ff1681565b34801561045557600080fd5b5061045e611295565b6040516103cb91906148ff565b34801561047757600080fd5b5061048b61048636600461456f565b6113f9565b6040519081526020016103cb565b3480156104a557600080fd5b50600b546104b9906001600160a01b031681565b6040516001600160a01b0390911681526020016103cb565b3480156104dd57600080fd5b506103e76104ec3660046143f7565b6114e2565b3480156104fd57600080fd5b504661048b565b34801561051057600080fd5b5061048b60008051602061519683398151915281565b6103e7610534366004614749565b611518565b34801561054557600080fd5b5061048b6105543660046147d9565b600960209081526000928352604080842090915290825290205481565b34801561057d57600080fd5b506103e761058c366004614200565b61163d565b34801561059d57600080fd5b506105a66116c3565b60405165ffffffffffff90911681526020016103cb565b3480156105c957600080fd5b506103ba7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105fd57600080fd5b506103e761060c366004614200565b611711565b34801561061d57600080fd5b506103ba61062c3660046143f7565b600a6020526000908152604090205463ffffffff1681565b34801561065057600080fd5b5061040961065f3660046142d5565b611761565b6103e761194f565b34801561067857600080fd5b506104096106873660046143f7565b6119d6565b34801561069857600080fd5b506106c07f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103cb565b3480156106de57600080fd5b506103e76106ed36600461422c565b611a51565b3480156106fe57600080fd5b5061048b60105481565b34801561071457600080fd5b5061048b600160f81b81565b34801561072c57600080fd5b5061040961073b3660046143f7565b600d6020526000908152604090205460ff1681565b34801561075c57600080fd5b5061048b600f5481565b34801561077257600080fd5b5061077e600160f81b81565b6040516001600160f01b031990911681526020016103cb565b3480156107a357600080fd5b506107ac611ba6565b6040516103cb9190614937565b3480156107c557600080fd5b5061048b6107d436600461453a565b611d76565b3480156107e557600080fd5b5061048b600e5481565b3480156107fb57600080fd5b506003546103ba9063ffffffff1681565b34801561081857600080fd5b506104096108273660046143f7565b60009081526007602052604090205460ff1690565b6103e761084a366004614200565b611ed9565b6103e761085d3660046141bf565b612089565b34801561086e57600080fd5b506103e761087d3660046146e6565b61214f565b34801561088e57600080fd5b506108a261089d366004614261565b612339565b6040516103cb91906148b9565b3480156108bb57600080fd5b506103e76108ca36600461422c565b612401565b3480156108db57600080fd5b506103e76108ea366004614591565b612540565b3480156108fb57600080fd5b506103e761090a36600461464c565b6125a2565b34801561091b57600080fd5b5060035463ffffffff1660009081526002602052604090205461048b565b34801561094557600080fd5b5061095e6109543660046143f7565b603a015160d01c90565b6040516001600160401b0390911681526020016103cb565b34801561098257600080fd5b5061048b6109913660046143f7565b60026020526000908152604090205481565b3480156109af57600080fd5b506005546104b9906001600160a01b031681565b3480156109cf57600080fd5b506103e76109de3660046145c5565b6125bc565b3480156109ef57600080fd5b506103ba601e81565b348015610a0457600080fd5b506103e7610a133660046143f7565b6125cf565b348015610a2457600080fd5b50610a38610a333660046143f7565b612602565b6040805194855260208501939093529183015260608201526080016103cb565b348015610a6457600080fd5b506103e7610a7336600461456f565b61263c565b348015610a8457600080fd5b50610409610a933660046143f7565b6000908152600c602052604090205460ff1690565b348015610ab457600080fd5b5061048b610ac33660046143f7565b60066020526000908152604090205481565b348015610ae157600080fd5b5061048b610af03660046143f7565b612758565b348015610b0157600080fd5b5061048b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610b3557600080fd5b506104b97f000000000000000000000000000000000000000000000000000000000000000081565b348015610b6957600080fd5b5061048b610b783660046143f7565b60016020526000908152604090205481565b348015610b9657600080fd5b50610baa610ba5366004614309565b612d98565b6040516103cb939291906149a9565b348015610bc557600080fd5b50610409610bd43660046143f7565b60076020526000908152604090205460ff1681565b348015610bf557600080fd5b506104b97f000000000000000000000000000000000000000000000000000000000000000081565b348015610c2957600080fd5b506003546103ba90640100000000900463ffffffff1681565b6005546001600160a01b03163314610c755760405162461bcd60e51b8152600401610c6c90614bc3565b60405180910390fd5b60026004541415610c985760405162461bcd60e51b8152600401610c6c90614b42565b60026004556000610cad82603a015160d01c90565b604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b158015610cef57600080fd5b505afa158015610d03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2791906143d5565b15611027576001600160401b038116600090815260066020526040902054600880548592908110610d5a57610d5a615154565b90600052602060002090600402016002015410610db95760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610c6c565b600860066000836001600160401b031681526020019081526020016000205481548110610de857610de8615154565b90600052602060002090600402016002015462010000610e089190614dee565b8310610e665760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610c6c565b600860066000836001600160401b031681526020019081526020016000205481548110610e9557610e95615154565b9060005260206000209060040201600301548214610ef55760405162461bcd60e51b815260206004820152601b60248201527f4e657720746172676574206d757374206265207468652073616d6500000000006044820152606401610c6c565b6001600160401b0381166000908152600660205260409020546008805485919083908110610f2557610f25615154565b9060005260206000209060040201600201819055508460088281548110610f4e57610f4e615154565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e91610f939163ffffffff90911690614e06565b610f9d91906150e8565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff8716908117909155600983528184209084528252918290208a90558151928352820188905281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a150506111f5565b60085460ff7f0000000000000000000000000000000000000000000000000000000000000000161161109b5760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610c6c565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c81528186018c815260608084018d815296850186559489528251600485027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915591517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee582015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690940193909355868652600685528386208190556009855283862086805285528386208b9055835196875293860189905291850189905291939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b60008161120f5750600061128f565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff851684529091529020548414156112585760019250505061128f565b63ffffffff81166112675750601e5b8061127181615075565b9150508163ffffffff168163ffffffff161415611226576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156112d4576112d461516a565b6040519080825280602002602001820160405280156112fd578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff168110156113f357611339816001614dee565b60085410611389576008818154811061135457611354615154565b90600052602060002090600402016001015482828151811061137857611378615154565b6020026020010181815250506113e1565b6113c26113b760017f0000000000000000000000000000000000000000000000000000000000000000614fed565b63ffffffff16612758565b8282815181106113d4576113d4615154565b6020026020010181815250505b806113eb81615095565b915050611303565b50919050565b6000600160f81b821061143c5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b6044820152606401610c6c565b611449600160f81b61510b565b8313801561145a5750600160f81b83125b61149b5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610c6c565b60006114a78385614f97565b905060008112156114d8576114bb8161510b565b6114d390600080516020615196833981519152614fd6565b6114da565b805b949350505050565b6005546001600160a01b0316331461150c5760405162461bcd60e51b8152600401610c6c90614bc3565b61151581600f55565b50565b6115228383612e21565b60008260200151131561156857601054826020015111156115555760405162461bcd60e51b8152600401610c6c90614b79565b611563818360200151611ed9565b611612565b6000826020015112156116125781516001600160a01b03166115cc5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610c6c565b600f5482602001516115dd9061510b565b10156115fb5760405162461bcd60e51b8152600401610c6c90614a6f565b611612818360000151846020015161085d9061510b565b60608201511561162e5761162e82604001518360600151613026565b611638838361318a565b505050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889061168d90339086908690600401614895565b600060405180830381600087803b1580156116a757600080fd5b505af11580156116bb573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161170681615012565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b69061168d90339086908690600401614895565b60006117868260008151811061177957611779615154565b60200260200101516119d6565b6117d25760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610c6c565b6117fd7f00000000000000000000000000000000000000000000000000000000000000006001614e2e565b60ff1682511461184f5760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610c6c565b60005b6008548110156119465760006008828154811061187157611871615154565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506118e78160000151858460016118ca9190614dee565b815181106118da576118da615154565b6020026020010151611200565b6119335760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610c6c565b508061193e81615095565b915050611852565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906119a29033906000908190600401614895565b6000604051808303818588803b1580156119bb57600080fd5b505af11580156119cf573d6000803e3d6000fd5b5050505050565b6000816119e557506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611a17575060019392505050565b63ffffffff8116611a265750601e5b80611a3081615075565b9150508163ffffffff168163ffffffff1614156119f0575060009392505050565b6005546001600160a01b03163314611a7b5760405162461bcd60e51b8152600401610c6c90614bc3565b6001600160a01b038216611ac75760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610c6c565b600b5463ffffffff808316600160a01b9092041610611b185760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610c6c565b600b54611b3490600160a01b900463ffffffff16610418614e06565b63ffffffff168163ffffffff1610611b5e5760405162461bcd60e51b8152600401610c6c90614aba565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611be557611be561516a565b604051908082528060200260200182016040528015611c3757816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181611c035790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff168110156113f357611c73816001614dee565b60085410611cf15760088181548110611c8e57611c8e615154565b9060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050828281518110611ce157611ce1615154565b6020026020010181905250611d64565b604051806080016040528060008152602001611d3360017f00000000000000000000000000000000000000000000000000000000000000006113b79190614fed565b8152602001600081526020016000801b815250828281518110611d5857611d58615154565b60200260200101819052505b80611d6e81615095565b915050611c3d565b60006000805160206151968339815191528310611dd55760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610c6c565b6000805160206151968339815191528210611e3c5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610c6c565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611e7d919060040161499b565b60206040518083038186803b158015611e9557600080fd5b505afa158015611ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecd91906147c0565b925050505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b158015611f3c57600080fd5b505afa158015611f50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7491906147c0565b90506001600160a01b03831661202657803414611f9057600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b15801561200857600080fd5b505af115801561201c573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611fef565b600260045414156120ac5760405162461bcd60e51b8152600401610c6c90614b42565b60026004556120bb30826132e3565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b15801561212d57600080fd5b505af1158015612141573d6000803e3d6000fd5b505060016004555050505050565b600260045414156121725760405162461bcd60e51b8152600401610c6c90614b42565b60026004556121818282612e21565b60008160200151131561225c57601054816020015111156121b45760405162461bcd60e51b8152600401610c6c90614b79565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91612208913391309190600401614895565b602060405180830381600087803b15801561222257600080fd5b505af1158015612236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225a91906143d5565b505b60008160200151121561230a5780516001600160a01b03166122c05760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610c6c565b600f5481602001516122d19061510b565b10156122ef5760405162461bcd60e51b8152600401610c6c90614a6f565b61230a816000015182602001516123059061510b565b6132e3565b6060810151156123265761232681604001518260600151613026565b612330828261318a565b50506001600455565b60606000826001600160401b038111156123555761235561516a565b60405190808252806020026020018201604052801561237e578160200160208202803683370190505b50905060005b838110156123f9576123bd8585838181106123a1576123a1615154565b905060200201356000908152600c602052604090205460ff1690565b156123e75760018282815181106123d6576123d6615154565b911515602092830291909101909101525b806123f181615095565b915050612384565b509392505050565b6005546001600160a01b0316331461242b5760405162461bcd60e51b8152600401610c6c90614bc3565b6001600160a01b0382166124775760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610c6c565b600b5463ffffffff808316600160a01b90920416106124c85760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610c6c565b600b546124e490600160a01b900463ffffffff16610418614e06565b63ffffffff168163ffffffff161061250e5760405162461bcd60e51b8152600401610c6c90614aba565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b031633146125995760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610c6c565b611515816133ba565b6125ab84612540565b6125b6838383611518565b50505050565b6125c583612540565b611638828261214f565b6005546001600160a01b031633146125f95760405162461bcd60e51b8152600401610c6c90614bc3565b61151581601055565b6008818154811061261257600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff161580801561265c5750600054600160ff909116105b806126765750303b158015612676575060005460ff166001145b6126d95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610c6c565b6000805460ff1916600117905580156126fc576000805461ff0019166101001790555b61270583600f55565b61270e82601055565b8015611638576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60008161278657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600114156127b657507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156127e657507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561281657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004141561284657507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b816005141561287657507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600614156128a657507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600714156128d657507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561290657507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561293657507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a141561296657507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b141561299657507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c14156129c657507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156129f657507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e1415612a2657507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f1415612a5657507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415612a8657507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415612ab557507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b8160121415612ae557507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160131415612b1557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b8160141415612b4557507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415612b7557507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612ba557507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612bd557507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612c0557507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612c3557507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612c6557507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612c9557507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612cc557507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612cf557507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612d2557507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612d5557507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610c6c565b919050565b612da0613e45565b612da8613e63565b612db0613e45565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612ebf57612e6783604001518281518110612e4a57612e4a615154565b60200260200101516000908152600c602052604090205460ff1690565b15612ead5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610c6c565b80612eb781615095565b915050612e24565b5060008051602061519683398151915281604051602001612ee09190614bfa565b6040516020818303038152906040528051906020012060001c612f0391906150d4565b60a083015114612f555760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610c6c565b612f67816020015182606001516113f9565b826080015114612fb15760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610c6c565b612fba82613406565b60005b826040015151811015611638576001600c600085604001518481518110612fe657612fe6615154565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061301e90615095565b915050612fbd565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561308857600080fd5b505afa15801561309c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130c091906147c0565b9050811561163857818110613103576116386001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846136c0565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561316d57600080fd5b505af1158015613181573d6000803e3d6000fd5b50505050505050565b606082015180516020909101516131a19190613712565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd91906131e890600290640100000000900463ffffffff16614fed565b83608001516040516131fc93929190614a2e565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461324f90600190640100000000900463ffffffff16614fed565b8360a0015160405161326393929190614a2e565b60405180910390a160005b826040015151811015611638577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106132b2576132b2615154565b60200260200101516040516132c991815260200190565b60405180910390a1806132db81615095565b91505061326e565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561334557600080fd5b505afa158015613359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061337d91906147c0565b9050818110613103576116386001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846136c0565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516133fb9190614a5c565b60405180910390a250565b806040015151600214156135655760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401613470929190614c67565b60006040518083038186803b15801561348857600080fd5b505af415801561349c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134c4919081019061443c565b915091506134d181611761565b61350d5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610c6c565b82516135199083613840565b6116385760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610c6c565b806040015151601014156136785760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016135cf929190614c67565b60006040518083038186803b1580156135e757600080fd5b505af41580156135fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613623919081019061443c565b9150915061363081611761565b61366c5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610c6c565b8251613519908361396a565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610c6c565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526116389084906139f2565b6000828152600d602052604081205460ff16156137415760405162461bcd60e51b8152600401610c6c90614b01565b6000828152600d602052604090205460ff16156137705760405162461bcd60e51b8152600401610c6c90614b01565b600061377c8484613ac4565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b561381c836001614e06565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906138579190614374565b9050600080600061386784612d98565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906138c8908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906001906004016149d2565b60206040518083038186803b1580156138e057600080fd5b505afa1580156138f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061391891906143d5565b9450846139605760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610c6c565b5050505092915050565b600080838060200190518101906139819190614374565b9050600080600061399184612d98565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906138c8908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906000906004016149d2565b6000613a47826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613d319092919063ffffffff16565b8051909150156116385780806020019051810190613a6591906143d5565b6116385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c6c565b600354600090640100000000900463ffffffff16613b037f00000000000000000000000000000000000000000000000000000000000000006002614ebb565b63ffffffff168163ffffffff161415613b775760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610c6c565b6000613b84600283614e53565b90506000613bb37f00000000000000000000000000000000000000000000000000000000000000008787611d76565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613c9d57613bfa6002866150e8565b63ffffffff16613c3557839250613c168163ffffffff16612758565b63ffffffff821660009081526001602052604090208590559150613c51565b63ffffffff811660009081526001602052604090205492508391505b613c7c7f00000000000000000000000000000000000000000000000000000000000000008484611d76565b9350613c89600286614e53565b945080613c95816150b0565b915050613bbb565b50600354600090601e90613cb89063ffffffff166001614e06565b613cc291906150e8565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613cfc908790614e06565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b60606114da8484600085856001600160a01b0385163b613d935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c6c565b600080866001600160a01b03168587604051613daf9190614879565b60006040518083038185875af1925050503d8060008114613dec576040519150601f19603f3d011682016040523d82523d6000602084013e613df1565b606091505b5091509150613e01828286613e0c565b979650505050505050565b60608315613e1b575081611ed2565b825115613e2b5782518084602001fd5b8160405162461bcd60e51b8152600401610c6c9190614a5c565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613e7a613e45565b815260200190600190039081613e725790505090565b8035612d9381615180565b600082601f830112613eac57600080fd5b604051604081018181106001600160401b0382111715613ece57613ece61516a565b8060405250808385604086011115613ee557600080fd5b60005b6002811015613f07578135835260209283019290910190600101613ee8565b509195945050505050565b600082601f830112613f2357600080fd5b81356020613f38613f3383614da4565b614d74565b80838252828201915082860187848660051b8901011115613f5857600080fd5b60005b85811015613f7757813584529284019290840190600101613f5b565b5090979650505050505050565b600082601f830112613f9557600080fd5b8135613fa3613f3382614dc7565b818152846020838601011115613fb857600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613fe757600080fd5b604051604081016001600160401b03828210818311171561400a5761400a61516a565b816040528293508435915061401e82615180565b9082526020840135908082111561403457600080fd5b5061404185828601613f84565b6020830152505092915050565b600060c0828403121561406057600080fd5b614068614d29565b905061407382613e90565b81526020820135602082015261408b60408301613e90565b60408201526060820135606082015260808201356001600160401b03808211156140b457600080fd5b6140c085838601613f84565b608084015260a08401359150808211156140d957600080fd5b506140e684828501613f84565b60a08301525092915050565b600060e0828403121561410457600080fd5b61410c614d29565b905081356001600160401b038082111561412557600080fd5b61413185838601613f84565b8352602084013591508082111561414757600080fd5b61415385838601613f84565b6020840152604084013591508082111561416c57600080fd5b5061417984828501613f12565b60408301525061418c8360608401613e9b565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612d9357600080fd5b6000806000606084860312156141d457600080fd5b83356141df81615180565b925060208401356141ef81615180565b929592945050506040919091013590565b6000806040838503121561421357600080fd5b823561421e81615180565b946020939093013593505050565b6000806040838503121561423f57600080fd5b823561424a81615180565b9150614258602084016141ab565b90509250929050565b6000806020838503121561427457600080fd5b82356001600160401b038082111561428b57600080fd5b818501915085601f83011261429f57600080fd5b8135818111156142ae57600080fd5b8660208260051b85010111156142c357600080fd5b60209290920196919550909350505050565b6000602082840312156142e757600080fd5b81356001600160401b038111156142fd57600080fd5b6114da84828501613f12565b600061010080838503121561431d57600080fd5b83601f84011261432c57600080fd5b614334614d51565b808486848701111561434557600080fd5b600093505b600884101561436a5780358352600193909301926020928301920161434a565b5095945050505050565b600061010080838503121561438857600080fd5b83601f84011261439757600080fd5b61439f614d51565b80848684870111156143b057600080fd5b600093505b600884101561436a578051835260019390930192602092830192016143b5565b6000602082840312156143e757600080fd5b815180151581146114d857600080fd5b60006020828403121561440957600080fd5b5035919050565b60008060006060848603121561442557600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561444f57600080fd5b82516001600160401b038082111561446657600080fd5b818501915085601f83011261447a57600080fd5b8151602061448a613f3383614dc7565b828152888284870101111561449e57600080fd5b6144ad83838301848801615049565b878201519096509350828411156144c357600080fd5b838701935087601f8501126144d757600080fd5b835192506144e7613f3384614da4565b8381528181019250848201600585901b860183018a101561450757600080fd5b600095505b8486101561452a57805184526001959095019492820192820161450c565b5080955050505050509250929050565b60008060006060848603121561454f57600080fd5b833561455a81615180565b95602085013595506040909401359392505050565b6000806040838503121561458257600080fd5b50508035926020909101359150565b6000602082840312156145a357600080fd5b81356001600160401b038111156145b957600080fd5b6114da84828501613fd5565b6000806000606084860312156145da57600080fd5b83356001600160401b03808211156145f157600080fd5b6145fd87838801613fd5565b9450602086013591508082111561461357600080fd5b61461f878388016140f2565b9350604086013591508082111561463557600080fd5b506146428682870161404e565b9150509250925092565b6000806000806080858703121561466257600080fd5b84356001600160401b038082111561467957600080fd5b61468588838901613fd5565b9550602087013591508082111561469b57600080fd5b6146a7888389016140f2565b945060408701359150808211156146bd57600080fd5b506146ca8782880161404e565b92505060608501356146db81615180565b939692955090935050565b600080604083850312156146f957600080fd5b82356001600160401b038082111561471057600080fd5b61471c868387016140f2565b9350602085013591508082111561473257600080fd5b5061473f8582860161404e565b9150509250929050565b60008060006060848603121561475e57600080fd5b83356001600160401b038082111561477557600080fd5b614781878388016140f2565b9450602086013591508082111561479757600080fd5b506147a48682870161404e565b92505060408401356147b581615180565b809150509250925092565b6000602082840312156147d257600080fd5b5051919050565b600080604083850312156147ec57600080fd5b82359150614258602084016141ab565b8060005b60028110156125b65761481484835161482a565b6040939093019260209190910190600101614800565b8060005b60028110156125b657815184526020938401939091019060010161482e565b60008151808452614865816020860160208601615049565b601f01601f19169290920160200192915050565b6000825161488b818460208701615049565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156148f35783511515835292840192918401916001016148d5565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156148f35783518352928401929184019160010161491b565b602080825282518282018190526000919060409081850190868401855b8281101561498e57815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101614954565b5091979650505050505050565b6040810161128f828461482a565b61010081016149b8828661482a565b6149c560408301856147fc565b6114da60c083018461482a565b60006101606149e1838a61482a565b6149ee60408401896147fc565b6149fb60c084018861482a565b80610100840152614a0e8184018761484d565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614a53606083018461484d565b95945050505050565b602081526000611ed2602083018461484d565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614c4a60e084018261484d565b905060a0840151601f198483030160c0850152614a53828261484d565b604081526000835160e06040840152614c8461012084018261484d565b9050602080860151603f1980868503016060870152614ca3848361484d565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614ce55784518252938301936001929092019190830190614cc5565b5060608801519350614cfa60a087018561482a565b608088015160e087015260a088015161010087015260ff8716838701529350614d209050565b50509392505050565b60405160c081016001600160401b0381118282101715614d4b57614d4b61516a565b60405290565b60405161010081016001600160401b0381118282101715614d4b57614d4b61516a565b604051601f8201601f191681016001600160401b0381118282101715614d9c57614d9c61516a565b604052919050565b60006001600160401b03821115614dbd57614dbd61516a565b5060051b60200190565b60006001600160401b03821115614de057614de061516a565b50601f01601f191660200190565b60008219821115614e0157614e01615128565b500190565b600063ffffffff808316818516808303821115614e2557614e25615128565b01949350505050565b600060ff821660ff84168060ff03821115614e4b57614e4b615128565b019392505050565b600063ffffffff80841680614e6a57614e6a61513e565b92169190910492915050565b600181815b80851115614eb3578163ffffffff04821115614e9957614e99615128565b80851615614ea657918102915b93841c9390800290614e7b565b509250929050565b600063ffffffff6114da818516828516600082614eda5750600161128f565b81614ee75750600061128f565b8160018114614efd5760028114614f0757614f38565b600191505061128f565b60ff841115614f1857614f18615128565b6001841b915063ffffffff821115614f3257614f32615128565b5061128f565b5060208310610133831016604e8410600b8410161715614f6f575081810a63ffffffff811115614f6a57614f6a615128565b61128f565b614f798383614e76565b8063ffffffff04821115614f8f57614f8f615128565b029392505050565b60008083128015600160ff1b850184121615614fb557614fb5615128565b6001600160ff1b0384018313811615614fd057614fd0615128565b50500390565b600082821015614fe857614fe8615128565b500390565b600063ffffffff8381169083168181101561500a5761500a615128565b039392505050565b805160208201516001600160d01b031980821692919060068310156150415780818460060360031b1b83161693505b505050919050565b60005b8381101561506457818101518382015260200161504c565b838111156125b65750506000910152565b600063ffffffff82168061508b5761508b615128565b6000190192915050565b60006000198214156150a9576150a9615128565b5060010190565b600063ffffffff808316818114156150ca576150ca615128565b6001019392505050565b6000826150e3576150e361513e565b500690565b600063ffffffff808416806150ff576150ff61513e565b92169190910692915050565b6000600160ff1b82141561512157615121615128565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461151557600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122057b48fda4e664cd3306d867e5bc2dfd98bd773d31a15c4a0a874e1f2c04967d264736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
