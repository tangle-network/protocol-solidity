/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "srcResourceID",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "srcResourceID",
            type: "bytes32",
          },
        ],
        internalType: "struct Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_resourceId",
        type: "bytes32",
      },
    ],
    name: "parseChainIdFromResourceId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "keyData",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafindex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_leafIndex",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_srcResourceID",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000805462010000600160501b03191690556005805463ffffffff191690553480156200003057600080fd5b50604051620052e8380380620052e88339810160408190526200005391620003d7565b85858585848183858383838383818360008263ffffffff1611620000ca5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001225760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c1565b6000805463ffffffff60501b19166a010000000000000000000063ffffffff851602178155600280546001600160a01b0319166001600160a01b0384161790555b8263ffffffff168163ffffffff1610156200022857600254604051631d052ab160e31b815263ffffffff831660048201526001600160a01b039091169063e82955889060240160206040518083038186803b158015620001c257600080fd5b505afa158015620001d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001fd9190620003bd565b63ffffffff8216600090815260036020526040902055806200021f81620004a0565b91505062000163565b506040805180820190915260025481906001600160a01b031663e82955886200025360018762000478565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156200029157600080fd5b505afa158015620002a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002cc9190620003bd565b8152600060209182018190528052600180825282517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49559101517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a55600455505060058054600160201b600160c01b0319166401000000006001600160a01b039687160217905560f81b7fff00000000000000000000000000000000000000000000000000000000000000166080525050601080546001600160a01b0319169a90911699909917909855505050505060609490941b6001600160601b03191660a05250620004f69650505050505050565b600060208284031215620003d057600080fd5b5051919050565b60008060008060008060c08789031215620003f157600080fd5b8651620003fe81620004dd565b602088015190965063ffffffff811681146200041957600080fd5b60408801519095506200042c81620004dd565b60608801519094506200043f81620004dd565b60808801519093506200045281620004dd565b60a088015190925060ff811681146200046a57600080fd5b809150509295509295509295565b600063ffffffff83811690831681811015620004985762000498620004c7565b039392505050565b600063ffffffff80831681811415620004bd57620004bd620004c7565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620004f357600080fd5b50565b60805160f81c60a05160601c614d2c620005bc60003960008181610be5015281816111050152818161115401528181611228015281816115fe01528181611b6b01528181611c3b01528181611cd101528181611d2f01528181611d8301528181611e6a01528181611f8e0152611fd40152600081816106bb01528181610cde01528181610d48015281816112f10152818161147701528181611837015281816118ca015281816124d701528181613024015281816130d601526131ad0152614d2c6000f3fe60806040526004361061038c5760003560e01c80638c832b13116101dc578063c2230d6e11610102578063e70ea87c116100a0578063f5ab0dd61161006f578063f5ab0dd614610b74578063fa73168714610ba3578063fc0c546a14610bd3578063fc7e9c6f14610c0757600080fd5b8063e70ea87c14610ac6578063ec73295914610af3578063ed33639f14610b27578063f178e47c14610b4757600080fd5b8063cd87a3b4116100dc578063cd87a3b414610a21578063dbc916b814610a36578063e4a3011614610a76578063e5285dcc14610a9657600080fd5b8063c2230d6e14610973578063c2b40ae4146109b1578063c80916d4146109fa57600080fd5b806399c0148c1161017a578063a0d192f511610149578063a0d192f514610905578063b2bc6e0f14610925578063ba70f75714610945578063bc063e1a1461072557600080fd5b806399c0148c146108a55780639fa12d0b146108c55780639ff80063146105ee578063a07b7e1d146108f257600080fd5b806390eeb02b116101b657806390eeb02b1461082c578063921563111461084f57806394eee0601461087f57806395c87d1a1461089257600080fd5b80638c832b13146107d65780638ea3099e146107f65780638f1c56bd1461081657600080fd5b80634ecf518b116102c157806371523c321161025f578063839df9451161022e578063839df9451461073d578063840b27911461076d5780638b7e8782146107835780638c0d34d8146107b457600080fd5b806371523c32146106a957806372c1ad03146106ef57806378abb49b1461070f5780637fe24ffe1461072557600080fd5b80635d2d766c1161029b5780635d2d766c1461062e578063616e0957146106615780636ad481f3146106815780636d9833e31461068957600080fd5b80634ecf518b146105ca5780634f401241146105ee5780635cc5e80b1461060e57600080fd5b806325db9a7d1161032e578063414a37ba11610308578063414a37ba1461051257806343e7119f14610546578063460b53e31461057e5780634c830cbd1461059e57600080fd5b806325db9a7d146104b45780632b7ac3f3146104c75780633408e470146104ff57600080fd5b806317cc915c1161036a57806317cc915c146104145780631e627617146104445780631f7f99f7146104665780632570b7b41461048657600080fd5b806308724aff146103915780630b27fb9a146103b357806311e4dcb9146103e4575b600080fd5b34801561039d57600080fd5b506103b16103ac36600461410f565b610c2b565b005b3480156103bf57600080fd5b5060055463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103f057600080fd5b506104046103ff3660046140b9565b610c43565b60405190151581526020016103db565b34801561042057600080fd5b5061040461042f366004613f1f565b600b6020526000908152604090205460ff1681565b34801561045057600080fd5b50610459610cd8565b6040516103db9190614430565b34801561047257600080fd5b506103b161048136600461430a565b610ea9565b34801561049257600080fd5b506104a66104a13660046140b9565b610f01565b6040519081526020016103db565b6103b16104c2366004614293565b610ffc565b3480156104d357600080fd5b506010546104e7906001600160a01b031681565b6040516001600160a01b0390911681526020016103db565b34801561050b57600080fd5b50466104a6565b34801561051e57600080fd5b506104a67f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561055257600080fd5b506104a661056136600461430a565b600960209081526000928352604080842090915290825290205481565b34801561058a57600080fd5b506103b1610599366004613d28565b61113d565b3480156105aa57600080fd5b506105b36111c3565b60405165ffffffffffff90911681526020016103db565b3480156105d657600080fd5b506000546103ca90600160501b900463ffffffff1681565b3480156105fa57600080fd5b506103b1610609366004613d28565b611211565b34801561061a57600080fd5b506103b1610629366004614196565b611261565b34801561063a57600080fd5b506103ca610649366004613f1f565b600a6020526000908152604090205463ffffffff1681565b34801561066d57600080fd5b5061040461067c366004613dfd565b61127b565b6103b16115e7565b34801561069557600080fd5b506104046106a4366004613f1f565b61166e565b3480156106b557600080fd5b506106dd7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103db565b3480156106fb57600080fd5b506103b161070a366004613d54565b6116ef565b34801561071b57600080fd5b506104a6600f5481565b34801561073157600080fd5b506104a6600160f81b81565b34801561074957600080fd5b50610404610758366004613f1f565b600c6020526000908152604090205460ff1681565b34801561077957600080fd5b506104a6600e5481565b34801561078f57600080fd5b5061079b600160f81b81565b6040516001600160f01b031990911681526020016103db565b3480156107c057600080fd5b506107c9611831565b6040516103db9190614468565b3480156107e257600080fd5b506103b16107f136600461430a565b611a77565b34801561080257600080fd5b506104a6610811366004614084565b611ac6565b34801561082257600080fd5b506104a6600d5481565b34801561083857600080fd5b506000546103ca9062010000900463ffffffff1681565b34801561085b57600080fd5b5061040461086a366004613f1f565b60009081526007602052604090205460ff1690565b6103b161088d366004613d28565b611b52565b6103b16108a0366004613ce7565b611d02565b3480156108b157600080fd5b506103b16108c0366004614230565b611de9565b3480156108d157600080fd5b506108e56108e0366004613d89565b612015565b6040516103db91906143ea565b6103b1610900366004613f51565b6120dd565b34801561091157600080fd5b506103b1610920366004613d54565b6126ad565b34801561093157600080fd5b506103b16109403660046140db565b6127ef565b34801561095157600080fd5b506000805462010000900463ffffffff168152600160205260409020546104a6565b34801561097f57600080fd5b5061099961098e366004613f1f565b65ffffffffffff1690565b6040516001600160401b0390911681526020016103db565b3480156109bd57600080fd5b506109e56109cc366004613f1f565b6001602081905260009182526040909120805491015482565b604080519283526020830191909152016103db565b348015610a0657600080fd5b506005546104e790600160201b90046001600160a01b031681565b348015610a2d57600080fd5b506103ca601e81565b348015610a4257600080fd5b50610a56610a51366004613f1f565b612854565b6040805194855260208501939093529183015260608201526080016103db565b348015610a8257600080fd5b506103b1610a913660046140b9565b61288e565b348015610aa257600080fd5b50610404610ab1366004613f1f565b6000908152600b602052604090205460ff1690565b348015610ad257600080fd5b506104a6610ae1366004613f1f565b60066020526000908152604090205481565b348015610aff57600080fd5b506104a67f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610b3357600080fd5b506002546104e7906001600160a01b031681565b348015610b5357600080fd5b506104a6610b62366004613f1f565b60036020526000908152604090205481565b348015610b8057600080fd5b50610b94610b8f366004613e31565b6129b7565b6040516103db939291906144cc565b348015610baf57600080fd5b50610404610bbe366004613f1f565b60076020526000908152604090205460ff1681565b348015610bdf57600080fd5b506104e77f000000000000000000000000000000000000000000000000000000000000000081565b348015610c1357600080fd5b506000546103ca90600160301b900463ffffffff1681565b610c34836127ef565b610c3e8282611de9565b505050565b600081610c5257506000610cd2565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610c9b57600192505050610cd2565b63ffffffff8116610caa5750601e5b80610cb481614bd6565b9150508163ffffffff168163ffffffff161415610c69576000925050505b92915050565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610d1757610d17614ccb565b604051908082528060200260200182016040528015610d40578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ea357610d7c81600161494f565b60085410610dcc5760088181548110610d9757610d97614cb5565b906000526020600020906004020160010154828281518110610dbb57610dbb614cb5565b602002602001018181525050610e91565b6002546000546001600160a01b039091169063e829558890610dfd90600190600160501b900463ffffffff16614b4e565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b158015610e3a57600080fd5b505afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e729190613f38565b828281518110610e8457610e84614cb5565b6020026020010181815250505b80610e9b81614bf6565b915050610d46565b50919050565b600554600160201b90046001600160a01b03163314610ee35760405162461bcd60e51b8152600401610eda906146e6565b60405180910390fd5b6005805463ffffffff191663ffffffff8316179055600e8290555050565b6000600160f81b8210610f445760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b6044820152606401610eda565b610f51600160f81b614c6c565b83138015610f625750600160f81b83125b610fa35760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610eda565b6000610faf8385614af8565b90506000811215610ff257610fc381614c6c565b610fed907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001614b37565b610ff4565b805b949350505050565b6110068383612a40565b60008260200151131561104c57600f54826020015111156110395760405162461bcd60e51b8152600401610eda9061469c565b611047818360200151611b52565b6110f6565b6000826020015112156110f65781516001600160a01b03166110b05760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610eda565b600e5482602001516110c190614c6c565b10156110df5760405162461bcd60e51b8152600401610eda90614592565b6110f681836000015184602001516108a090614c6c565b606082015115611133576111337f000000000000000000000000000000000000000000000000000000000000000083604001518460600151612c57565b610c3e8383612d43565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889061118d903390869086906004016143c6565b600060405180830381600087803b1580156111a757600080fd5b505af11580156111bb573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161120681614b73565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b69061118d903390869086906004016143c6565b61126a846127ef565b611275838383610ffc565b50505050565b60006112a08260008151811061129357611293614cb5565b602002602001015161166e565b6112ec5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610eda565b6113177f0000000000000000000000000000000000000000000000000000000000000000600161498f565b60ff168251146113695760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610eda565b600160005b6008548110156114705760006008828154811061138d5761138d614cb5565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506114038160000151868460016113e6919061494f565b815181106113f6576113f6614cb5565b6020026020010151610c43565b61144f5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610eda565b8261145981614bf6565b93505050808061146890614bf6565b91505061136e565b505b61149d7f0000000000000000000000000000000000000000000000000000000000000000600161498f565b60ff1681146115de576002546000546001600160a01b039091169063e8295588906114d790600190600160501b900463ffffffff16614b4e565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b15801561151457600080fd5b505afa158015611528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154c9190613f38565b83828151811061155e5761155e614cb5565b6020026020010151146115cc5760405162461bcd60e51b815260206004820152603060248201527f6e6f6e2d6578697374656e742065646765206973206e6f742073657420746f2060448201526f1d1a1948191959985d5b1d081c9bdbdd60821b6064820152608401610eda565b806115d681614bf6565b915050611472565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890349061163a90339060009081906004016143c6565b6000604051808303818588803b15801561165357600080fd5b505af1158015611667573d6000803e3d6000fd5b5050505050565b60008161167d57506000919050565b60005462010000900463ffffffff16805b63ffffffff81166000908152600160205260409020548414156116b5575060019392505050565b63ffffffff81166116c45750601e5b806116ce81614bd6565b9150508163ffffffff168163ffffffff16141561168e575060009392505050565b600554600160201b90046001600160a01b031633146117205760405162461bcd60e51b8152600401610eda906146e6565b6001600160a01b03821661176c5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610eda565b60055463ffffffff8083169116106117b65760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610eda565b6005546117cb9063ffffffff16610418614967565b63ffffffff168163ffffffff16106117f55760405162461bcd60e51b8152600401610eda906145dd565b600580546001600160c01b031916600160201b6001600160a01b03949094169390930263ffffffff19169290921763ffffffff91909116179055565b606060007f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b0381111561187057611870614ccb565b6040519080825280602002602001820160405280156118c257816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161188e5790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610ea3576118fe81600161494f565b6008541061197c576008818154811061191957611919614cb5565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505082828151811061196c5761196c614cb5565b6020026020010181905250611a65565b60408051608081019091526000808252600254905460208301916001600160a01b03169063e8295588906119bf90600190600160501b900463ffffffff16614b4e565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156119fc57600080fd5b505afa158015611a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a349190613f38565b8152602001600081526020016000801b815250828281518110611a5957611a59614cb5565b60200260200101819052505b80611a6f81614bf6565b9150506118c8565b600554600160201b90046001600160a01b03163314611aa85760405162461bcd60e51b8152600401610eda906146e6565b6005805463ffffffff191663ffffffff8316179055600f8290555050565b604051635bb9399560e01b815260048101839052602481018290526000906001600160a01b03851690635bb939959060440160206040518083038186803b158015611b1057600080fd5b505afa158015611b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b489190613f38565b90505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b158015611bb557600080fd5b505afa158015611bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bed9190613f38565b90506001600160a01b038316611c9f57803414611c0957600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b158015611c8157600080fd5b505af1158015611c95573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611c68565b60026004541415611d255760405162461bcd60e51b8152600401610eda90614665565b6002600455611d557f00000000000000000000000000000000000000000000000000000000000000003083612e9a565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611dc757600080fd5b505af1158015611ddb573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611e0c5760405162461bcd60e51b8152600401610eda90614665565b6002600455611e1b8282612a40565b600081602001511315611ef657600f5481602001511115611e4e5760405162461bcd60e51b8152600401610eda9061469c565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91611ea29133913091906004016143c6565b602060405180830381600087803b158015611ebc57600080fd5b505af1158015611ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef49190613efd565b505b600081602001511215611fc55780516001600160a01b0316611f5a5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610eda565b600e548160200151611f6b90614c6c565b1015611f895760405162461bcd60e51b8152600401610eda90614592565b611fc57f000000000000000000000000000000000000000000000000000000000000000082600001518360200151611fc090614c6c565b612e9a565b606081015115612002576120027f000000000000000000000000000000000000000000000000000000000000000082604001518360600151612c57565b61200c8282612d43565b50506001600455565b60606000826001600160401b0381111561203157612031614ccb565b60405190808252806020026020018201604052801561205a578160200160208202803683370190505b50905060005b838110156120d55761209985858381811061207d5761207d614cb5565b905060200201356000908152600b602052604090205460ff1690565b156120c35760018282815181106120b2576120b2614cb5565b911515602092830291909101909101525b806120cd81614bf6565b915050612060565b509392505050565b600554600160201b90046001600160a01b0316331461210e5760405162461bcd60e51b8152600401610eda906146e6565b600260045414156121315760405162461bcd60e51b8152600401610eda90614665565b6002600455600065ffffffffffff8216604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b15801561218357600080fd5b505afa158015612197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bb9190613efd565b156124d0576001600160401b0381166000908152600660205260409020546008805463ffffffff8616929081106121f4576121f4614cb5565b906000526020600020906004020160020154106122535760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610eda565b600860066000836001600160401b03168152602001908152602001600020548154811061228257612282614cb5565b906000526020600020906004020160020154620100006122a2919061494f565b8363ffffffff16106123065760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610eda565b600860066000836001600160401b03168152602001908152602001600020548154811061233557612335614cb5565b90600052602060002090600402016003015482146123955760405162461bcd60e51b815260206004820152601e60248201527f7372635265736f757263654944206d757374206265207468652073616d6500006044820152606401610eda565b6001600160401b0381166000908152600660205260409020546008805463ffffffff86169190839081106123cb576123cb614cb5565b90600052602060002090600402016002018190555084600882815481106123f4576123f4614cb5565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e916124399163ffffffff90911690614967565b6124439190614c49565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff878116918217909255600984528285209085528352928190208b905580519384529189169083015281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a150506126a2565b60085460ff7f000000000000000000000000000000000000000000000000000000000000000016116125445760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610eda565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c815263ffffffff8c1682870181815260608085018e81529786018755958a528351600486027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee583015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690910155878752600686528487208290556009865284872087805286528487208c9055845197885294870192909252918501899052939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b600554600160201b90046001600160a01b031633146126de5760405162461bcd60e51b8152600401610eda906146e6565b6001600160a01b03821661272a5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610eda565b60055463ffffffff8083169116106127745760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610eda565b6005546127899063ffffffff16610418614967565b63ffffffff168163ffffffff16106127b35760405162461bcd60e51b8152600401610eda906145dd565b601080546001600160a01b0319166001600160a01b0393909316929092179091556005805463ffffffff191663ffffffff909216919091179055565b80516001600160a01b031633146128485760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610eda565b61285181612f31565b50565b6008818154811061286457600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff16158080156128ae5750600054600160ff909116105b806128c85750303b1580156128c8575060005460ff166001145b61292b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610eda565b6000805460ff19166001179055801561294e576000805461ff0019166101001790555b6005805463ffffffff1916905561296483600e55565b61296d82600f55565b8015610c3e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6129bf61394c565b6129c761396a565b6129cf61394c565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612ade57612a8683604001518281518110612a6957612a69614cb5565b60200260200101516000908152600b602052604090205460ff1690565b15612acc5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610eda565b80612ad681614bf6565b915050612a43565b507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181604051602001612b11919061471d565b6040516020818303038152906040528051906020012060001c612b349190614c35565b60a083015114612b865760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610eda565b612b9881602001518260600151610f01565b826080015114612be25760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610eda565b612beb82612f7d565b60005b826040015151811015610c3e576001600b600085604001518481518110612c1757612c17614cb5565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612c4f90614bf6565b915050612bee565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b158015612c9957600080fd5b505afa158015612cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd19190613f38565b9050811561127557818110612cf957612cf46001600160a01b038516848461321d565b611275565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490528516906340c10f1990604401600060405180830381600087803b158015611c8157600080fd5b60608201518051602090910151612d5a919061326f565b506060820151516000547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9190612da090600290600160301b900463ffffffff16614b4e565b8360c00151604051612db493929190614551565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9060016020020151600054612e0690600190600160301b900463ffffffff16614b4e565b8360e00151604051612e1a93929190614551565b60405180910390a160005b826040015151811015610c3e577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce83604001518281518110612e6957612e69614cb5565b6020026020010151604051612e8091815260200190565b60405180910390a180612e9281614bf6565b915050612e25565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b158015612edc57600080fd5b505afa158015612ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f149190613f38565b9050818110612cf957612cf46001600160a01b038516848461321d565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e508260200151604051612f72919061457f565b60405180910390a250565b80604001515160021480612f9657508060400151516010145b612fe25760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206e756d626572206f6620696e7075747300000000000000006044820152606401610eda565b604081015151600214600080826130a557604051637dc45e3f60e01b815273__$c855d983235a063579a323068f4c8734f9$__90637dc45e3f9061304c9087907f0000000000000000000000000000000000000000000000000000000000000000906004016147c8565b60006040518083038186803b15801561306457600080fd5b505af4158015613078573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526130a09190810190613f86565b613152565b60405163416e849160e01b815273__$c855d983235a063579a323068f4c8734f9$__9063416e8491906130fe9087907f0000000000000000000000000000000000000000000000000000000000000000906004016147c8565b60006040518083038186803b15801561311657600080fd5b505af415801561312a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526131529190810190613f86565b9150915061315f8161127b565b6131a35760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642076616e63686f7220726f6f747360581b6044820152606401610eda565b83516131d19083857f000000000000000000000000000000000000000000000000000000000000000061339d565b6112755760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610eda565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c3e9084906134bc565b6000828152600c602052604081205460ff161561329e5760405162461bcd60e51b8152600401610eda90614624565b6000828152600c602052604090205460ff16156132cd5760405162461bcd60e51b8152600401610eda90614624565b60006132d9848461358e565b6000858152600c602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5613379836001614967565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080858060200190518101906133b49190613e9c565b905060008060006133c4846129b7565b9250925092506000601060009054906101000a90046001600160a01b03166001600160a01b0316638041ca538585858d8c8e6040518763ffffffff1660e01b8152600401613417969594939291906144f5565b60206040518083038186803b15801561342f57600080fd5b505afa158015613443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134679190613efd565b9050806134af5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610eda565b9998505050505050505050565b6000613511826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166138389092919063ffffffff16565b805190915015610c3e578080602001905181019061352f9190613efd565b610c3e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610eda565b6000805463ffffffff600160301b82048116916135b591600160501b909104166002614a1c565b63ffffffff168163ffffffff1614156136295760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610eda565b60006136366002836149b4565b600254909150600090613653906001600160a01b03168787611ac6565b905060008060015b60005463ffffffff600160501b9091048116908216101561378257613681600286614c49565b63ffffffff1661372e57600254604051631d052ab160e31b815263ffffffff831660048201528594506001600160a01b039091169063e82955889060240160206040518083038186803b1580156136d757600080fd5b505afa1580156136eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061370f9190613f38565b63ffffffff82166000908152600360205260409020859055915061374a565b63ffffffff811660009081526003602052604090205492508391505b600254613761906001600160a01b03168484611ac6565b935061376e6002866149b4565b94508061377a81614c11565b91505061365b565b5060008054601e906137a19062010000900463ffffffff166001614967565b6137ab9190614c49565b6000805465ffffffff000019166201000063ffffffff84160217905590506137d4866002614967565b6000805469ffffffff0000000000001916600160301b63ffffffff9384168102919091178083556040805180820182529889529190048316602080890191825294909316825260019384905290209451855551930192909255509195945050505050565b6060611b488484600085856001600160a01b0385163b61389a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610eda565b600080866001600160a01b031685876040516138b691906143aa565b60006040518083038185875af1925050503d80600081146138f3576040519150601f19603f3d011682016040523d82523d6000602084013e6138f8565b606091505b5091509150613908828286613913565b979650505050505050565b60608315613922575081611b4b565b8251156139325782518084602001fd5b8160405162461bcd60e51b8152600401610eda919061457f565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b61398161394c565b8152602001906001900390816139795790505090565b80356139a281614ce1565b919050565b600082601f8301126139b857600080fd5b604051604081018181106001600160401b03821117156139da576139da614ccb565b80604052508083856040860111156139f157600080fd5b60005b6002811015613a135781358352602092830192909101906001016139f4565b509195945050505050565b600082601f830112613a2f57600080fd5b81356020613a44613a3f83614905565b6148d5565b80838252828201915082860187848660051b8901011115613a6457600080fd5b60005b85811015613a8357813584529284019290840190600101613a67565b5090979650505050505050565b600082601f830112613aa157600080fd5b8135613aaf613a3f82614928565b818152846020838601011115613ac457600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613af357600080fd5b604051604081016001600160401b038282108183111715613b1657613b16614ccb565b8160405282935084359150613b2a82614ce1565b90825260208401359080821115613b4057600080fd5b50613b4d85828601613a90565b6020830152505092915050565b60006101008284031215613b6d57600080fd5b613b7561488a565b9050613b8082613997565b815260208201356020820152613b9860408301613997565b60408201526060820135606082015260808201356080820152613bbd60a08301613997565b60a082015260c08201356001600160401b0380821115613bdc57600080fd5b613be885838601613a90565b60c084015260e0840135915080821115613c0157600080fd5b50613c0e84828501613a90565b60e08301525092915050565b600060e08284031215613c2c57600080fd5b613c346148b3565b905081356001600160401b0380821115613c4d57600080fd5b613c5985838601613a90565b83526020840135915080821115613c6f57600080fd5b613c7b85838601613a90565b60208401526040840135915080821115613c9457600080fd5b50613ca184828501613a1e565b604083015250613cb483606084016139a7565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff811681146139a257600080fd5b600080600060608486031215613cfc57600080fd5b8335613d0781614ce1565b92506020840135613d1781614ce1565b929592945050506040919091013590565b60008060408385031215613d3b57600080fd5b8235613d4681614ce1565b946020939093013593505050565b60008060408385031215613d6757600080fd5b8235613d7281614ce1565b9150613d8060208401613cd3565b90509250929050565b60008060208385031215613d9c57600080fd5b82356001600160401b0380821115613db357600080fd5b818501915085601f830112613dc757600080fd5b813581811115613dd657600080fd5b8660208260051b8501011115613deb57600080fd5b60209290920196919550909350505050565b600060208284031215613e0f57600080fd5b81356001600160401b03811115613e2557600080fd5b610ff484828501613a1e565b6000610100808385031215613e4557600080fd5b83601f840112613e5457600080fd5b613e5c61488a565b8084868487011115613e6d57600080fd5b600093505b6008841015613e9257803583526001939093019260209283019201613e72565b5095945050505050565b6000610100808385031215613eb057600080fd5b83601f840112613ebf57600080fd5b613ec761488a565b8084868487011115613ed857600080fd5b600093505b6008841015613e9257805183526001939093019260209283019201613edd565b600060208284031215613f0f57600080fd5b81518015158114610ff257600080fd5b600060208284031215613f3157600080fd5b5035919050565b600060208284031215613f4a57600080fd5b5051919050565b600080600060608486031215613f6657600080fd5b83359250613f7660208501613cd3565b9150604084013590509250925092565b60008060408385031215613f9957600080fd5b82516001600160401b0380821115613fb057600080fd5b818501915085601f830112613fc457600080fd5b81516020613fd4613a3f83614928565b8281528882848701011115613fe857600080fd5b613ff783838301848801614baa565b8782015190965093508284111561400d57600080fd5b838701935087601f85011261402157600080fd5b83519250614031613a3f84614905565b8381528181019250848201600585901b860183018a101561405157600080fd5b600095505b84861015614074578051845260019590950194928201928201614056565b5080955050505050509250929050565b60008060006060848603121561409957600080fd5b83356140a481614ce1565b95602085013595506040909401359392505050565b600080604083850312156140cc57600080fd5b50508035926020909101359150565b6000602082840312156140ed57600080fd5b81356001600160401b0381111561410357600080fd5b610ff484828501613ae1565b60008060006060848603121561412457600080fd5b83356001600160401b038082111561413b57600080fd5b61414787838801613ae1565b9450602086013591508082111561415d57600080fd5b61416987838801613c1a565b9350604086013591508082111561417f57600080fd5b5061418c86828701613b5a565b9150509250925092565b600080600080608085870312156141ac57600080fd5b84356001600160401b03808211156141c357600080fd5b6141cf88838901613ae1565b955060208701359150808211156141e557600080fd5b6141f188838901613c1a565b9450604087013591508082111561420757600080fd5b5061421487828801613b5a565b925050606085013561422581614ce1565b939692955090935050565b6000806040838503121561424357600080fd5b82356001600160401b038082111561425a57600080fd5b61426686838701613c1a565b9350602085013591508082111561427c57600080fd5b5061428985828601613b5a565b9150509250929050565b6000806000606084860312156142a857600080fd5b83356001600160401b03808211156142bf57600080fd5b6142cb87838801613c1a565b945060208601359150808211156142e157600080fd5b506142ee86828701613b5a565b92505060408401356142ff81614ce1565b809150509250925092565b6000806040838503121561431d57600080fd5b82359150613d8060208401613cd3565b8060005b60028110156112755761434584835161435b565b6040939093019260209190910190600101614331565b8060005b600281101561127557815184526020938401939091019060010161435f565b60008151808452614396816020860160208601614baa565b601f01601f19169290920160200192915050565b600082516143bc818460208701614baa565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b81811015614424578351151583529284019291840191600101614406565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156144245783518352928401929184019160010161444c565b602080825282518282018190526000919060409081850190868401855b828110156144bf57815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101614485565b5091979650505050505050565b61010081016144db828661435b565b6144e8604083018561432d565b610ff460c083018461435b565b6000610160614504838a61435b565b614511604084018961432d565b61451e60c084018861435b565b806101008401526145318184018761437e565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614576606083018461437e565b95945050505050565b602081526000611b4b602083018461437e565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b6020815260018060a01b038251166020820152602082015160408201526000604083015161475660608401826001600160a01b03169052565b5060608301516080830152608083015160a083015260a083015161478560c08401826001600160a01b03169052565b5060c08301516101008060e08501526147a261012085018361437e565b915060e0850151601f1985840301828601526147be838261437e565b9695505050505050565b604081526000835160e060408401526147e561012084018261437e565b9050602080860151603f1980868503016060870152614804848361437e565b6040890151878203909201608088015281518082529184019450600092508301905b808310156148465784518252938301936001929092019190830190614826565b506060880151935061485b60a087018561435b565b608088015160e087015260a088015161010087015260ff87168387015293506148819050565b50509392505050565b60405161010081016001600160401b03811182821017156148ad576148ad614ccb565b60405290565b60405160c081016001600160401b03811182821017156148ad576148ad614ccb565b604051601f8201601f191681016001600160401b03811182821017156148fd576148fd614ccb565b604052919050565b60006001600160401b0382111561491e5761491e614ccb565b5060051b60200190565b60006001600160401b0382111561494157614941614ccb565b50601f01601f191660200190565b6000821982111561496257614962614c89565b500190565b600063ffffffff80831681851680830382111561498657614986614c89565b01949350505050565b600060ff821660ff84168060ff038211156149ac576149ac614c89565b019392505050565b600063ffffffff808416806149cb576149cb614c9f565b92169190910492915050565b600181815b80851115614a14578163ffffffff048211156149fa576149fa614c89565b80851615614a0757918102915b93841c93908002906149dc565b509250929050565b600063ffffffff610ff4818516828516600082614a3b57506001610cd2565b81614a4857506000610cd2565b8160018114614a5e5760028114614a6857614a99565b6001915050610cd2565b60ff841115614a7957614a79614c89565b6001841b915063ffffffff821115614a9357614a93614c89565b50610cd2565b5060208310610133831016604e8410600b8410161715614ad0575081810a63ffffffff811115614acb57614acb614c89565b610cd2565b614ada83836149d7565b8063ffffffff04821115614af057614af0614c89565b029392505050565b60008083128015600160ff1b850184121615614b1657614b16614c89565b6001600160ff1b0384018313811615614b3157614b31614c89565b50500390565b600082821015614b4957614b49614c89565b500390565b600063ffffffff83811690831681811015614b6b57614b6b614c89565b039392505050565b805160208201516001600160d01b03198082169291906006831015614ba25780818460060360031b1b83161693505b505050919050565b60005b83811015614bc5578181015183820152602001614bad565b838111156112755750506000910152565b600063ffffffff821680614bec57614bec614c89565b6000190192915050565b6000600019821415614c0a57614c0a614c89565b5060010190565b600063ffffffff80831681811415614c2b57614c2b614c89565b6001019392505050565b600082614c4457614c44614c9f565b500690565b600063ffffffff80841680614c6057614c60614c9f565b92169190910692915050565b6000600160ff1b821415614c8257614c82614c89565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461285157600080fdfea2646970667358221220cdd27dbf622d0e428f8ca30ef38829a60d9bba0c10998ef37b7012cfe69011dd64736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
