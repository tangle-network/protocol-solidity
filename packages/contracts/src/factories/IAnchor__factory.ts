/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IAnchor, IAnchorInterface } from "../IAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDenomination",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "_roots",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "_nullifierHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "_refreshCommitment",
            type: "bytes32",
          },
          {
            internalType: "address payable",
            name: "_recipient",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "_relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_refund",
            type: "uint256",
          },
        ],
        internalType: "struct IAnchor.PublicInputs",
        name: "_publicInputs",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

export class IAnchor__factory {
  static readonly abi = _abi;
  static createInterface(): IAnchorInterface {
    return new utils.Interface(_abi) as IAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAnchor {
    return new Contract(address, _abi, signerOrProvider) as IAnchor;
  }
}
