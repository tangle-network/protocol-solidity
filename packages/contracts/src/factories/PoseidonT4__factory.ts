/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoseidonT4, PoseidonT4Interface } from "../PoseidonT4";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "input",
        type: "uint256[3]",
      },
    ],
    name: "poseidon",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61012561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806325cc70e8146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060608284031215606c57600080fd5b82601f830112607a57600080fd5b6040516060810181811067ffffffffffffffff82111715609a57609a60d9565b60405280836060810186101560ae57600080fd5b60005b600381101560ce57813583526020928301929091019060010160b1565b509195945050505050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207b3a9c18522dae9991fc4b3899c6ab2f095c61ab0d264f5ab3d54be83fcfb90f64736f6c63430008050033";

export class PoseidonT4__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoseidonT4> {
    return super.deploy(overrides || {}) as Promise<PoseidonT4>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoseidonT4 {
    return super.attach(address) as PoseidonT4;
  }
  connect(signer: Signer): PoseidonT4__factory {
    return super.connect(signer) as PoseidonT4__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoseidonT4Interface {
    return new utils.Interface(_abi) as PoseidonT4Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoseidonT4 {
    return new Contract(address, _abi, signerOrProvider) as PoseidonT4;
  }
}
