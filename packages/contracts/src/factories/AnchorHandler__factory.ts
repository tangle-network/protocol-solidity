/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AnchorHandler, AnchorHandlerInterface } from "../AnchorHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "initialResourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "initialContractAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_updateRecords",
    outputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "updateNonce",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "sourceChainId",
        type: "uint256",
      },
    ],
    name: "getUpdateRecord",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_sourceChainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "_resourceID",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "_merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "_leafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct AnchorHandler.UpdateRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBridge",
        type: "address",
      },
    ],
    name: "migrateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e9338038062000e9383398101604081905262000034916200022e565b8051825114620000b05760405162461bcd60e51b815260206004820152603c60248201527f696e697469616c5265736f7572636549447320616e6420696e697469616c436f60448201527f6e7472616374416464726573736573206c656e206d69736d6174636800000000606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b0385161781555b8251811015620001355762000120838281518110620000ef57620000ef62000393565b60200260200101518383815181106200010c576200010c62000393565b60200260200101516200013f60201b60201c565b806200012c8162000369565b915050620000cc565b50505050620003bf565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b80516001600160a01b0381168114620001a657600080fd5b919050565b600082601f830112620001bd57600080fd5b81516020620001d6620001d08362000343565b62000310565b80838252828201915082860187848660051b8901011115620001f757600080fd5b60005b8581101562000221576200020e826200018e565b84529284019290840190600101620001fa565b5090979650505050505050565b6000806000606084860312156200024457600080fd5b6200024f846200018e565b602085810151919450906001600160401b03808211156200026f57600080fd5b818701915087601f8301126200028457600080fd5b815162000295620001d08262000343565b8082825285820191508585018b878560051b8801011115620002b657600080fd5b600095505b83861015620002db578051835260019590950194918601918601620002bb565b5060408a01519097509450505080831115620002f657600080fd5b50506200030686828701620001ab565b9150509250925092565b604051601f8201601f191681016001600160401b03811182821017156200033b576200033b620003a9565b604052919050565b60006001600160401b038211156200035f576200035f620003a9565b5060051b60200190565b60006000198214156200038c57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610ac480620003cf6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c54c2a1111610066578063c54c2a1114610192578063d7f5b359146101bb578063e07384a8146101ce578063e248cff214610227578063ec97d3b41461023a57600080fd5b80630c9e9e1414610098578063318c136e1461011f5780637f79bea81461014a578063b8fa37361461017d575b600080fd5b6100e86100a636600461095a565b60046020818152600093845260408085209091529183529120805460018201546002830154600384015493909401546001600160a01b03909216939092909185565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b600054610132906001600160a01b031681565b6040516001600160a01b039091168152602001610116565b61016d610158366004610877565b60036020526000908152604090205460ff1681565b6040519015158152602001610116565b61019061018b3660046108b2565b610268565b005b6101326101a0366004610899565b6001602052600090815260409020546001600160a01b031681565b6101906101c9366004610877565b6102c0565b6101e16101dc36600461097c565b6102ea565b604051610116919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080918201519181019190915260a00190565b6101906102353660046108de565b610380565b61025a610248366004610877565b60026020526000908152604090205481565b604051908152602001610116565b6102706107ff565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b6102c86107ff565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600081815260046020818152604080842067ffffffffffffffff87168552825292839020835160a08101855281546001600160a01b031681526001820154928101929092526002810154938201939093526003830154606082015291015460808201525b92915050565b6103886107ff565b600080368161039a60208287896109b5565b6103a391610a14565b93506103b36024602087896109b5565b6103bc91610a32565b92506103cb85602481896109b5565b6000898152600160209081526040808320546001600160a01b03168084526003909252909120549294509092509060ff1661045e5760405162461bcd60e51b815260206004820152602860248201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696044820152671d195b1a5cdd195960c21b60648201526084015b60405180910390fd5b806001600160e01b031985166372c1ad0360e01b141561052457600061048760048286886109b5565b61049091610a32565b60e01c905060006104a56018600487896109b5565b6104ae916109df565b6040516372c1ad0360e01b815260609190911c6004820181905263ffffffff8416602483015291506001600160a01b038416906372c1ad03906044015b600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b5050505050506107f4565b6001600160e01b0319851663a0d192f560e01b14156105b457600061054c60048286886109b5565b61055591610a32565b60e01c9050600061056a6018600487896109b5565b610573916109df565b60405163a0d192f560e01b815260609190911c6004820181905263ffffffff8416602483015291506001600160a01b0384169063a0d192f5906044016104eb565b6001600160e01b03198516638d09169d60e01b14156106bd5760006105dd600a600486886109b5565b6105e691610a60565b60d01c905060006105fb600e600a87896109b5565b61060491610a32565b60e01c90506000610619602e600e888a6109b5565b61062291610a14565b90506000610634604e602e898b6109b5565b61063d91610a14565b604051638d09169d60e01b8152600481018690526024810184905263ffffffff85166044820152606481018290529091506001600160a01b03861690638d09169d90608401600060405180830381600087803b15801561069c57600080fd5b505af11580156106b0573d6000803e3d6000fd5b50505050505050506107f4565b6001600160e01b03198516630b5211c360e21b14156107535760006106e66024600486886109b5565b6106ef91610a14565b604051630b5211c360e21b8152600481018290529091506001600160a01b03831690632d48470c906024015b600060405180830381600087803b15801561073557600080fd5b505af1158015610749573d6000803e3d6000fd5b50505050506107f4565b6001600160e01b0319851663dad878a560e01b14156107b557600061077c6024600486886109b5565b61078591610a14565b60405163dad878a560e01b8152600481018290529091506001600160a01b0383169063dad878a59060240161071b565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642066756e6374696f6e2073696760601b6044820152606401610455565b505050505050505050565b6000546001600160a01b031633146108595760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e747261637400006044820152606401610455565b565b80356001600160a01b038116811461087257600080fd5b919050565b60006020828403121561088957600080fd5b6108928261085b565b9392505050565b6000602082840312156108ab57600080fd5b5035919050565b600080604083850312156108c557600080fd5b823591506108d56020840161085b565b90509250929050565b6000806000604084860312156108f357600080fd5b83359250602084013567ffffffffffffffff8082111561091257600080fd5b818601915086601f83011261092657600080fd5b81358181111561093557600080fd5b87602082850101111561094757600080fd5b6020830194508093505050509250925092565b6000806040838503121561096d57600080fd5b50508035926020909101359150565b6000806040838503121561098f57600080fd5b823567ffffffffffffffff811681146109a757600080fd5b946020939093013593505050565b600080858511156109c557600080fd5b838611156109d257600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015610a0c5780818660140360031b1b83161692505b505092915050565b8035602083101561037a57600019602084900360031b1b1692915050565b6001600160e01b03198135818116916004851015610a0c5760049490940360031b84901b1690921692915050565b6001600160d01b03198135818116916006851015610a0c5760069490940360031b84901b169092169291505056fea26469706673582212201f6428db4613214066732847c9a51a4869530efb468dad143050273ac9fdb3fb64736f6c63430008050033";

export class AnchorHandler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnchorHandler> {
    return super.deploy(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    ) as Promise<AnchorHandler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    );
  }
  attach(address: string): AnchorHandler {
    return super.attach(address) as AnchorHandler;
  }
  connect(signer: Signer): AnchorHandler__factory {
    return super.connect(signer) as AnchorHandler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnchorHandlerInterface {
    return new utils.Interface(_abi) as AnchorHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnchorHandler {
    return new Contract(address, _abi, signerOrProvider) as AnchorHandler;
  }
}
