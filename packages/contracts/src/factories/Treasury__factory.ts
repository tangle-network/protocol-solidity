/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Treasury, TreasuryInterface } from "../Treasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasuryHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "proposalNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToRescue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newHandler",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b5060405161079438038061079483398101604081905261003391610058565b600180546001600160a01b0319166001600160a01b0392909216919091179055610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b6106fd806100976000396000f3fe6080604052600436106100385760003560e01c806317a8a97514610044578063cc3c74a114610066578063e29b2c6a1461008e57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f36600461053f565b6100ae565b005b34801561007257600080fd5b5061007c60005481565b60405190815260200160405180910390f35b34801561009a57600080fd5b506100646100a9366004610585565b610435565b6001546001600160a01b031633146100e15760405162461bcd60e51b81526004016100d8906105f3565b60405180910390fd5b6001600160a01b0383166101455760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f742073656e64206c697175696469747920746f207a65726f206164604482015264647265737360d81b60648201526084016100d8565b6001600160a01b03841630141561019e5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74207265736375652077726170706564206173736574000000000060448201526064016100d8565b80600054106101df5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b60448201526064016100d8565b6000546101ee90610418610689565b811061020c5760405162461bcd60e51b81526004016100d890610642565b6001600160a01b03841661029c574782811061025e576040516001600160a01b0385169084156108fc029085906000818181858888f19350505050158015610258573d6000803e3d6000fd5b50610296565b6040516001600160a01b0385169082156108fc029083906000818181858888f19350505050158015610294573d6000803e3d6000fd5b505b5061042d565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a082319060240160206040518083038186803b1580156102de57600080fd5b505afa1580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031691906105da565b90508281106103a75760405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905286169063a9059cbb90604401602060405180830381600087803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a191906105b1565b5061042b565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820183905286169063a9059cbb90604401602060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042991906105b1565b505b505b600055505050565b6001546001600160a01b0316331461045f5760405162461bcd60e51b81526004016100d8906105f3565b6001600160a01b0382166104ab5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b60448201526064016100d8565b80600054106104ec5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b60448201526064016100d8565b6000546104fb90610418610689565b81106105195760405162461bcd60e51b81526004016100d890610642565b600180546001600160a01b0319166001600160a01b039390931692909217909155600055565b6000806000806080858703121561055557600080fd5b8435610560816106af565b93506020850135610570816106af565b93969395505050506040820135916060013590565b6000806040838503121561059857600080fd5b82356105a3816106af565b946020939093013593505050565b6000602082840312156105c357600080fd5b815180151581146105d357600080fd5b9392505050565b6000602082840312156105ec57600080fd5b5051919050565b6020808252602f908201527f46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207460408201526e3932b0b9bab93c903430b7323632b960891b606082015260800190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b600082198211156106aa57634e487b7160e01b600052601160045260246000fd5b500190565b6001600160a01b03811681146106c457600080fd5b5056fea26469706673582212205c4c7bd95b017496aeb9909a1c6912acd2a3d6a634b27688ee1fd6a52802bbf864736f6c63430008050033";

export class Treasury__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _treasuryHandler: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Treasury> {
    return super.deploy(_treasuryHandler, overrides || {}) as Promise<Treasury>;
  }
  getDeployTransaction(
    _treasuryHandler: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryHandler, overrides || {});
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
