/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoseidonT3Lib, PoseidonT3LibInterface } from "../PoseidonT3Lib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "poseidon",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61013261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806329a5f2f6146038575b600080fd5b604760433660046061565b605b565b6040516052919060dd565b60405180910390f35b50600090565b6000604082840312156071578081fd5b82601f830112607e578081fd5b6040516040810181811067ffffffffffffffff82111715609e57609e60e6565b806040525080838560408601111560b3578384fd5b835b600281101560d257813583526020928301929091019060010160b5565b509195945050505050565b90815260200190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122098f684f8087bae0bd8e1917d0fd6116aa8555d2c165caf3d96f10c57c45b6bfd64736f6c63430008000033";

export class PoseidonT3Lib__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoseidonT3Lib> {
    return super.deploy(overrides || {}) as Promise<PoseidonT3Lib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoseidonT3Lib {
    return super.attach(address) as PoseidonT3Lib;
  }
  connect(signer: Signer): PoseidonT3Lib__factory {
    return super.connect(signer) as PoseidonT3Lib__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoseidonT3LibInterface {
    return new utils.Interface(_abi) as PoseidonT3LibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoseidonT3Lib {
    return new Contract(address, _abi, signerOrProvider) as PoseidonT3Lib;
  }
}
