/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "newResourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminSetResourceWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "averageSessionLengthInMillisecs",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentVotingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastGovernorUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOfProposers",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerSetRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerSetUpdateNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sessionLengthMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposerSetRoot",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_averageSessionLengthInMillisecs",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_numOfProposers",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_proposerSetUpdateNonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "updateProposerSetData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "leafIndex",
            type: "uint32",
          },
          {
            internalType: "bytes32[]",
            name: "siblingPathNodes",
            type: "bytes32[]",
          },
          {
            internalType: "address",
            name: "proposedGovernor",
            type: "address",
          },
        ],
        internalType: "struct Governable.Vote",
        name: "vote",
        type: "tuple",
      },
    ],
    name: "voteInFavorForceSetGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008054600160a81b600160e81b0319168155600280546001600160401b0319166001600160401b03178155600355600581905560095534801561004757600080fd5b50604051611cc4380380611cc4833981016040819052610066916100e4565b600080546001600160c81b0319166101006001600160a01b03858116820263ffffffff60a81b191692909217600160a81b63ffffffff86160217808455426008556040518694869493909204909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a350505050610133565b600080604083850312156100f757600080fd5b82516001600160a01b038116811461010e57600080fd5b602084015190925063ffffffff8116811461012857600080fd5b809150509250929050565b611b82806101426000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638755bcad116100de578063bac163a211610097578063c7af335211610071578063c7af335214610358578063c944e40814610370578063cc3c74a114610383578063f3d23d541461038c57600080fd5b8063bac163a214610336578063bdfadc8414610346578063c5eb6b1f1461034f57600080fd5b80638755bcad146102b95780638b7e8782146102cc57806393596700146102f05780639d2b1ed7146103075780639e09583c1461031a578063a6e94c911461032357600080fd5b80633a049e02116101305780633a049e02146102365780634c830cbd1461023f5780635c975abb1461025e578063715018a6146102755780637296b5d81461027d57806384db809f1461029057600080fd5b8063016737bb146101785780630c340a24146101a857806313cb01f9146101d25780631ed13d1b146101fe57806324118804146102115780633408e47014610226575b600080fd5b60025461018b906001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b60005461010090046001600160a01b03165b6040516001600160a01b03909116815260200161019f565b6000546101e990600160a81b900463ffffffff1681565b60405163ffffffff909116815260200161019f565b6101ba61020c366004611599565b61039f565b61022461021f366004611658565b6103bf565b005b465b60405190815260200161019f565b61022860055481565b610247610598565b60405165ffffffffffff909116815260200161019f565b60005460ff165b604051901515815260200161019f565b6102246105e6565b61022461028b3660046115fc565b610664565b6101ba61029e3660046113c8565b600a602052600090815260409020546001600160a01b031681565b6102656102c7366004611599565b610794565b6102d7600160f81b81565b6040516001600160f01b0319909116815260200161019f565b6000546101e990600160c81b900463ffffffff1681565b610224610315366004611506565b6107c8565b61022860085481565b610224610331366004611395565b61094b565b6004546101e99063ffffffff1681565b61022860035481565b61022860015481565b60005461010090046001600160a01b03163314610265565b61022461037e3660046113e1565b6109aa565b61022860095481565b61022461039a366004611482565b610baf565b81516020830120600090816103b48285610d12565b925050505b92915050565b6002546103d8906103e8906001600160401b03166119c2565b6001600160401b03166003546103ee91906119dc565b6008546103fb919061195f565b4210156104475760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642074696d6520666f7220766f746560581b60448201526064015b60405180910390fd5b60208101518151339161045b918390610d36565b61049e5760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b21036b2b935b63290383937b7b360611b604482015260640161043e565b60055460009081526006602090815260408083206001600160a01b038516845290915290205460ff16156105045760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481d9bdd1959609a1b604482015260640161043e565b6005805460009081526006602090815260408083206001600160a01b038087168552908352818420805460ff1916600190811790915594548452600783528184208783015190911684529091528120805490919061056990849063ffffffff16611977565b92506101000a81548163ffffffff021916908363ffffffff1602179055506105948260400151610e6e565b5050565b60408051600160f81b602082018190524660e01b6001600160e01b031981166022840152835180840360060181526026909301909352600092916105db81611a49565b60d01c935050505090565b60005461010090046001600160a01b031633146106155760405162461bcd60e51b815260040161043e906117da565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b60005463ffffffff808416600160a81b90920416106106955760405162461bcd60e51b815260040161043e9061186f565b6000546106b090600160a81b900463ffffffff166001611977565b63ffffffff168263ffffffff16111561070b5760405162461bcd60e51b815260206004820152601960248201527f4e6f6e6365206d75737420696e6372656d656e74206279203100000000000000604482015260640161043e565b8251602080850191909120604051909182916107449161072f918791899101611750565b60405160208183030381529060405284610794565b6107605760405162461bcd60e51b815260040161043e906117da565b61076981610ec5565b50506000805463ffffffff909316600160a81b0263ffffffff60a81b19909316929092179091555050565b81516020830120600090816107a98285610d12565b60005461010090046001600160a01b0390811691161495945050505050565b82828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525084925061080c915083905082610794565b6108285760405162461bcd60e51b815260040161043e90611820565b366000610838602082888a611935565b9092509050600061084982846119fb565b9050600061085b6020601a8587611935565b61086491611a19565b60d01c905080610872610598565b65ffffffffffff16146108c75760405162461bcd60e51b815260206004820152601860248201527f657865637574696e67206f6e2077726f6e6720636861696e0000000000000000604482015260640161043e565b6000828152600a60205260409081902054905163712467f960e11b81526001600160a01b03909116908190819063e248cff29061090c9087908f908f906004016117a4565b600060405180830381600087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b505050505050505050505050505050565b60005461010090046001600160a01b0316331461097a5760405162461bcd60e51b815260040161043e906117da565b61098382610ec5565b6000805463ffffffff909216600160a81b0263ffffffff60a81b1990921691909117905550565b60408051602081018990526001600160e01b03198881168284015260e088901b166044820152604881018690526bffffffffffffffffffffffff19606086811b8216606884015285901b16607c82015281518082036070018152609090910190915281610a178282610794565b610a335760405162461bcd60e51b815260040161043e90611820565b8663ffffffff1660095410610a5a5760405162461bcd60e51b815260040161043e9061186f565b600954610a699061041861195f565b8763ffffffff1610610a8d5760405162461bcd60e51b815260040161043e90611896565b6001600160e01b031988166319289c8160e31b14610b135760405162461bcd60e51b815260206004820152603960248201527f61646d696e5365745265736f75726365576974685369676e61747572653a204960448201527f6e76616c69642066756e6374696f6e207369676e617475726500000000000000606482015260840161043e565b6000868152600a60205260409081902080546001600160a01b0319166001600160a01b038881169182179092559151635c7d1b9b60e11b815260048101899052908616602482015286919063b8fa373690604401600060405180830381600087803b158015610b8157600080fd5b505af1158015610b95573d6000803e3d6000fd5b50505063ffffffff90981660095550505050505050505050565b60005463ffffffff808416600160c81b9092041610610be05760405162461bcd60e51b815260040161043e9061186f565b600054610bfc90600160c81b900463ffffffff16610418611977565b63ffffffff168263ffffffff1610610c265760405162461bcd60e51b815260040161043e90611896565b60408051602081018790526001600160c01b031960c087901b16918101919091526001600160e01b031960e085811b8216604884015284901b16604c820152610c819060500160405160208183030381529060405282610794565b610c9d5760405162461bcd60e51b815260040161043e906117da565b60018590556002805467ffffffffffffffff19166001600160401b0386161790556004805463ffffffff191663ffffffff858116919091179091556000805463ffffffff60c81b1916600160c81b928516929092029190911781556005805491610d0683611a80565b91905055505050505050565b6000806000610d218585610fa5565b91509150610d2e81611015565b509392505050565b6040516bffffffffffffffffffffffff19606084901b166020820152600090819060340160408051601f1981840301815291905280516020909101209050808360005b87518160ff161015610e5f57610d90600283611abb565b63ffffffff16610def5782888260ff1681518110610db057610db0611b20565b6020026020010151604051602001610dd2929190918252602082015260400190565b604051602081830303815290604052805190602001209250610e40565b878160ff1681518110610e0457610e04611b20565b602002602001015183604051602001610e27929190918252602082015260400190565b6040516020818303038152906040528051906020012092505b610e4b60028361199f565b915080610e5781611a9b565b915050610d79565b50506001541495945050505050565b600454610e839060029063ffffffff1661199f565b60055460009081526007602090815260408083206001600160a01b038616845290915290205463ffffffff91821691161115610ec257610ec281610ec5565b50565b6001600160a01b038116610f2d5760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b606482015260840161043e565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a360008054610100600160a81b0319166101006001600160a01b03841602178155426008556005805491610f9d83611a80565b919050555050565b600080825160411415610fdc5760208301516040840151606085015160001a610fd0878285856111d0565b9450945050505061100e565b8251604014156110065760208301516040840151610ffb8683836112bd565b93509350505061100e565b506000905060025b9250929050565b600081600481111561102957611029611b0a565b14156110325750565b600181600481111561104657611046611b0a565b14156110945760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161043e565b60028160048111156110a8576110a8611b0a565b14156110f65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161043e565b600381600481111561110a5761110a611b0a565b14156111635760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161043e565b600481600481111561117757611177611b0a565b1415610ec25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161043e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561120757506000905060036112b4565b8460ff16601b1415801561121f57508460ff16601c14155b1561123057506000905060046112b4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611284573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112ad576000600192509250506112b4565b9150600090505b94509492505050565b6000806001600160ff1b038316816112da60ff86901c601b61195f565b90506112e8878288856111d0565b935093505050935093915050565b80356001600160a01b038116811461130d57600080fd5b919050565b600082601f83011261132357600080fd5b81356001600160401b0381111561133c5761133c611b36565b61134f601f8201601f1916602001611905565b81815284602083860101111561136457600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff8116811461130d57600080fd5b600080604083850312156113a857600080fd5b6113b1836112f6565b91506113bf60208401611381565b90509250929050565b6000602082840312156113da57600080fd5b5035919050565b600080600080600080600060e0888a0312156113fc57600080fd5b8735965060208801356001600160e01b03198116811461141b57600080fd5b955061142960408901611381565b94506060880135935061143e608089016112f6565b925061144c60a089016112f6565b915060c08801356001600160401b0381111561146757600080fd5b6114738a828b01611312565b91505092959891949750929550565b600080600080600060a0868803121561149a57600080fd5b8535945060208601356001600160401b0380821682146114b957600080fd5b8195506114c860408901611381565b94506114d660608901611381565b935060808801359150808211156114ec57600080fd5b506114f988828901611312565b9150509295509295909350565b60008060006040848603121561151b57600080fd5b83356001600160401b038082111561153257600080fd5b818601915086601f83011261154657600080fd5b81358181111561155557600080fd5b87602082850101111561156757600080fd5b60209283019550935090850135908082111561158257600080fd5b5061158f86828701611312565b9150509250925092565b600080604083850312156115ac57600080fd5b82356001600160401b03808211156115c357600080fd5b6115cf86838701611312565b935060208501359150808211156115e557600080fd5b506115f285828601611312565b9150509250929050565b60008060006060848603121561161157600080fd5b83356001600160401b038082111561162857600080fd5b61163487838801611312565b945061164260208701611381565b9350604086013591508082111561158257600080fd5b6000602080838503121561166b57600080fd5b82356001600160401b038082111561168257600080fd5b908401906060828703121561169657600080fd5b61169e6118dd565b6116a783611381565b815283830135828111156116ba57600080fd5b8301601f810188136116cb57600080fd5b8035838111156116dd576116dd611b36565b8060051b93506116ee868501611905565b8181528681019083880186850189018c101561170957600080fd5b600096505b8387101561172c57803583526001969096019591880191880161170e565b508488015250611741915050604084016112f6565b60408201529695505050505050565b63ffffffff60e01b8360e01b1681526000825160005b818110156117835760208186018101516004868401015201611766565b81811115611795576000600483860101525b50919091016004019392505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252602f908201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960408201526e3390333937b69033b7bb32b93737b960891b606082015260800190565b6020808252600d908201526c496e76616c6964206e6f6e636560981b604082015260600190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b604051606081016001600160401b03811182821017156118ff576118ff611b36565b60405290565b604051601f8201601f191681016001600160401b038111828210171561192d5761192d611b36565b604052919050565b6000808585111561194557600080fd5b8386111561195257600080fd5b5050820193919092039150565b6000821982111561197257611972611ade565b500190565b600063ffffffff80831681851680830382111561199657611996611ade565b01949350505050565b600063ffffffff808416806119b6576119b6611af4565b92169190910492915050565b60006001600160401b03808416806119b6576119b6611af4565b60008160001904831182151516156119f6576119f6611ade565b500290565b803560208310156103b957600019602084900360031b1b1692915050565b6001600160d01b03198135818116916006851015611a415780818660060360031b1b83161692505b505092915050565b805160208201516001600160d01b03198082169291906006831015611a785780818460060360031b1b83161693505b505050919050565b6000600019821415611a9457611a94611ade565b5060010190565b600060ff821660ff811415611ab257611ab2611ade565b60010192915050565b600063ffffffff80841680611ad257611ad2611af4565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d69193e9583ab00b416a2ef191423e95d7fdd1a24c8f3d5d94b93588905c040864736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialGovernor: string,
    nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      initialGovernor,
      nonce,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    initialGovernor: string,
    nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialGovernor, nonce, overrides || {});
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
