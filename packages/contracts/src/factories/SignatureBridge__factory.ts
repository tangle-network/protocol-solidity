/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "newResourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminSetResourceWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "averageSessionLengthInMillisecs",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentVotingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastGovernorUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOfProposers",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_resourceId",
        type: "bytes32",
      },
    ],
    name: "parseChainIdFromResourceId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerSetRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerSetUpdateNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sessionLengthMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposerSetRoot",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_averageSessionLengthInMillisecs",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_numOfProposers",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_proposerSetUpdateNonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "updateProposerSetData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "leafIndex",
            type: "uint32",
          },
          {
            internalType: "bytes32[]",
            name: "siblingPathNodes",
            type: "bytes32[]",
          },
          {
            internalType: "address",
            name: "proposedGovernor",
            type: "address",
          },
        ],
        internalType: "struct Governable.Vote",
        name: "vote",
        type: "tuple",
      },
    ],
    name: "voteInFavorForceSetGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008054600160a81b600160e81b0319168155600280546001600160401b0319166001600160401b03178155600355600581905560095534801561004757600080fd5b50604051611cf7380380611cf7833981016040819052610066916100e4565b600080546001600160c81b0319166101006001600160a01b03858116820263ffffffff60a81b191692909217600160a81b63ffffffff86160217808455426008556040518694869493909204909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a350505050610133565b600080604083850312156100f757600080fd5b82516001600160a01b038116811461010e57600080fd5b602084015190925063ffffffff8116811461012857600080fd5b809150509250929050565b611bb5806101426000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638b7e8782116100de578063bdfadc8411610097578063c7af335211610071578063c7af33521461038b578063c944e408146103a3578063cc3c74a1146103b6578063f3d23d54146103bf57600080fd5b8063bdfadc8414610361578063c2230d6e1461036a578063c5eb6b1f1461038257600080fd5b80638b7e8782146102e7578063935967001461030b5780639d2b1ed7146103225780639e09583c14610335578063a6e94c911461033e578063bac163a21461035157600080fd5b80633a049e021161014b578063715018a611610125578063715018a6146102905780637296b5d81461029857806384db809f146102ab5780638755bcad146102d457600080fd5b80633a049e02146102515780634c830cbd1461025a5780635c975abb1461027957600080fd5b8063016737bb146101935780630c340a24146101c357806313cb01f9146101ed5780631ed13d1b14610219578063241188041461022c5780633408e47014610241575b600080fd5b6002546101a6906001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b60005461010090046001600160a01b03165b6040516001600160a01b0390911681526020016101ba565b60005461020490600160a81b900463ffffffff1681565b60405163ffffffff90911681526020016101ba565b6101d56102273660046115cc565b6103d2565b61023f61023a36600461168b565b6103f2565b005b465b6040519081526020016101ba565b61024360055481565b6102626105cb565b60405165ffffffffffff90911681526020016101ba565b60005460ff165b60405190151581526020016101ba565b61023f610619565b61023f6102a636600461162f565b610697565b6101d56102b93660046113fb565b600a602052600090815260409020546001600160a01b031681565b6102806102e23660046115cc565b6107c7565b6102f2600160f81b81565b6040516001600160f01b031990911681526020016101ba565b60005461020490600160c81b900463ffffffff1681565b61023f610330366004611539565b6107fb565b61024360085481565b61023f61034c3660046113c8565b61097e565b6004546102049063ffffffff1681565b61024360035481565b6101a66103783660046113fb565b603a015160d01c90565b61024360015481565b60005461010090046001600160a01b03163314610280565b61023f6103b1366004611414565b6109dd565b61024360095481565b61023f6103cd3660046114b5565b610be2565b81516020830120600090816103e78285610d45565b925050505b92915050565b60025461040b906103e8906001600160401b03166119f5565b6001600160401b03166003546104219190611a0f565b60085461042e9190611992565b42101561047a5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642074696d6520666f7220766f746560581b60448201526064015b60405180910390fd5b60208101518151339161048e918390610d69565b6104d15760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b21036b2b935b63290383937b7b360611b6044820152606401610471565b60055460009081526006602090815260408083206001600160a01b038516845290915290205460ff16156105375760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481d9bdd1959609a1b6044820152606401610471565b6005805460009081526006602090815260408083206001600160a01b038087168552908352818420805460ff1916600190811790915594548452600783528184208783015190911684529091528120805490919061059c90849063ffffffff166119aa565b92506101000a81548163ffffffff021916908363ffffffff1602179055506105c78260400151610ea1565b5050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161060e81611a7c565b60d01c935050505090565b60005461010090046001600160a01b031633146106485760405162461bcd60e51b81526004016104719061180d565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b60005463ffffffff808416600160a81b90920416106106c85760405162461bcd60e51b8152600401610471906118a2565b6000546106e390600160a81b900463ffffffff1660016119aa565b63ffffffff168263ffffffff16111561073e5760405162461bcd60e51b815260206004820152601960248201527f4e6f6e6365206d75737420696e6372656d656e742062792031000000000000006044820152606401610471565b82516020808501919091206040519091829161077791610762918791899101611783565b604051602081830303815290604052846107c7565b6107935760405162461bcd60e51b81526004016104719061180d565b61079c81610ef8565b50506000805463ffffffff909316600160a81b0263ffffffff60a81b19909316929092179091555050565b81516020830120600090816107dc8285610d45565b60005461010090046001600160a01b0390811691161495945050505050565b82828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525084925061083f9150839050826107c7565b61085b5760405162461bcd60e51b815260040161047190611853565b36600061086b602082888a611968565b9092509050600061087c8284611a2e565b9050600061088e6020601a8587611968565b61089791611a4c565b60d01c9050806108a56105cb565b65ffffffffffff16146108fa5760405162461bcd60e51b815260206004820152601860248201527f657865637574696e67206f6e2077726f6e6720636861696e00000000000000006044820152606401610471565b6000828152600a60205260409081902054905163712467f960e11b81526001600160a01b03909116908190819063e248cff29061093f9087908f908f906004016117d7565b600060405180830381600087803b15801561095957600080fd5b505af115801561096d573d6000803e3d6000fd5b505050505050505050505050505050565b60005461010090046001600160a01b031633146109ad5760405162461bcd60e51b81526004016104719061180d565b6109b682610ef8565b6000805463ffffffff909216600160a81b0263ffffffff60a81b1990921691909117905550565b60408051602081018990526001600160e01b03198881168284015260e088901b166044820152604881018690526bffffffffffffffffffffffff19606086811b8216606884015285901b16607c82015281518082036070018152609090910190915281610a4a82826107c7565b610a665760405162461bcd60e51b815260040161047190611853565b8663ffffffff1660095410610a8d5760405162461bcd60e51b8152600401610471906118a2565b600954610a9c90610418611992565b8763ffffffff1610610ac05760405162461bcd60e51b8152600401610471906118c9565b6001600160e01b031988166319289c8160e31b14610b465760405162461bcd60e51b815260206004820152603960248201527f61646d696e5365745265736f75726365576974685369676e61747572653a204960448201527f6e76616c69642066756e6374696f6e207369676e6174757265000000000000006064820152608401610471565b6000868152600a60205260409081902080546001600160a01b0319166001600160a01b038881169182179092559151635c7d1b9b60e11b815260048101899052908616602482015286919063b8fa373690604401600060405180830381600087803b158015610bb457600080fd5b505af1158015610bc8573d6000803e3d6000fd5b50505063ffffffff90981660095550505050505050505050565b60005463ffffffff808416600160c81b9092041610610c135760405162461bcd60e51b8152600401610471906118a2565b600054610c2f90600160c81b900463ffffffff166104186119aa565b63ffffffff168263ffffffff1610610c595760405162461bcd60e51b8152600401610471906118c9565b60408051602081018790526001600160c01b031960c087901b16918101919091526001600160e01b031960e085811b8216604884015284901b16604c820152610cb490605001604051602081830303815290604052826107c7565b610cd05760405162461bcd60e51b81526004016104719061180d565b60018590556002805467ffffffffffffffff19166001600160401b0386161790556004805463ffffffff191663ffffffff858116919091179091556000805463ffffffff60c81b1916600160c81b928516929092029190911781556005805491610d3983611ab3565b91905055505050505050565b6000806000610d548585610fd8565b91509150610d6181611048565b509392505050565b6040516bffffffffffffffffffffffff19606084901b166020820152600090819060340160408051601f1981840301815291905280516020909101209050808360005b87518160ff161015610e9257610dc3600283611aee565b63ffffffff16610e225782888260ff1681518110610de357610de3611b53565b6020026020010151604051602001610e05929190918252602082015260400190565b604051602081830303815290604052805190602001209250610e73565b878160ff1681518110610e3757610e37611b53565b602002602001015183604051602001610e5a929190918252602082015260400190565b6040516020818303038152906040528051906020012092505b610e7e6002836119d2565b915080610e8a81611ace565b915050610dac565b50506001541495945050505050565b600454610eb69060029063ffffffff166119d2565b60055460009081526007602090815260408083206001600160a01b038616845290915290205463ffffffff91821691161115610ef557610ef581610ef8565b50565b6001600160a01b038116610f605760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b6064820152608401610471565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a360008054610100600160a81b0319166101006001600160a01b03841602178155426008556005805491610fd083611ab3565b919050555050565b60008082516041141561100f5760208301516040840151606085015160001a61100387828585611203565b94509450505050611041565b825160401415611039576020830151604084015161102e8683836112f0565b935093505050611041565b506000905060025b9250929050565b600081600481111561105c5761105c611b3d565b14156110655750565b600181600481111561107957611079611b3d565b14156110c75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610471565b60028160048111156110db576110db611b3d565b14156111295760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610471565b600381600481111561113d5761113d611b3d565b14156111965760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610471565b60048160048111156111aa576111aa611b3d565b1415610ef55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610471565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561123a57506000905060036112e7565b8460ff16601b1415801561125257508460ff16601c14155b1561126357506000905060046112e7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156112b7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112e0576000600192509250506112e7565b9150600090505b94509492505050565b6000806001600160ff1b0383168161130d60ff86901c601b611992565b905061131b87828885611203565b935093505050935093915050565b80356001600160a01b038116811461134057600080fd5b919050565b600082601f83011261135657600080fd5b81356001600160401b0381111561136f5761136f611b69565b611382601f8201601f1916602001611938565b81815284602083860101111561139757600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff8116811461134057600080fd5b600080604083850312156113db57600080fd5b6113e483611329565b91506113f2602084016113b4565b90509250929050565b60006020828403121561140d57600080fd5b5035919050565b600080600080600080600060e0888a03121561142f57600080fd5b8735965060208801356001600160e01b03198116811461144e57600080fd5b955061145c604089016113b4565b94506060880135935061147160808901611329565b925061147f60a08901611329565b915060c08801356001600160401b0381111561149a57600080fd5b6114a68a828b01611345565b91505092959891949750929550565b600080600080600060a086880312156114cd57600080fd5b8535945060208601356001600160401b0380821682146114ec57600080fd5b8195506114fb604089016113b4565b9450611509606089016113b4565b9350608088013591508082111561151f57600080fd5b5061152c88828901611345565b9150509295509295909350565b60008060006040848603121561154e57600080fd5b83356001600160401b038082111561156557600080fd5b818601915086601f83011261157957600080fd5b81358181111561158857600080fd5b87602082850101111561159a57600080fd5b6020928301955093509085013590808211156115b557600080fd5b506115c286828701611345565b9150509250925092565b600080604083850312156115df57600080fd5b82356001600160401b03808211156115f657600080fd5b61160286838701611345565b9350602085013591508082111561161857600080fd5b5061162585828601611345565b9150509250929050565b60008060006060848603121561164457600080fd5b83356001600160401b038082111561165b57600080fd5b61166787838801611345565b9450611675602087016113b4565b935060408601359150808211156115b557600080fd5b6000602080838503121561169e57600080fd5b82356001600160401b03808211156116b557600080fd5b90840190606082870312156116c957600080fd5b6116d1611910565b6116da836113b4565b815283830135828111156116ed57600080fd5b8301601f810188136116fe57600080fd5b80358381111561171057611710611b69565b8060051b9350611721868501611938565b8181528681019083880186850189018c101561173c57600080fd5b600096505b8387101561175f578035835260019690960195918801918801611741565b50848801525061177491505060408401611329565b60408201529695505050505050565b63ffffffff60e01b8360e01b1681526000825160005b818110156117b65760208186018101516004868401015201611799565b818111156117c8576000600483860101525b50919091016004019392505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252602f908201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960408201526e3390333937b69033b7bb32b93737b960891b606082015260800190565b6020808252600d908201526c496e76616c6964206e6f6e636560981b604082015260600190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b604051606081016001600160401b038111828210171561193257611932611b69565b60405290565b604051601f8201601f191681016001600160401b038111828210171561196057611960611b69565b604052919050565b6000808585111561197857600080fd5b8386111561198557600080fd5b5050820193919092039150565b600082198211156119a5576119a5611b11565b500190565b600063ffffffff8083168185168083038211156119c9576119c9611b11565b01949350505050565b600063ffffffff808416806119e9576119e9611b27565b92169190910492915050565b60006001600160401b03808416806119e9576119e9611b27565b6000816000190483118215151615611a2957611a29611b11565b500290565b803560208310156103ec57600019602084900360031b1b1692915050565b6001600160d01b03198135818116916006851015611a745780818660060360031b1b83161692505b505092915050565b805160208201516001600160d01b03198082169291906006831015611aab5780818460060360031b1b83161693505b505050919050565b6000600019821415611ac757611ac7611b11565b5060010190565b600060ff821660ff811415611ae557611ae5611b11565b60010192915050565b600063ffffffff80841680611b0557611b05611b27565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220556a01d45f9747e8cf163cd5b8700fc6fb53322dd75e34f18f70cf055ee4898364736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialGovernor: string,
    nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      initialGovernor,
      nonce,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    initialGovernor: string,
    nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialGovernor, nonce, overrides || {});
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
