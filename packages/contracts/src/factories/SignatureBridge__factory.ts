/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminSetResourceWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805463ffffffff60a81b1916905534801561002057600080fd5b506040516114cb3803806114cb83398101604081905261003f9161009d565b600080546001600160a81b0319166101006001600160a01b03848116820292909217808455604051859492909104909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a350506100cd565b6000602082840312156100af57600080fd5b81516001600160a01b03811681146100c657600080fd5b9392505050565b6113ef806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637296b5d8116100975780639d2b1ed7116100665780639d2b1ed714610247578063a6e94c911461025a578063c7af33521461026d578063d75a06831461028557600080fd5b80637296b5d8146101d457806384db809f146101e75780638755bcad146102105780638b7e87821461022357600080fd5b80633408e470116100d35780633408e470146101885780634c830cbd146101965780635c975abb146101b5578063715018a6146101cc57600080fd5b80630c340a241461010557806313cb01f9146101345780631ed13d1b146101605780631eee6bc814610175575b600080fd5b60005461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b60005461014b90600160a81b900463ffffffff1681565b60405163ffffffff909116815260200161012b565b61017361016e366004611087565b6102c8565b005b610173610183366004610f3f565b610318565b60405146815260200161012b565b61019e610416565b60405165ffffffffffff909116815260200161012b565b60005460ff165b604051901515815260200161012b565b610173610464565b6101736101e23660046110eb565b6104e2565b6101176101f5366004610fda565b6003602052600090815260409020546001600160a01b031681565b6101bc61021e366004611087565b61062e565b61022e600160f81b81565b6040516001600160f01b0319909116815260200161012b565b610173610255366004610ff3565b6106b0565b610173610268366004610fa7565b610833565b60005461010090046001600160a01b031633146101bc565b6102af610293366004610fda565b60026020526000908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161012b565b8151602083012060006102db8284610955565b6040519091506001600160a01b038216907f391f5edd7209ba797e8055bce97cab2d1a480a2849b0c7fe965c370457166dc490600090a250505050565b6040516bffffffffffffffffffffffff19606086811b821660208401526034830186905284901b16605482015260680160405160208183030381529060405281610362828261062e565b6103875760405162461bcd60e51b815260040161037e90611229565b60405180910390fd5b6000858152600360205260409081902080546001600160a01b0319166001600160a01b038981169182179092559151635c7d1b9b60e11b815260048101889052908616602482015287919063b8fa373690604401600060405180830381600087803b1580156103f557600080fd5b505af1158015610409573d6000803e3d6000fd5b5050505050505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161045981611326565b60d01c935050505090565b60005461010090046001600160a01b031633146104935760405162461bcd60e51b815260040161037e906111e3565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b60005463ffffffff808416600160a81b90920416106105335760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015260640161037e565b60005461054e90600160a81b900463ffffffff1660016112a2565b63ffffffff168263ffffffff1611156105a55760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b604482015260640161037e565b8251602080850191909120604051909182916105de916105c9918791899101611148565b6040516020818303038152906040528461062e565b6105fa5760405162461bcd60e51b815260040161037e906111e3565b61060381610979565b50506000805463ffffffff909316600160a81b0263ffffffff60a81b19909316929092179091555050565b600061063983610a47565b8251602084012061064981610a8d565b60006106558285610955565b90506106776106726000546001600160a01b036101009091041690565b610ad2565b61068081610ad2565b60005461010090046001600160a01b03166001600160a01b0316816001600160a01b031614925050505b92915050565b82828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508492506106f491508390508261062e565b6107105760405162461bcd60e51b815260040161037e90611229565b366000610720602082888a611278565b9092509050600061073182846112d8565b905060006107436020601a8587611278565b61074c916112f6565b60d01c90508061075a610416565b65ffffffffffff16146107af5760405162461bcd60e51b815260206004820152601860248201527f657865637574696e67206f6e2077726f6e6720636861696e0000000000000000604482015260640161037e565b6000828152600360205260409081902054905163712467f960e11b81526001600160a01b03909116908190819063e248cff2906107f49087908f908f9060040161117a565b600060405180830381600087803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b505050505050505050505050505050565b60005461010090046001600160a01b031633146108625760405162461bcd60e51b815260040161037e906111e3565b60005463ffffffff808316600160a81b90920416106108b35760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015260640161037e565b6000546108ce90600160a81b900463ffffffff1660016112a2565b63ffffffff168163ffffffff1611156109255760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b604482015260640161037e565b61092e82610979565b6000805463ffffffff909216600160a81b0263ffffffff60a81b1990921691909117905550565b60008060006109648585610b1a565b9150915061097181610b8a565b509392505050565b6001600160a01b0381166109e15760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b606482015260840161037e565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a3600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b610a8a81604051602401610a5b91906111b0565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b179052610d45565b50565b610a8a81604051602401610aa391815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b179052610d45565b6040516001600160a01b0382166024820152610a8a9060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610d45565b600080825160411415610b515760208301516040840151606085015160001a610b4587828585610d66565b94509450505050610b83565b825160401415610b7b5760208301516040840151610b70868383610e53565b935093505050610b83565b506000905060025b9250929050565b6000816004811115610b9e57610b9e61138d565b1415610ba75750565b6001816004811115610bbb57610bbb61138d565b1415610c095760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161037e565b6002816004811115610c1d57610c1d61138d565b1415610c6b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161037e565b6003816004811115610c7f57610c7f61138d565b1415610cd85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161037e565b6004816004811115610cec57610cec61138d565b1415610a8a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161037e565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d9d5750600090506003610e4a565b8460ff16601b14158015610db557508460ff16601c14155b15610dc65750600090506004610e4a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e1a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e4357600060019250925050610e4a565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b01610e7487828885610d66565b935093505050935093915050565b80356001600160a01b0381168114610e9957600080fd5b919050565b600082601f830112610eaf57600080fd5b813567ffffffffffffffff80821115610eca57610eca6113a3565b604051601f8301601f19908116603f01168101908282118183101715610ef257610ef26113a3565b81604052838152866020858801011115610f0b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803563ffffffff81168114610e9957600080fd5b60008060008060808587031215610f5557600080fd5b610f5e85610e82565b935060208501359250610f7360408601610e82565b9150606085013567ffffffffffffffff811115610f8f57600080fd5b610f9b87828801610e9e565b91505092959194509250565b60008060408385031215610fba57600080fd5b610fc383610e82565b9150610fd160208401610f2b565b90509250929050565b600060208284031215610fec57600080fd5b5035919050565b60008060006040848603121561100857600080fd5b833567ffffffffffffffff8082111561102057600080fd5b818601915086601f83011261103457600080fd5b81358181111561104357600080fd5b87602082850101111561105557600080fd5b60209283019550935090850135908082111561107057600080fd5b5061107d86828701610e9e565b9150509250925092565b6000806040838503121561109a57600080fd5b823567ffffffffffffffff808211156110b257600080fd5b6110be86838701610e9e565b935060208501359150808211156110d457600080fd5b506110e185828601610e9e565b9150509250929050565b60008060006060848603121561110057600080fd5b833567ffffffffffffffff8082111561111857600080fd5b61112487838801610e9e565b945061113260208701610f2b565b9350604086013591508082111561107057600080fd5b63ffffffff60e01b8360e01b1681526000825161116c81600485016020870161135d565b919091016004019392505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b60208152600082518060208401526111cf81604085016020870161135d565b601f01601f19169190910160400192915050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252602f908201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960408201526e3390333937b69033b7bb32b93737b960891b606082015260800190565b6000808585111561128857600080fd5b8386111561129557600080fd5b5050820193919092039150565b600063ffffffff8083168185168083038211156112cf57634e487b7160e01b600052601160045260246000fd5b01949350505050565b803560208310156106aa57600019602084900360031b1b1692915050565b6001600160d01b0319813581811691600685101561131e5780818660060360031b1b83161692505b505092915050565b805160208201516001600160d01b031980821692919060068310156113555780818460060360031b1b83161693505b505050919050565b60005b83811015611378578181015183820152602001611360565b83811115611387576000848401525b50505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122035a53582750000a7c0fd249fd109fc941650c59cb60b54d4db66602c7b6bdfe864736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      initialGovernor,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialGovernor, overrides || {});
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
