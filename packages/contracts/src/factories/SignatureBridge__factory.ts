/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "newResourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminSetResourceWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "averageSessionLengthInMillisecs",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentVotingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastGovernorUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOfProposers",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerSetRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerSetUpdateNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sessionLengthMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposerSetRoot",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_averageSessionLengthInMillisecs",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_numOfProposers",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_proposerSetUpdateNonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "updateProposerSetData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proposer",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "leafIndex",
            type: "uint32",
          },
          {
            internalType: "bytes32[]",
            name: "siblingPathNodes",
            type: "bytes32[]",
          },
          {
            internalType: "address",
            name: "proposedGovernor",
            type: "address",
          },
        ],
        internalType: "struct Governable.Vote",
        name: "vote",
        type: "tuple",
      },
    ],
    name: "voteInFavorForceSetGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008054600160a81b600160e81b0319168155600280546001600160401b0319166001600160401b031781556003556006819055600a5534801561004757600080fd5b50604051611f19380380611f19833981016040819052610066916100c8565b600080546001600160a81b0319166101006001600160a01b0384811682029290921780845542600855604051859492909104909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a350506100f8565b6000602082840312156100da57600080fd5b81516001600160a01b03811681146100f157600080fd5b9392505050565b611e12806101076000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638b7e8782116100de578063bdfadc8411610097578063c944e40811610071578063c944e4081461038b578063cc3c74a11461039e578063d75a0683146103a7578063f3d23d54146103d057600080fd5b8063bdfadc8414610361578063c5eb6b1f1461036a578063c7af33521461037357600080fd5b80638b7e8782146102e7578063935967001461030b5780639d2b1ed7146103225780639e09583c14610335578063a6e94c911461033e578063bac163a21461035157600080fd5b80634c830cbd1161014b578063715018a611610125578063715018a6146102905780637296b5d81461029857806384db809f146102ab5780638755bcad146102d457600080fd5b80634c830cbd146102455780635c975abb14610264578063668f638f1461027b57600080fd5b8063016737bb146101935780630c340a24146101c357806313cb01f9146101ed5780631ed13d1b146102195780633408e4701461022c5780633a049e021461023c575b600080fd5b6002546101a6906001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b60005461010090046001600160a01b03165b6040516001600160a01b0390911681526020016101ba565b60005461020490600160a81b900463ffffffff1681565b60405163ffffffff90911681526020016101ba565b6101d561022736600461179c565b6103e3565b465b6040519081526020016101ba565b61022e60065481565b61024d610403565b60405165ffffffffffff90911681526020016101ba565b60005460ff165b60405190151581526020016101ba565b61028e61028936600461185b565b610451565b005b61028e61073c565b61028e6102a63660046117ff565b6107ba565b6101d56102b93660046115cb565b600c602052600090815260409020546001600160a01b031681565b61026b6102e236600461179c565b6108ba565b6102f2600160f81b81565b6040516001600160f01b031990911681526020016101ba565b60005461020490600160c81b900463ffffffff1681565b61028e610330366004611709565b6108ee565b61022e60085481565b61028e61034c366004611598565b610a71565b6004546102049063ffffffff1681565b61022e60035481565b61022e60015481565b60005461010090046001600160a01b0316331461026b565b61028e6103993660046115e4565b610b47565b61022e600a5481565b6101a66103b53660046115cb565b600b602052600090815260409020546001600160401b031681565b61028e6103de366004611685565b610d4c565b81516020830120600090816103f88285610eaf565b925050505b92915050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161044681611cad565b60d01c935050505090565b60025461046a906103e8906001600160401b0316611bea565b6001600160401b03166003546104809190611c04565b60085461048d9190611b87565b4210156104d95760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642074696d6520666f7220766f746560581b60448201526064015b60405180910390fd5b6104f0816040015182600001518360200151610ed3565b6105335760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b21036b2b935b63290383937b7b360611b60448201526064016104d0565b8051516000906014141561059757815161054c90611c71565b60601c905061055f826000015151610fd6565b61059260405180604001604052806012815260200171616c726561647920616e206164647265737360701b81525061101e565b6105e9565b6105ce604051806040016040528060168152602001756e6f7420616c726561647920616e206164647265737360501b81525061101e565b8151516105da90610fd6565b508051805160209091012060601c5b336001600160a01b038216146106415760405162461bcd60e51b815260206004820152601e60248201527f6d73672073656e646572206973206e6f74207468652070726f706f736572000060448201526064016104d0565b60065460009081526005602090815260408083206001600160a01b038516845290915290205460ff16156106a75760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481d9bdd1959609a1b60448201526064016104d0565b6006805460009081526005602090815260408083206001600160a01b038087168552908352818420805460ff191660019081179091559454845260078352818420606088015190911684529091528120805490919061070d90849063ffffffff16611b9f565b92506101000a81548163ffffffff021916908363ffffffff1602179055506107388260600151611061565b5050565b60005461010090046001600160a01b0316331461076b5760405162461bcd60e51b81526004016104d090611a12565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b60005463ffffffff808416600160a81b90920416106107eb5760405162461bcd60e51b81526004016104d090611aa7565b60005461080690600160a81b900463ffffffff166001611b9f565b63ffffffff168263ffffffff1611156108315760405162461bcd60e51b81526004016104d090611ace565b82516020808501919091206040519091829161086a91610855918791899101611977565b604051602081830303815290604052846108ba565b6108865760405162461bcd60e51b81526004016104d090611a12565b61088f816110b1565b50506000805463ffffffff909316600160a81b0263ffffffff60a81b19909316929092179091555050565b81516020830120600090816108cf8285610eaf565b60005461010090046001600160a01b0390811691161495945050505050565b82828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508492506109329150839050826108ba565b61094e5760405162461bcd60e51b81526004016104d090611a58565b36600061095e602082888a611b5d565b9092509050600061096f8284611c23565b905060006109816020601a8587611b5d565b61098a91611c41565b60d01c905080610998610403565b65ffffffffffff16146109ed5760405162461bcd60e51b815260206004820152601860248201527f657865637574696e67206f6e2077726f6e6720636861696e000000000000000060448201526064016104d0565b6000828152600c60205260409081902054905163712467f960e11b81526001600160a01b03909116908190819063e248cff290610a329087908f908f906004016119a9565b600060405180830381600087803b158015610a4c57600080fd5b505af1158015610a60573d6000803e3d6000fd5b505050505050505050505050505050565b60005461010090046001600160a01b03163314610aa05760405162461bcd60e51b81526004016104d090611a12565b60005463ffffffff808316600160a81b9092041610610ad15760405162461bcd60e51b81526004016104d090611aa7565b600054610aec90600160a81b900463ffffffff166001611b9f565b63ffffffff168163ffffffff161115610b175760405162461bcd60e51b81526004016104d090611ace565b610b20826110b1565b6000805463ffffffff909216600160a81b0263ffffffff60a81b1990921691909117905550565b60408051602081018990526001600160e01b03198881168284015260e088901b166044820152604881018690526bffffffffffffffffffffffff19606086811b8216606884015285901b16607c82015281518082036070018152609090910190915281610bb482826108ba565b610bd05760405162461bcd60e51b81526004016104d090611a58565b8663ffffffff16600a5410610bf75760405162461bcd60e51b81526004016104d090611aa7565b600a54610c05906001611b87565b8763ffffffff161115610c2a5760405162461bcd60e51b81526004016104d090611ace565b6001600160e01b031988166319289c8160e31b14610cb05760405162461bcd60e51b815260206004820152603960248201527f61646d696e5365745265736f75726365576974685369676e61747572653a204960448201527f6e76616c69642066756e6374696f6e207369676e61747572650000000000000060648201526084016104d0565b6000868152600c60205260409081902080546001600160a01b0319166001600160a01b038881169182179092559151635c7d1b9b60e11b815260048101899052908616602482015286919063b8fa373690604401600060405180830381600087803b158015610d1e57600080fd5b505af1158015610d32573d6000803e3d6000fd5b50505063ffffffff909816600a5550505050505050505050565b60005463ffffffff808416600160c81b9092041610610d7d5760405162461bcd60e51b81526004016104d090611aa7565b600054610d9890600160c81b900463ffffffff166001611b9f565b63ffffffff168263ffffffff161115610dc35760405162461bcd60e51b81526004016104d090611ace565b60408051602081018790526001600160c01b031960c087901b16918101919091526001600160e01b031960e085811b8216604884015284901b16604c820152610e1e90605001604051602081830303815290604052826108ba565b610e3a5760405162461bcd60e51b81526004016104d090611a12565b60018590556002805467ffffffffffffffff19166001600160401b0386161790556004805463ffffffff191663ffffffff858116919091179091556000805463ffffffff60c81b1916600160c81b928516929092029190911781556006805491610ea383611d10565b91905055505050505050565b6000806000610ebe8585611191565b91509150610ecb81611201565b509392505050565b815160208301206000908083835b87518160ff161015610fc757610ef8600283611d4b565b63ffffffff16610f575782888260ff1681518110610f1857610f18611db0565b6020026020010151604051602001610f3a929190918252602082015260400190565b604051602081830303815290604052805190602001209250610fa8565b878160ff1681518110610f6c57610f6c611db0565b602002602001015183604051602001610f8f929190918252602082015260400190565b6040516020818303038152906040528051906020012092505b610fb3600283611bc7565b915080610fbf81611d2b565b915050610ee1565b50506001541495945050505050565b61101b81604051602401610fec91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790526113bc565b50565b61101b8160405160240161103291906119df565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526113bc565b6004546110769060029063ffffffff16611bc7565b60065460009081526007602090815260408083206001600160a01b038616845290915290205463ffffffff9182169116111561101b5761101b815b6001600160a01b0381166111195760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b60648201526084016104d0565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a360008054610100600160a81b0319166101006001600160a01b0384160217815542600855600680549161118983611d10565b919050555050565b6000808251604114156111c85760208301516040840151606085015160001a6111bc878285856113dd565b945094505050506111fa565b8251604014156111f257602083015160408401516111e78683836114ca565b9350935050506111fa565b506000905060025b9250929050565b600081600481111561121557611215611d9a565b141561121e5750565b600181600481111561123257611232611d9a565b14156112805760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104d0565b600281600481111561129457611294611d9a565b14156112e25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104d0565b60038160048111156112f6576112f6611d9a565b141561134f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104d0565b600481600481111561136357611363611d9a565b141561101b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104d0565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561141457506000905060036114c1565b8460ff16601b1415801561142c57508460ff16601c14155b1561143d57506000905060046114c1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611491573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114ba576000600192509250506114c1565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016114eb878288856113dd565b935093505050935093915050565b80356001600160a01b038116811461151057600080fd5b919050565b600082601f83011261152657600080fd5b81356001600160401b0381111561153f5761153f611dc6565b611552601f8201601f1916602001611b2d565b81815284602083860101111561156757600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff8116811461151057600080fd5b600080604083850312156115ab57600080fd5b6115b4836114f9565b91506115c260208401611584565b90509250929050565b6000602082840312156115dd57600080fd5b5035919050565b600080600080600080600060e0888a0312156115ff57600080fd5b8735965060208801356001600160e01b03198116811461161e57600080fd5b955061162c60408901611584565b945060608801359350611641608089016114f9565b925061164f60a089016114f9565b915060c08801356001600160401b0381111561166a57600080fd5b6116768a828b01611515565b91505092959891949750929550565b600080600080600060a0868803121561169d57600080fd5b8535945060208601356001600160401b0380821682146116bc57600080fd5b8195506116cb60408901611584565b94506116d960608901611584565b935060808801359150808211156116ef57600080fd5b506116fc88828901611515565b9150509295509295909350565b60008060006040848603121561171e57600080fd5b83356001600160401b038082111561173557600080fd5b818601915086601f83011261174957600080fd5b81358181111561175857600080fd5b87602082850101111561176a57600080fd5b60209283019550935090850135908082111561178557600080fd5b5061179286828701611515565b9150509250925092565b600080604083850312156117af57600080fd5b82356001600160401b03808211156117c657600080fd5b6117d286838701611515565b935060208501359150808211156117e857600080fd5b506117f585828601611515565b9150509250929050565b60008060006060848603121561181457600080fd5b83356001600160401b038082111561182b57600080fd5b61183787838801611515565b945061184560208701611584565b9350604086013591508082111561178557600080fd5b6000602080838503121561186e57600080fd5b82356001600160401b038082111561188557600080fd5b908401906080828703121561189957600080fd5b6118a1611b05565b8235828111156118b057600080fd5b6118bc88828601611515565b8252506118ca848401611584565b848201526040830135828111156118e057600080fd5b8301601f810188136118f157600080fd5b80358381111561190357611903611dc6565b8060051b9350611914868501611b2d565b8181528681019083880186850189018c101561192f57600080fd5b600096505b83871015611952578035835260019690960195918801918801611934565b50604085015250611968915050606084016114f9565b60608201529695505050505050565b63ffffffff60e01b8360e01b1681526000825161199b816004850160208701611ce0565b919091016004019392505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b60208152600082518060208401526119fe816040850160208701611ce0565b601f01601f19169190910160400192915050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252602f908201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960408201526e3390333937b69033b7bb32b93737b960891b606082015260800190565b6020808252600d908201526c496e76616c6964206e6f6e636560981b604082015260600190565b60208082526019908201527f4e6f6e6365206d75737420696e6372656d656e74206279203100000000000000604082015260600190565b604051608081016001600160401b0381118282101715611b2757611b27611dc6565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611b5557611b55611dc6565b604052919050565b60008085851115611b6d57600080fd5b83861115611b7a57600080fd5b5050820193919092039150565b60008219821115611b9a57611b9a611d6e565b500190565b600063ffffffff808316818516808303821115611bbe57611bbe611d6e565b01949350505050565b600063ffffffff80841680611bde57611bde611d84565b92169190910492915050565b60006001600160401b0380841680611bde57611bde611d84565b6000816000190483118215151615611c1e57611c1e611d6e565b500290565b803560208310156103fd57600019602084900360031b1b1692915050565b6001600160d01b03198135818116916006851015611c695780818660060360031b1b83161692505b505092915050565b805160208201516bffffffffffffffffffffffff198082169291906014831015611ca55780818460140360031b1b83161693505b505050919050565b805160208201516001600160d01b03198082169291906006831015611ca55760069290920360031b82901b161692915050565b60005b83811015611cfb578181015183820152602001611ce3565b83811115611d0a576000848401525b50505050565b6000600019821415611d2457611d24611d6e565b5060010190565b600060ff821660ff811415611d4257611d42611d6e565b60010192915050565b600063ffffffff80841680611d6257611d62611d84565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122093e3c2e8188d5fb6691b6263267f9e41bf8958cf64ef6a8c64e268fd50a5d17064736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      initialGovernor,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialGovernor, overrides || {});
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
