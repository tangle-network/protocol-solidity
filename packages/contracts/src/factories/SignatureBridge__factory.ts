/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "newResourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminSetResourceWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "averageSessionLengthInMillisecs",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentVotingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastGovernorUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOfProposers",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerSetRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerSetUpdateNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sessionLengthMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposerSetRoot",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_averageSessionLengthInMillisecs",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_numOfProposers",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_proposerSetUpdateNonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "updateProposerSetData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "leafIndex",
            type: "uint32",
          },
          {
            internalType: "bytes32[]",
            name: "siblingPathNodes",
            type: "bytes32[]",
          },
          {
            internalType: "address",
            name: "proposedGovernor",
            type: "address",
          },
        ],
        internalType: "struct Governable.Vote",
        name: "vote",
        type: "tuple",
      },
    ],
    name: "voteInFavorForceSetGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008054600160a81b600160e81b0319168155600280546001600160401b0319166001600160401b03178155600355600581905560095534801561004757600080fd5b50604051611d28380380611d28833981016040819052610066916100c8565b600080546001600160a81b0319166101006001600160a01b0384811682029290921780845542600855604051859492909104909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a350506100f8565b6000602082840312156100da57600080fd5b81516001600160a01b03811681146100f157600080fd5b9392505050565b611c21806101076000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638755bcad116100de578063bac163a211610097578063c7af335211610071578063c7af335214610358578063c944e40814610370578063cc3c74a114610383578063f3d23d541461038c57600080fd5b8063bac163a214610336578063bdfadc8414610346578063c5eb6b1f1461034f57600080fd5b80638755bcad146102b95780638b7e8782146102cc57806393596700146102f05780639d2b1ed7146103075780639e09583c1461031a578063a6e94c911461032357600080fd5b80633a049e02116101305780633a049e02146102365780634c830cbd1461023f5780635c975abb1461025e578063715018a6146102755780637296b5d81461027d57806384db809f1461029057600080fd5b8063016737bb146101785780630c340a24146101a857806313cb01f9146101d25780631ed13d1b146101fe57806324118804146102115780633408e47014610226575b600080fd5b60025461018b906001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b60005461010090046001600160a01b03165b6040516001600160a01b03909116815260200161019f565b6000546101e990600160a81b900463ffffffff1681565b60405163ffffffff909116815260200161019f565b6101ba61020c366004611638565b61039f565b61022461021f3660046116f7565b6103bf565b005b465b60405190815260200161019f565b61022860055481565b610247610598565b60405165ffffffffffff909116815260200161019f565b60005460ff165b604051901515815260200161019f565b6102246105e6565b61022461028b36600461169b565b610664565b6101ba61029e366004611467565b600a602052600090815260409020546001600160a01b031681565b6102656102c7366004611638565b610790565b6102d7600160f81b81565b6040516001600160f01b0319909116815260200161019f565b6000546101e990600160c81b900463ffffffff1681565b6102246103153660046115a5565b6107c4565b61022860085481565b610224610331366004611434565b610947565b6004546101e99063ffffffff1681565b61022860035481565b61022860015481565b60005461010090046001600160a01b03163314610265565b61022461037e366004611480565b610a49565b61022860095481565b61022461039a366004611521565b610c4e565b81516020830120600090816103b48285610db1565b925050505b92915050565b6002546103d8906103e8906001600160401b0316611a61565b6001600160401b03166003546103ee9190611a7b565b6008546103fb91906119fe565b4210156104475760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642074696d6520666f7220766f746560581b60448201526064015b60405180910390fd5b60208101518151339161045b918390610dd5565b61049e5760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b21036b2b935b63290383937b7b360611b604482015260640161043e565b60055460009081526006602090815260408083206001600160a01b038516845290915290205460ff16156105045760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481d9bdd1959609a1b604482015260640161043e565b6005805460009081526006602090815260408083206001600160a01b038087168552908352818420805460ff1916600190811790915594548452600783528184208783015190911684529091528120805490919061056990849063ffffffff16611a16565b92506101000a81548163ffffffff021916908363ffffffff1602179055506105948260400151610f0d565b5050565b60408051600160f81b602082018190524660e01b6001600160e01b031981166022840152835180840360060181526026909301909352600092916105db81611ae8565b60d01c935050505090565b60005461010090046001600160a01b031633146106155760405162461bcd60e51b815260040161043e90611879565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b60005463ffffffff808416600160a81b90920416106106955760405162461bcd60e51b815260040161043e9061190e565b6000546106b090600160a81b900463ffffffff166001611a16565b63ffffffff168263ffffffff1611156107075760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b604482015260640161043e565b8251602080850191909120604051909182916107409161072b9187918991016117ef565b60405160208183030381529060405284610790565b61075c5760405162461bcd60e51b815260040161043e90611879565b61076581610f64565b50506000805463ffffffff909316600160a81b0263ffffffff60a81b19909316929092179091555050565b81516020830120600090816107a58285610db1565b60005461010090046001600160a01b0390811691161495945050505050565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250849250610808915083905082610790565b6108245760405162461bcd60e51b815260040161043e906118bf565b366000610834602082888a6119d4565b909250905060006108458284611a9a565b905060006108576020601a85876119d4565b61086091611ab8565b60d01c90508061086e610598565b65ffffffffffff16146108c35760405162461bcd60e51b815260206004820152601860248201527f657865637574696e67206f6e2077726f6e6720636861696e0000000000000000604482015260640161043e565b6000828152600a60205260409081902054905163712467f960e11b81526001600160a01b03909116908190819063e248cff2906109089087908f908f90600401611843565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b505050505050505050505050505050565b60005461010090046001600160a01b031633146109765760405162461bcd60e51b815260040161043e90611879565b60005463ffffffff808316600160a81b90920416106109a75760405162461bcd60e51b815260040161043e9061190e565b6000546109c290600160a81b900463ffffffff166001611a16565b63ffffffff168163ffffffff161115610a195760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b604482015260640161043e565b610a2282610f64565b6000805463ffffffff909216600160a81b0263ffffffff60a81b1990921691909117905550565b60408051602081018990526001600160e01b03198881168284015260e088901b166044820152604881018690526bffffffffffffffffffffffff19606086811b8216606884015285901b16607c82015281518082036070018152609090910190915281610ab68282610790565b610ad25760405162461bcd60e51b815260040161043e906118bf565b8663ffffffff1660095410610af95760405162461bcd60e51b815260040161043e9061190e565b600954610b08906104186119fe565b8763ffffffff1610610b2c5760405162461bcd60e51b815260040161043e90611935565b6001600160e01b031988166319289c8160e31b14610bb25760405162461bcd60e51b815260206004820152603960248201527f61646d696e5365745265736f75726365576974685369676e61747572653a204960448201527f6e76616c69642066756e6374696f6e207369676e617475726500000000000000606482015260840161043e565b6000868152600a60205260409081902080546001600160a01b0319166001600160a01b038881169182179092559151635c7d1b9b60e11b815260048101899052908616602482015286919063b8fa373690604401600060405180830381600087803b158015610c2057600080fd5b505af1158015610c34573d6000803e3d6000fd5b50505063ffffffff90981660095550505050505050505050565b60005463ffffffff808416600160c81b9092041610610c7f5760405162461bcd60e51b815260040161043e9061190e565b600054610c9b90600160c81b900463ffffffff16610418611a16565b63ffffffff168263ffffffff1610610cc55760405162461bcd60e51b815260040161043e90611935565b60408051602081018790526001600160c01b031960c087901b16918101919091526001600160e01b031960e085811b8216604884015284901b16604c820152610d209060500160405160208183030381529060405282610790565b610d3c5760405162461bcd60e51b815260040161043e90611879565b60018590556002805467ffffffffffffffff19166001600160401b0386161790556004805463ffffffff191663ffffffff858116919091179091556000805463ffffffff60c81b1916600160c81b928516929092029190911781556005805491610da583611b1f565b91905055505050505050565b6000806000610dc08585611044565b91509150610dcd816110b4565b509392505050565b6040516bffffffffffffffffffffffff19606084901b166020820152600090819060340160408051601f1981840301815291905280516020909101209050808360005b87518160ff161015610efe57610e2f600283611b5a565b63ffffffff16610e8e5782888260ff1681518110610e4f57610e4f611bbf565b6020026020010151604051602001610e71929190918252602082015260400190565b604051602081830303815290604052805190602001209250610edf565b878160ff1681518110610ea357610ea3611bbf565b602002602001015183604051602001610ec6929190918252602082015260400190565b6040516020818303038152906040528051906020012092505b610eea600283611a3e565b915080610ef681611b3a565b915050610e18565b50506001541495945050505050565b600454610f229060029063ffffffff16611a3e565b60055460009081526007602090815260408083206001600160a01b038616845290915290205463ffffffff91821691161115610f6157610f6181610f64565b50565b6001600160a01b038116610fcc5760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b606482015260840161043e565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a360008054610100600160a81b0319166101006001600160a01b0384160217815542600855600580549161103c83611b1f565b919050555050565b60008082516041141561107b5760208301516040840151606085015160001a61106f8782858561126f565b945094505050506110ad565b8251604014156110a5576020830151604084015161109a86838361135c565b9350935050506110ad565b506000905060025b9250929050565b60008160048111156110c8576110c8611ba9565b14156110d15750565b60018160048111156110e5576110e5611ba9565b14156111335760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161043e565b600281600481111561114757611147611ba9565b14156111955760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161043e565b60038160048111156111a9576111a9611ba9565b14156112025760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161043e565b600481600481111561121657611216611ba9565b1415610f615760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161043e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156112a65750600090506003611353565b8460ff16601b141580156112be57508460ff16601c14155b156112cf5750600090506004611353565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611323573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661134c57600060019250925050611353565b9150600090505b94509492505050565b6000806001600160ff1b0383168161137960ff86901c601b6119fe565b90506113878782888561126f565b935093505050935093915050565b80356001600160a01b03811681146113ac57600080fd5b919050565b600082601f8301126113c257600080fd5b81356001600160401b038111156113db576113db611bd5565b6113ee601f8201601f19166020016119a4565b81815284602083860101111561140357600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff811681146113ac57600080fd5b6000806040838503121561144757600080fd5b61145083611395565b915061145e60208401611420565b90509250929050565b60006020828403121561147957600080fd5b5035919050565b600080600080600080600060e0888a03121561149b57600080fd5b8735965060208801356001600160e01b0319811681146114ba57600080fd5b95506114c860408901611420565b9450606088013593506114dd60808901611395565b92506114eb60a08901611395565b915060c08801356001600160401b0381111561150657600080fd5b6115128a828b016113b1565b91505092959891949750929550565b600080600080600060a0868803121561153957600080fd5b8535945060208601356001600160401b03808216821461155857600080fd5b81955061156760408901611420565b945061157560608901611420565b9350608088013591508082111561158b57600080fd5b50611598888289016113b1565b9150509295509295909350565b6000806000604084860312156115ba57600080fd5b83356001600160401b03808211156115d157600080fd5b818601915086601f8301126115e557600080fd5b8135818111156115f457600080fd5b87602082850101111561160657600080fd5b60209283019550935090850135908082111561162157600080fd5b5061162e868287016113b1565b9150509250925092565b6000806040838503121561164b57600080fd5b82356001600160401b038082111561166257600080fd5b61166e868387016113b1565b9350602085013591508082111561168457600080fd5b50611691858286016113b1565b9150509250929050565b6000806000606084860312156116b057600080fd5b83356001600160401b03808211156116c757600080fd5b6116d3878388016113b1565b94506116e160208701611420565b9350604086013591508082111561162157600080fd5b6000602080838503121561170a57600080fd5b82356001600160401b038082111561172157600080fd5b908401906060828703121561173557600080fd5b61173d61197c565b61174683611420565b8152838301358281111561175957600080fd5b8301601f8101881361176a57600080fd5b80358381111561177c5761177c611bd5565b8060051b935061178d8685016119a4565b8181528681019083880186850189018c10156117a857600080fd5b600096505b838710156117cb5780358352600196909601959188019188016117ad565b5084880152506117e091505060408401611395565b60408201529695505050505050565b63ffffffff60e01b8360e01b1681526000825160005b818110156118225760208186018101516004868401015201611805565b81811115611834576000600483860101525b50919091016004019392505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252602f908201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960408201526e3390333937b69033b7bb32b93737b960891b606082015260800190565b6020808252600d908201526c496e76616c6964206e6f6e636560981b604082015260600190565b60208082526027908201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686040820152660c2dc40626068760cb1b606082015260800190565b604051606081016001600160401b038111828210171561199e5761199e611bd5565b60405290565b604051601f8201601f191681016001600160401b03811182821017156119cc576119cc611bd5565b604052919050565b600080858511156119e457600080fd5b838611156119f157600080fd5b5050820193919092039150565b60008219821115611a1157611a11611b7d565b500190565b600063ffffffff808316818516808303821115611a3557611a35611b7d565b01949350505050565b600063ffffffff80841680611a5557611a55611b93565b92169190910492915050565b60006001600160401b0380841680611a5557611a55611b93565b6000816000190483118215151615611a9557611a95611b7d565b500290565b803560208310156103b957600019602084900360031b1b1692915050565b6001600160d01b03198135818116916006851015611ae05780818660060360031b1b83161692505b505092915050565b805160208201516001600160d01b03198082169291906006831015611b175780818460060360031b1b83161693505b505050919050565b6000600019821415611b3357611b33611b7d565b5060010190565b600060ff821660ff811415611b5157611b51611b7d565b60010192915050565b600063ffffffff80841680611b7157611b71611b93565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a8ea4e46ab8057ce5760091e1dda6b73c949b1bb61ee876b026ff8283048f85164736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      initialGovernor,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialGovernor, overrides || {});
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
