/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "adminSetResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeHandler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "checkPubKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToRescue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setBridgeHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000805463ffffffff60a81b1916815560035534801561002357600080fd5b50604051611edd380380611edd833981016040819052610042916100a0565b600080546001600160a81b0319166101006001600160a01b03848116820292909217808455604051859492909104909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a350506100d0565b6000602082840312156100b257600080fd5b81516001600160a01b03811681146100c957600080fd5b9392505050565b611dfe806100df6000396000f3fe6080604052600436106101395760003560e01c80637296b5d8116100ab5780639d2b1ed71161006f5780639d2b1ed7146103a5578063a6e94c91146103c5578063c7af3352146103e5578063cc3c74a11461040a578063d4066f4c14610420578063f1835db71461044057600080fd5b80637296b5d8146102de57806384db809f146102fe5780638755bcad146103345780638b7e878214610354578063911005e71461038557600080fd5b80632f58bd6f116100fd5780632f58bd6f1461021c5780633408e4701461023c5780634c830cbd146102595780635c975abb14610285578063711e9274146102a9578063715018a6146102c957600080fd5b80630c340a24146101455780630f3112971461018157806313cb01f9146101a357806317a8a975146101dc5780631ed13d1b146101fc57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5060005461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018d57600080fd5b506101a161019c3660046117ea565b610460565b005b3480156101af57600080fd5b506000546101c790600160a81b900463ffffffff1681565b60405163ffffffff9091168152602001610178565b3480156101e857600080fd5b506101a16101f73660046117a4565b610573565b34801561020857600080fd5b506101a16102173660046119d8565b6108d1565b34801561022857600080fd5b50600454610164906001600160a01b031681565b34801561024857600080fd5b50465b604051908152602001610178565b34801561026557600080fd5b5061026e610921565b60405165ffffffffffff9091168152602001610178565b34801561029157600080fd5b5060005460ff165b6040519015158152602001610178565b3480156102b557600080fd5b506101a16102c4366004611832565b61096f565b3480156102d557600080fd5b506101a1610a6b565b3480156102ea57600080fd5b506101a16102f9366004611a3c565b610ae9565b34801561030a57600080fd5b506101646103193660046118f0565b6002602052600090815260409020546001600160a01b031681565b34801561034057600080fd5b5061029961034f3660046119d8565b610c4f565b34801561036057600080fd5b5061036c600160f81b81565b6040516001600160f01b03199091168152602001610178565b34801561039157600080fd5b506101a16103a0366004611867565b610c85565b3480156103b157600080fd5b506101a16103c0366004611979565b610e15565b3480156103d157600080fd5b506101a16103e0366004611832565b611016565b3480156103f157600080fd5b5060005461010090046001600160a01b03163314610299565b34801561041657600080fd5b5061024b60035481565b34801561042c57600080fd5b5061029961043b366004611937565b6110ec565b34801561044c57600080fd5b5061029961045b366004611909565b611122565b6004546001600160a01b031633146104935760405162461bcd60e51b815260040161048a90611bf6565b60405180910390fd5b80600354106104b45760405162461bcd60e51b815260040161048a90611bcf565b6003546104c2906001611c8c565b8111156104e15760405162461bcd60e51b815260040161048a90611c2b565b6000838152600260205260409081902080546001600160a01b0319166001600160a01b038781169182179092559151635c7d1b9b60e11b815260048101869052908416602482015285919063b8fa373690604401600060405180830381600087803b15801561054f57600080fd5b505af1158015610563573d6000803e3d6000fd5b5050506003929092555050505050565b6004546001600160a01b0316331461059d5760405162461bcd60e51b815260040161048a90611bf6565b6001600160a01b0383166106015760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f742073656e64206c697175696469747920746f207a65726f206164604482015264647265737360d81b606482015260840161048a565b6001600160a01b03841630141561065a5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f742072657363756520777261707065642061737365740000000000604482015260640161048a565b806003541061067b5760405162461bcd60e51b815260040161048a90611bcf565b600354610689906001611c8c565b8111156106a85760405162461bcd60e51b815260040161048a90611c2b565b6001600160a01b03841661073857478281106106fa576040516001600160a01b0385169084156108fc029085906000818181858888f193505050501580156106f4573d6000803e3d6000fd5b50610732565b6040516001600160a01b0385169082156108fc029083906000818181858888f19350505050158015610730573d6000803e3d6000fd5b505b506108c9565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a082319060240160206040518083038186803b15801561077a57600080fd5b505afa15801561078e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b29190611a99565b90508281106108435760405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905286169063a9059cbb90604401602060405180830381600087803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083d91906118c7565b506108c7565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820183905286169063a9059cbb90604401602060405180830381600087803b15801561088d57600080fd5b505af11580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c591906118c7565b505b505b600355505050565b8151602083012060006108e48284611217565b6040519091506001600160a01b038216907f391f5edd7209ba797e8055bce97cab2d1a480a2849b0c7fe965c370457166dc490600090a250505050565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161096481611d1a565b60d01c935050505090565b6004546001600160a01b031633146109995760405162461bcd60e51b815260040161048a90611bf6565b6001600160a01b0382166109e55760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b604482015260640161048a565b8063ffffffff1660035410610a0c5760405162461bcd60e51b815260040161048a90611bcf565b600354610a1a906001611c8c565b8163ffffffff161115610a3f5760405162461bcd60e51b815260040161048a90611c2b565b600480546001600160a01b0319166001600160a01b03939093169290921790915563ffffffff16600355565b60005461010090046001600160a01b03163314610a9a5760405162461bcd60e51b815260040161048a90611b89565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b60005463ffffffff808416600160a81b9092041610610b1a5760405162461bcd60e51b815260040161048a90611bcf565b600054610b3590600160a81b900463ffffffff166001611ca4565b63ffffffff168263ffffffff161115610b605760405162461bcd60e51b815260040161048a90611c2b565b604080518082018252601c8152600080516020611da98339815191526020808301919091528551868201209251919291600091610ba1918791899101611b33565b60408051808303601f19018152828252805160209182012090830181905292508391610bfd9186910160408051601f1981840301815290829052610be89291602001611b16565b60405160208183030381529060405286610c4f565b610c195760405162461bcd60e51b815260040161048a90611b89565b610c228161123b565b50506000805463ffffffff909516600160a81b0263ffffffff60a81b199095169490941790935550505050565b8151602083012060009081610c648285611217565b60005461010090046001600160a01b03908116911614925050505b92915050565b60005463ffffffff808416600160a81b9092041610610cb65760405162461bcd60e51b815260040161048a90611bcf565b600054610cd190600160a81b900463ffffffff166001611ca4565b63ffffffff168263ffffffff161115610cfc5760405162461bcd60e51b815260040161048a90611c2b565b60006040518060400160405280601c8152602001600080516020611da9833981519152815250905060008385604051602001610d6392919060e09290921b6001600160e01b031916825260601b6bffffffffffffffffffffffff1916600482015260180190565b604051602081830303815290604052805190602001209050610dc58282604051602001610d9291815260200190565b60408051601f1981840301815290829052610db09291602001611b16565b60405160208183030381529060405284610c4f565b610de15760405162461bcd60e51b815260040161048a90611b89565b610dea8561123b565b50506000805463ffffffff909316600160a81b0263ffffffff60a81b19909316929092179091555050565b8282604051610e25929190611aed565b60405180910390208160006040518060400160405280601c8152602001600080516020611da98339815191528152509050610e818184604051602001610e6c929190611afd565b60405160208183030381529060405283610c4f565b610ee55760405162461bcd60e51b815260206004820152602f60248201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960448201526e3390333937b69033b7bb32b93737b960891b606482015260840161048a565b366000610ef5602082898b611c62565b90925090506000610f068284611ccc565b90506000610f186020601a8587611c62565b610f2191611cea565b60d01c905080610f2f610921565b65ffffffffffff1614610f845760405162461bcd60e51b815260206004820152601860248201527f657865637574696e67206f6e2077726f6e6720636861696e0000000000000000604482015260640161048a565b6000828152600260205260409020546001600160a01b031680610fa681611309565b806001600160a01b031663e248cff2858e8e6040518463ffffffff1660e01b8152600401610fd693929190611b53565b600060405180830381600087803b158015610ff057600080fd5b505af1158015611004573d6000803e3d6000fd5b50505050505050505050505050505050565b60005461010090046001600160a01b031633146110455760405162461bcd60e51b815260040161048a90611b89565b60005463ffffffff808316600160a81b90920416106110765760405162461bcd60e51b815260040161048a90611bcf565b60005461109190600160a81b900463ffffffff166001611ca4565b63ffffffff168163ffffffff1611156110bc5760405162461bcd60e51b815260040161048a90611c2b565b6110c58261123b565b6000805463ffffffff909216600160a81b0263ffffffff60a81b1990921691909117905550565b6000336001600160a01b03168383604051611108929190611aed565b6040519081900390206001600160a01b0316149392505050565b6000806040518060400160405280601c8152602001600080516020611da9833981519152815250905060008187604051602001611160929190611afd565b6040516020818303038152906040528051906020012090506111906000546001600160a01b036101009091041690565b6001600160a01b0316600182888888604051600081526020016040526040516111d5949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156111f7573d6000803e3d6000fd5b505050602060405103516001600160a01b03161492505050949350505050565b60008060006112268585611354565b91509150611233816113c4565b509392505050565b6001600160a01b0381166112a35760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b606482015260840161048a565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a3600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6040516001600160a01b03821660248201526113519060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b17905261157f565b50565b60008082516041141561138b5760208301516040840151606085015160001a61137f878285856115a0565b945094505050506113bd565b8251604014156113b557602083015160408401516113aa86838361168d565b9350935050506113bd565b506000905060025b9250929050565b60008160048111156113d8576113d8611d67565b14156113e15750565b60018160048111156113f5576113f5611d67565b14156114435760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161048a565b600281600481111561145757611457611d67565b14156114a55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048a565b60038160048111156114b9576114b9611d67565b14156115125760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048a565b600481600481111561152657611526611d67565b14156113515760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161048a565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156115d75750600090506003611684565b8460ff16601b141580156115ef57508460ff16601c14155b156116005750600090506004611684565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611654573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661167d57600060019250925050611684565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016116ae878288856115a0565b935093505050935093915050565b60008083601f8401126116ce57600080fd5b50813567ffffffffffffffff8111156116e657600080fd5b6020830191508360208285010111156113bd57600080fd5b600082601f83011261170f57600080fd5b813567ffffffffffffffff8082111561172a5761172a611d7d565b604051601f8301601f19908116603f0116810190828211818310171561175257611752611d7d565b8160405283815286602085880101111561176b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803563ffffffff8116811461179f57600080fd5b919050565b600080600080608085870312156117ba57600080fd5b84356117c581611d93565b935060208501356117d581611d93565b93969395505050506040820135916060013590565b6000806000806080858703121561180057600080fd5b843561180b81611d93565b935060208501359250604085013561182281611d93565b9396929550929360600135925050565b6000806040838503121561184557600080fd5b823561185081611d93565b915061185e6020840161178b565b90509250929050565b60008060006060848603121561187c57600080fd5b833561188781611d93565b92506118956020850161178b565b9150604084013567ffffffffffffffff8111156118b157600080fd5b6118bd868287016116fe565b9150509250925092565b6000602082840312156118d957600080fd5b815180151581146118e957600080fd5b9392505050565b60006020828403121561190257600080fd5b5035919050565b6000806000806080858703121561191f57600080fd5b84359350602085013560ff811681146117d557600080fd5b6000806020838503121561194a57600080fd5b823567ffffffffffffffff81111561196157600080fd5b61196d858286016116bc565b90969095509350505050565b60008060006040848603121561198e57600080fd5b833567ffffffffffffffff808211156119a657600080fd5b6119b2878388016116bc565b909550935060208601359150808211156119cb57600080fd5b506118bd868287016116fe565b600080604083850312156119eb57600080fd5b823567ffffffffffffffff80821115611a0357600080fd5b611a0f868387016116fe565b93506020850135915080821115611a2557600080fd5b50611a32858286016116fe565b9150509250929050565b600080600060608486031215611a5157600080fd5b833567ffffffffffffffff80821115611a6957600080fd5b611a75878388016116fe565b9450611a836020870161178b565b935060408601359150808211156119cb57600080fd5b600060208284031215611aab57600080fd5b5051919050565b6000815160005b81811015611ad35760208185018101518683015201611ab9565b81811115611ae2576000828601525b509290920192915050565b8183823760009101908152919050565b6000611b098285611ab2565b9283525050602001919050565b6000611b2b611b258386611ab2565b84611ab2565b949350505050565b60e083901b6001600160e01b03191681526000611b2b6004830184611ab2565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252600d908201526c496e76616c6964206e6f6e636560981b604082015260600190565b6020808252818101527f73656e646572206973206e6f7420746865206272696467652068616e646c6572604082015260600190565b60208082526019908201527f4e6f6e6365206d75737420696e6372656d656e74206279203100000000000000604082015260600190565b60008085851115611c7257600080fd5b83861115611c7f57600080fd5b5050820193919092039150565b60008219821115611c9f57611c9f611d51565b500190565b600063ffffffff808316818516808303821115611cc357611cc3611d51565b01949350505050565b80356020831015610c7f57600019602084900360031b1b1692915050565b6001600160d01b03198135818116916006851015611d125780818660060360031b1b83161692505b505092915050565b805160208201516001600160d01b03198082169291906006831015611d495780818460060360031b1b83161693505b505050919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461135157600080fdfe19457468657265756d205369676e6564204d6573736167653a0a333200000000a264697066735822122086278567e04626b61720592e90cfdc28724c13b5c5bb43ab51e8add56a743b5964736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      initialGovernor,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialGovernor, overrides || {});
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
