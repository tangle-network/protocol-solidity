/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Verifier, VerifierInterface } from "../Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier2",
        name: "_verifier2",
        type: "address",
      },
      {
        internalType: "contract IVerifier3",
        name: "_verifier3",
        type: "address",
      },
      {
        internalType: "contract IVerifier4",
        name: "_verifier4",
        type: "address",
      },
      {
        internalType: "contract IVerifier5",
        name: "_verifier5",
        type: "address",
      },
      {
        internalType: "contract IVerifier6",
        name: "_verifier6",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "v2",
    outputs: [
      {
        internalType: "contract IVerifier2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v3",
    outputs: [
      {
        internalType: "contract IVerifier3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v4",
    outputs: [
      {
        internalType: "contract IVerifier4",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v5",
    outputs: [
      {
        internalType: "contract IVerifier5",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v6",
    outputs: [
      {
        internalType: "contract IVerifier6",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "maxEdges",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b5c380380610b5c83398101604081905261002f91610091565b600080546001600160a01b03199081166001600160a01b0397881617909155600180548216958716959095179094556002805485169386169390931790925560038054841691851691909117905560048054909216921691909117905561011e565b600080600080600060a086880312156100a957600080fd5b85516100b481610106565b60208701519095506100c581610106565b60408701519094506100d681610106565b60608701519093506100e781610106565b60808701519092506100f881610106565b809150509295509295909350565b6001600160a01b038116811461011b57600080fd5b50565b610a2f8061012d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309c5e7061461006757806331473ebe146100975780636257a38e146100aa5780638041ca53146100bd578063bfa57503146100e0578063f3acae3a146100f3575b600080fd5b60045461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60035461007a906001600160a01b031681565b60015461007a906001600160a01b031681565b6100d06100cb366004610430565b610106565b604051901515815260200161008e565b60025461007a906001600160a01b031681565b60005461007a906001600160a01b031681565b60008260ff16600114156101b95760008480602001905181019061012a9190610515565b6000546040516334baeab960e01b81529192506001600160a01b0316906334baeab990610161908b908b908b908790600401610808565b60206040518083038186803b15801561017957600080fd5b505afa15801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b1919061078d565b915050610320565b8260ff1660021415610212576000848060200190518101906101db919061059b565b60015460405163f398789b60e01b81529192506001600160a01b03169063f398789b90610161908b908b908b908790600401610865565b8260ff166003141561026b576000848060200190518101906102349190610616565b60025460405163c894e75760e01b81529192506001600160a01b03169063c894e75790610161908b908b908b9087906004016108b6565b8260ff16600414156102c45760008480602001905181019061028d9190610691565b600354604051636490cd3d60e11b81529192506001600160a01b03169063c9219a7a90610161908b908b908b908790600401610907565b8260ff166005141561031c576000848060200190518101906102e6919061070f565b6004805460405163c542c93b60e01b81529293506001600160a01b03169163c542c93b91610161918c918c918c91889101610958565b5060005b9695505050505050565b600082601f83011261033b57600080fd5b6103436109a9565b80838560408601111561035557600080fd5b60005b6002811015610377578135845260209384019390910190600101610358565b509095945050505050565b803561038d816109e8565b919050565b600082601f8301126103a357600080fd5b813567ffffffffffffffff808211156103be576103be6109d2565b604051601f8301601f19908116603f011681019082821181831017156103e6576103e66109d2565b816040528381528660208588010111156103ff57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461038d57600080fd5b600080600080600080610160878903121561044a57600080fd5b610454888861032a565b9550604088605f89011261046757600080fd5b61046f6109a9565b80828a0160c08b018c81111561048457600080fd5b60005b60028110156104ae5761049a8e8461032a565b855260209094019391850191600101610487565b508299506104bc8d8261032a565b9850505050505061010087013567ffffffffffffffff8111156104de57600080fd5b6104ea89828a01610392565b9350506104fa610120880161041f565b91506105096101408801610382565b90509295509295509295565b600060a0828403121561052757600080fd5b82601f83011261053657600080fd5b60405160a0810181811067ffffffffffffffff82111715610559576105596109d2565b604052808360a0810186101561056e57600080fd5b60005b6005811015610590578151835260209283019290910190600101610571565b509195945050505050565b600060c082840312156105ad57600080fd5b82601f8301126105bc57600080fd5b60405160c0810181811067ffffffffffffffff821117156105df576105df6109d2565b604052808360c081018610156105f457600080fd5b60005b60068110156105905781518352602092830192909101906001016105f7565b600060e0828403121561062857600080fd5b82601f83011261063757600080fd5b60405160e0810181811067ffffffffffffffff8211171561065a5761065a6109d2565b604052808360e0810186101561066f57600080fd5b60005b6007811015610590578151835260209283019290910190600101610672565b60006101008083850312156106a557600080fd5b83601f8401126106b457600080fd5b60405181810181811067ffffffffffffffff821117156106d6576106d66109d2565b60405280848381018710156106ea57600080fd5b600093505b6008841015610377578051825260019390930192602091820191016106ef565b600061012080838503121561072357600080fd5b83601f84011261073257600080fd5b60405181810181811067ffffffffffffffff82111715610754576107546109d2565b604052808483810187101561076857600080fd5b600093505b60098410156103775780518252600193909301926020918201910161076d565b60006020828403121561079f57600080fd5b81516107aa816109e8565b9392505050565b8060005b60028110156107df576107c98483516107e5565b60409390930192602091909101906001016107b5565b50505050565b8060005b60028110156107df5781518452602093840193909101906001016107e9565b6101a0810161081782876107e5565b61082460408301866107b1565b61083160c08301856107e5565b61010082018360005b600581101561085957815183526020928301929091019060010161083a565b50505095945050505050565b6101c0810161087482876107e5565b61088160408301866107b1565b61088e60c08301856107e5565b61010082018360005b6006811015610859578151835260209283019290910190600101610897565b6101e081016108c582876107e5565b6108d260408301866107b1565b6108df60c08301856107e5565b61010082018360005b60078110156108595781518352602092830192909101906001016108e8565b610200810161091682876107e5565b61092360408301866107b1565b61093060c08301856107e5565b61010082018360005b6008811015610859578151835260209283019290910190600101610939565b610220810161096782876107e5565b61097460408301866107b1565b61098160c08301856107e5565b61010082018360005b600981101561085957815183526020928301929091019060010161098a565b6040805190810167ffffffffffffffff811182821017156109cc576109cc6109d2565b60405290565b634e487b7160e01b600052604160045260246000fd5b80151581146109f657600080fd5b5056fea26469706673582212209c412ac51aa6e37f8831a0801734bb5ac0c705007f588f7f842b2c2b6132def864736f6c63430008050033";

export class Verifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _verifier2: string,
    _verifier3: string,
    _verifier4: string,
    _verifier5: string,
    _verifier6: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Verifier> {
    return super.deploy(
      _verifier2,
      _verifier3,
      _verifier4,
      _verifier5,
      _verifier6,
      overrides || {}
    ) as Promise<Verifier>;
  }
  getDeployTransaction(
    _verifier2: string,
    _verifier3: string,
    _verifier4: string,
    _verifier5: string,
    _verifier6: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier2,
      _verifier3,
      _verifier4,
      _verifier5,
      _verifier6,
      overrides || {}
    );
  }
  attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
