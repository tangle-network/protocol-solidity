/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface VAnchorVerifierInterface extends utils.Interface {
  functions: {
    "v2_16()": FunctionFragment;
    "v2_2()": FunctionFragment;
    "v8_16()": FunctionFragment;
    "v8_2()": FunctionFragment;
    "verifyProof(uint256[2],uint256[2][2],uint256[2],bytes,uint8,bool)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "v2_16", values?: undefined): string;
  encodeFunctionData(functionFragment: "v2_2", values?: undefined): string;
  encodeFunctionData(functionFragment: "v8_16", values?: undefined): string;
  encodeFunctionData(functionFragment: "v8_2", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "verifyProof",
    values: [
      [BigNumberish, BigNumberish],
      [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      [BigNumberish, BigNumberish],
      BytesLike,
      BigNumberish,
      boolean
    ]
  ): string;

  decodeFunctionResult(functionFragment: "v2_16", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "v2_2", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "v8_16", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "v8_2", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "verifyProof",
    data: BytesLike
  ): Result;

  events: {};
}

export interface VAnchorVerifier extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: VAnchorVerifierInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    v2_16(overrides?: CallOverrides): Promise<[string]>;

    v2_2(overrides?: CallOverrides): Promise<[string]>;

    v8_16(overrides?: CallOverrides): Promise<[string]>;

    v8_2(overrides?: CallOverrides): Promise<[string]>;

    verifyProof(
      a: [BigNumberish, BigNumberish],
      b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      c: [BigNumberish, BigNumberish],
      input: BytesLike,
      maxEdges: BigNumberish,
      smallInputs: boolean,
      overrides?: CallOverrides
    ): Promise<[boolean] & { r: boolean }>;
  };

  v2_16(overrides?: CallOverrides): Promise<string>;

  v2_2(overrides?: CallOverrides): Promise<string>;

  v8_16(overrides?: CallOverrides): Promise<string>;

  v8_2(overrides?: CallOverrides): Promise<string>;

  verifyProof(
    a: [BigNumberish, BigNumberish],
    b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
    c: [BigNumberish, BigNumberish],
    input: BytesLike,
    maxEdges: BigNumberish,
    smallInputs: boolean,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    v2_16(overrides?: CallOverrides): Promise<string>;

    v2_2(overrides?: CallOverrides): Promise<string>;

    v8_16(overrides?: CallOverrides): Promise<string>;

    v8_2(overrides?: CallOverrides): Promise<string>;

    verifyProof(
      a: [BigNumberish, BigNumberish],
      b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      c: [BigNumberish, BigNumberish],
      input: BytesLike,
      maxEdges: BigNumberish,
      smallInputs: boolean,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    v2_16(overrides?: CallOverrides): Promise<BigNumber>;

    v2_2(overrides?: CallOverrides): Promise<BigNumber>;

    v8_16(overrides?: CallOverrides): Promise<BigNumber>;

    v8_2(overrides?: CallOverrides): Promise<BigNumber>;

    verifyProof(
      a: [BigNumberish, BigNumberish],
      b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      c: [BigNumberish, BigNumberish],
      input: BytesLike,
      maxEdges: BigNumberish,
      smallInputs: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    v2_16(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    v2_2(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    v8_16(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    v8_2(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    verifyProof(
      a: [BigNumberish, BigNumberish],
      b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      c: [BigNumberish, BigNumberish],
      input: BytesLike,
      maxEdges: BigNumberish,
      smallInputs: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
