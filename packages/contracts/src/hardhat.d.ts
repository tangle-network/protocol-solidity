/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "ERC20Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Pausable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC20PresetMinterPauser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PresetMinterPauser__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "AnchorProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AnchorProxy__factory>;
    getContractFactory(
      name: "Anchor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Anchor__factory>;
    getContractFactory(
      name: "AnchorBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AnchorBase__factory>;
    getContractFactory(
      name: "LinkableAnchor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkableAnchor__factory>;
    getContractFactory(
      name: "AnchorPoseidon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AnchorPoseidon__factory>;
    getContractFactory(
      name: "IVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifier__factory>;
    getContractFactory(
      name: "ERC20AnchorPoseidon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20AnchorPoseidon__factory>;
    getContractFactory(
      name: "NativeAnchorPoseidon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeAnchorPoseidon__factory>;
    getContractFactory(
      name: "Bridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bridge__factory>;
    getContractFactory(
      name: "CompInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompInterface__factory>;
    getContractFactory(
      name: "GovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlpha__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "GovernorBravoDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegate__factory>;
    getContractFactory(
      name: "GovernorBravoDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegator__factory>;
    getContractFactory(
      name: "CompInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompInterface__factory>;
    getContractFactory(
      name: "GovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlpha__factory>;
    getContractFactory(
      name: "GovernorBravoDelegateStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegateStorageV1__factory>;
    getContractFactory(
      name: "GovernorBravoDelegatorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegatorStorage__factory>;
    getContractFactory(
      name: "GovernorBravoEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoEvents__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "AnchorHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AnchorHandler__factory>;
    getContractFactory(
      name: "ERC20Handler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Handler__factory>;
    getContractFactory(
      name: "HandlerHelpers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HandlerHelpers__factory>;
    getContractFactory(
      name: "IAnchor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAnchor__factory>;
    getContractFactory(
      name: "IAnchorTrees",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAnchorTrees__factory>;
    getContractFactory(
      name: "IBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBridge__factory>;
    getContractFactory(
      name: "IDepositExecute",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDepositExecute__factory>;
    getContractFactory(
      name: "IERCHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERCHandler__factory>;
    getContractFactory(
      name: "IExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExecutor__factory>;
    getContractFactory(
      name: "ILinkableAnchor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILinkableAnchor__factory>;
    getContractFactory(
      name: "IMintableCompToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableCompToken__factory>;
    getContractFactory(
      name: "IMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC20__factory>;
    getContractFactory(
      name: "ISemaphoreVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISemaphoreVerifier__factory>;
    getContractFactory(
      name: "ISemaphoreVerifier2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISemaphoreVerifier2__factory>;
    getContractFactory(
      name: "ISemaphoreVerifier3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISemaphoreVerifier3__factory>;
    getContractFactory(
      name: "ISemaphoreVerifier4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISemaphoreVerifier4__factory>;
    getContractFactory(
      name: "ISemaphoreVerifier5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISemaphoreVerifier5__factory>;
    getContractFactory(
      name: "ISemaphoreVerifier6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISemaphoreVerifier6__factory>;
    getContractFactory(
      name: "ITokenWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenWrapper__factory>;
    getContractFactory(
      name: "IERC6777",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC6777__factory>;
    getContractFactory(
      name: "IVAnchorVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVAnchorVerifier__factory>;
    getContractFactory(
      name: "IVAnchorVerifier216",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVAnchorVerifier216__factory>;
    getContractFactory(
      name: "IVAnchorVerifier22",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVAnchorVerifier22__factory>;
    getContractFactory(
      name: "IVAnchorVerifier816",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVAnchorVerifier816__factory>;
    getContractFactory(
      name: "IVAnchorVerifier82",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVAnchorVerifier82__factory>;
    getContractFactory(
      name: "IVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifier__factory>;
    getContractFactory(
      name: "IVerifier2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifier2__factory>;
    getContractFactory(
      name: "IVerifier3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifier3__factory>;
    getContractFactory(
      name: "IVerifier4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifier4__factory>;
    getContractFactory(
      name: "IVerifier5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifier5__factory>;
    getContractFactory(
      name: "IVerifier6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifier6__factory>;
    getContractFactory(
      name: "VAnchorEncodeInputs",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VAnchorEncodeInputs__factory>;
    getContractFactory(
      name: "BadRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadRecipient__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "GovernorBravoDelegateHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegateHarness__factory>;
    getContractFactory(
      name: "GovernorBravoImmutable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoImmutable__factory>;
    getContractFactory(
      name: "GTokenWrapperMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GTokenWrapperMock__factory>;
    getContractFactory(
      name: "IDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDeployer__factory>;
    getContractFactory(
      name: "ERC20Basic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Basic__factory>;
    getContractFactory(
      name: "IUSDT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUSDT__factory>;
    getContractFactory(
      name: "MerkleTreePoseidonMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleTreePoseidonMock__factory>;
    getContractFactory(
      name: "Administered",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Administered__factory>;
    getContractFactory(
      name: "TimelockHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockHarness__factory>;
    getContractFactory(
      name: "TimelockTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockTest__factory>;
    getContractFactory(
      name: "WEBB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WEBB__factory>;
    getContractFactory(
      name: "LinkableAnchor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkableAnchor__factory>;
    getContractFactory(
      name: "SemaphoreAnchorBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SemaphoreAnchorBase__factory>;
    getContractFactory(
      name: "SemaphoreAnchorClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SemaphoreAnchorClient__factory>;
    getContractFactory(
      name: "CompToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompToken__factory>;
    getContractFactory(
      name: "ERC20Safe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Safe__factory>;
    getContractFactory(
      name: "GovernedTokenWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernedTokenWrapper__factory>;
    getContractFactory(
      name: "TokenWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenWrapper__factory>;
    getContractFactory(
      name: "Hasher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hasher__factory>;
    getContractFactory(
      name: "IncrementalQuinTree",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IncrementalQuinTree__factory>;
    getContractFactory(
      name: "MerkleTreePoseidon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleTreePoseidon__factory>;
    getContractFactory(
      name: "MerkleTreeWithHistoryPoseidon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleTreeWithHistoryPoseidon__factory>;
    getContractFactory(
      name: "IPoseidonT3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoseidonT3__factory>;
    getContractFactory(
      name: "PoseidonT3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoseidonT3__factory>;
    getContractFactory(
      name: "PoseidonT3Lib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoseidonT3Lib__factory>;
    getContractFactory(
      name: "PoseidonT6Lib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoseidonT6Lib__factory>;
    getContractFactory(
      name: "IHasher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHasher__factory>;
    getContractFactory(
      name: "VMerkleTreeWithHistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VMerkleTreeWithHistory__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "Governable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;
    getContractFactory(
      name: "LinkableVAnchor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkableVAnchor__factory>;
    getContractFactory(
      name: "VAnchor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VAnchor__factory>;
    getContractFactory(
      name: "VAnchorBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VAnchorBase__factory>;
    getContractFactory(
      name: "Verifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier__factory>;
    getContractFactory(
      name: "Verifier2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier2__factory>;
    getContractFactory(
      name: "Verifier3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier3__factory>;
    getContractFactory(
      name: "Verifier4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier4__factory>;
    getContractFactory(
      name: "Verifier5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier5__factory>;
    getContractFactory(
      name: "Verifier6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier6__factory>;
    getContractFactory(
      name: "SemaphoreVerifier2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SemaphoreVerifier2__factory>;
    getContractFactory(
      name: "Verifier216",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier216__factory>;
    getContractFactory(
      name: "Verifier816",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier816__factory>;
    getContractFactory(
      name: "Verifier22",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier22__factory>;
    getContractFactory(
      name: "Verifier82",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier82__factory>;
    getContractFactory(
      name: "VAnchorVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VAnchorVerifier__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "ERC20Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Pausable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC20PresetMinterPauser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PresetMinterPauser>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "AnchorProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AnchorProxy>;
    getContractAt(
      name: "Anchor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Anchor>;
    getContractAt(
      name: "AnchorBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AnchorBase>;
    getContractAt(
      name: "LinkableAnchor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkableAnchor>;
    getContractAt(
      name: "AnchorPoseidon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AnchorPoseidon>;
    getContractAt(
      name: "IVerifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifier>;
    getContractAt(
      name: "ERC20AnchorPoseidon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20AnchorPoseidon>;
    getContractAt(
      name: "NativeAnchorPoseidon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeAnchorPoseidon>;
    getContractAt(
      name: "Bridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bridge>;
    getContractAt(
      name: "CompInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompInterface>;
    getContractAt(
      name: "GovernorAlpha",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorAlpha>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "GovernorBravoDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegate>;
    getContractAt(
      name: "GovernorBravoDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegator>;
    getContractAt(
      name: "CompInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompInterface>;
    getContractAt(
      name: "GovernorAlpha",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorAlpha>;
    getContractAt(
      name: "GovernorBravoDelegateStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegateStorageV1>;
    getContractAt(
      name: "GovernorBravoDelegatorStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegatorStorage>;
    getContractAt(
      name: "GovernorBravoEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoEvents>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "AnchorHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AnchorHandler>;
    getContractAt(
      name: "ERC20Handler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Handler>;
    getContractAt(
      name: "HandlerHelpers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HandlerHelpers>;
    getContractAt(
      name: "IAnchor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAnchor>;
    getContractAt(
      name: "IAnchorTrees",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAnchorTrees>;
    getContractAt(
      name: "IBridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBridge>;
    getContractAt(
      name: "IDepositExecute",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDepositExecute>;
    getContractAt(
      name: "IERCHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERCHandler>;
    getContractAt(
      name: "IExecutor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExecutor>;
    getContractAt(
      name: "ILinkableAnchor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILinkableAnchor>;
    getContractAt(
      name: "IMintableCompToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableCompToken>;
    getContractAt(
      name: "IMintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC20>;
    getContractAt(
      name: "ISemaphoreVerifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISemaphoreVerifier>;
    getContractAt(
      name: "ISemaphoreVerifier2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISemaphoreVerifier2>;
    getContractAt(
      name: "ISemaphoreVerifier3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISemaphoreVerifier3>;
    getContractAt(
      name: "ISemaphoreVerifier4",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISemaphoreVerifier4>;
    getContractAt(
      name: "ISemaphoreVerifier5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISemaphoreVerifier5>;
    getContractAt(
      name: "ISemaphoreVerifier6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISemaphoreVerifier6>;
    getContractAt(
      name: "ITokenWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenWrapper>;
    getContractAt(
      name: "IERC6777",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC6777>;
    getContractAt(
      name: "IVAnchorVerifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVAnchorVerifier>;
    getContractAt(
      name: "IVAnchorVerifier216",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVAnchorVerifier216>;
    getContractAt(
      name: "IVAnchorVerifier22",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVAnchorVerifier22>;
    getContractAt(
      name: "IVAnchorVerifier816",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVAnchorVerifier816>;
    getContractAt(
      name: "IVAnchorVerifier82",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVAnchorVerifier82>;
    getContractAt(
      name: "IVerifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifier>;
    getContractAt(
      name: "IVerifier2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifier2>;
    getContractAt(
      name: "IVerifier3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifier3>;
    getContractAt(
      name: "IVerifier4",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifier4>;
    getContractAt(
      name: "IVerifier5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifier5>;
    getContractAt(
      name: "IVerifier6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifier6>;
    getContractAt(
      name: "VAnchorEncodeInputs",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VAnchorEncodeInputs>;
    getContractAt(
      name: "BadRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadRecipient>;
    getContractAt(
      name: "ERC20Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "GovernorBravoDelegateHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegateHarness>;
    getContractAt(
      name: "GovernorBravoImmutable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoImmutable>;
    getContractAt(
      name: "GTokenWrapperMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GTokenWrapperMock>;
    getContractAt(
      name: "IDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDeployer>;
    getContractAt(
      name: "ERC20Basic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Basic>;
    getContractAt(
      name: "IUSDT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUSDT>;
    getContractAt(
      name: "MerkleTreePoseidonMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleTreePoseidonMock>;
    getContractAt(
      name: "Administered",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Administered>;
    getContractAt(
      name: "TimelockHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockHarness>;
    getContractAt(
      name: "TimelockTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockTest>;
    getContractAt(
      name: "WEBB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WEBB>;
    getContractAt(
      name: "LinkableAnchor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkableAnchor>;
    getContractAt(
      name: "SemaphoreAnchorBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SemaphoreAnchorBase>;
    getContractAt(
      name: "SemaphoreAnchorClient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SemaphoreAnchorClient>;
    getContractAt(
      name: "CompToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompToken>;
    getContractAt(
      name: "ERC20Safe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Safe>;
    getContractAt(
      name: "GovernedTokenWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernedTokenWrapper>;
    getContractAt(
      name: "TokenWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenWrapper>;
    getContractAt(
      name: "Hasher",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hasher>;
    getContractAt(
      name: "IncrementalQuinTree",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IncrementalQuinTree>;
    getContractAt(
      name: "MerkleTreePoseidon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleTreePoseidon>;
    getContractAt(
      name: "MerkleTreeWithHistoryPoseidon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleTreeWithHistoryPoseidon>;
    getContractAt(
      name: "IPoseidonT3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoseidonT3>;
    getContractAt(
      name: "PoseidonT3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoseidonT3>;
    getContractAt(
      name: "PoseidonT3Lib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoseidonT3Lib>;
    getContractAt(
      name: "PoseidonT6Lib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoseidonT6Lib>;
    getContractAt(
      name: "IHasher",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHasher>;
    getContractAt(
      name: "VMerkleTreeWithHistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VMerkleTreeWithHistory>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "Governable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Governable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "Timelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Timelock>;
    getContractAt(
      name: "LinkableVAnchor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkableVAnchor>;
    getContractAt(
      name: "VAnchor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VAnchor>;
    getContractAt(
      name: "VAnchorBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VAnchorBase>;
    getContractAt(
      name: "Verifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier>;
    getContractAt(
      name: "Verifier2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier2>;
    getContractAt(
      name: "Verifier3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier3>;
    getContractAt(
      name: "Verifier4",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier4>;
    getContractAt(
      name: "Verifier5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier5>;
    getContractAt(
      name: "Verifier6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier6>;
    getContractAt(
      name: "SemaphoreVerifier2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SemaphoreVerifier2>;
    getContractAt(
      name: "Verifier216",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier216>;
    getContractAt(
      name: "Verifier816",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier816>;
    getContractAt(
      name: "Verifier22",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier22>;
    getContractAt(
      name: "Verifier82",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier82>;
    getContractAt(
      name: "VAnchorVerifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VAnchorVerifier>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
