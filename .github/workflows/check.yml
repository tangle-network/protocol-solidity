name: check

on:
  push:
    branches: [ 'main' ]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ '**' ]
    paths-ignore:
      - 'README.md'
  
  workflow_dispatch:

jobs:
  ts:
    concurrency:
      group: ts-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: ts-check
        run: |
          yarn install --frozen-lockfile
          yarn compile
          yarn ts-check

  # This job builds and runs tests for the contracts
  tests:
    concurrency:
      group: test-${{ github.ref }}
      cancel-in-progress: true

    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.event.pull_request.draft == false
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: 
          node-version: ${{ matrix.node-version }}

      - name: Setup DVC
        uses: iterative/setup-dvc@v1
          
      - name: Fetch submodules
        run: git submodule update --init --recursive

      - name: Install dependencies 
        run: yarn install --production=false

      - name: Populate fixtures
        run: yarn fetch:fixtures

      - name: Compile the contracts and build typescript interfaces
        run: yarn build

      - name: Run test suite
        env:
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
        run: yarn test

  # This job builds and runs forge tests for the contracts
  forge-tests:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.event.pull_request.draft == false
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: 
          node-version: ${{ matrix.node-version }}
          
      - name: Fetch submodules
        run: git submodule update --init --recursive

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Show the Foundry config"
        run: "forge config"

      - name: "Generate a fuzz seed that changes weekly to avoid burning through RPC allowance"
        run: >
          echo "FOUNDRY_FUZZ_SEED=$(
            echo $(($EPOCHSECONDS - $EPOCHSECONDS % 604800))
          )" >> $GITHUB_ENV

      - name: "Run the tests"
        run: "forge test"

      - name: "Add test summary"
        run: |
          echo "## Tests result" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Passed" >> $GITHUB_STEP_SUMMARY
